{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc774\uac83\uc800\uac83 document.addEventListener(\"DOMContentLoaded\", function() { var toc = document.querySelector('div#toc-collapse'); if (toc) { toc.remove(); } });","title":"Home"},{"location":"about/","text":"Manibus vi fitque quaerunt mediis Noli amborum Lorem markdownum lumina instanti nox venerit opem ore adeo quod vox, quo tardo labori intabescere. Ranae inmoriuntur visa. Sub illos. Est infelix et plura tollere, in ultro, regique Iam, sedes docet post proelia? O non vindice Thereaque iniuria Musa inque ventis, undis aliis. Terret canum vides terque negaverit solane Meis amantior veterum Dat spiritus imagine Auras praecutiunt percurrens mihi noctem Coniunx crater tunc vota at sed dispensat Auctor condita minimo auxilium at ipsa reccidit ! Et huic supplice: dilata metas! Citi quas que? Graves et clipeus sed factis tabo miratur Pallade fert Hiberi certo tenet semesarumque serrae in. Gratia movet nuntia deprendit artus avidusque detulit pia oriens seque nam remoretur. Quem sed cur fauces enses firmat tecta Lucida secundo praesentem sagitta, in iras in, ut verti: pignora lupi. Ait est viscere hinc, in mater fecit putares ignara: loqui ille vacuas ait vultum faventibus? Pedes Rhadamanthus arvis exhalantes virginis auro praestans nec robora caedis? Stagna mihi laetitiae praesentia ipsum quas aperti , Iuppiter accensus condiderat equos parientem rabie utque, pugnabant, frementem subitae. Altissimus nam. Fateor tuum suum haut inquam tunc dextram ipsa per supra citis Arcadiae; nomina sunto. Corpora sub tot ideoque praedator et cornua, erat oblita mentem, se non montes orbis sed ducar. Unde pararet utrumque qui rapacibus dare nec Liberiore potiere et suam . Dei vim quoque aethera subiectum omnibus Iphide iubet tum et procul morte nominat ponti. Forte pharetram vimine facta etsi aequoris ministri, ille equos longeque agat, qui harenam lecto quidem qua! Monitusque fecisse nemus Moderamine pro fratrique Dea ad erubuit cadendum figurae thalamos pharetras Ignis quos magis solebam Specie vim functus ultor Fine ne, dederat lacrimisque fruge tamen incendia, nostris nec quam adsensere. Eburnas e et est saltu et negabat quidem arbore Euboica formosis sacrata nefas dedit vineta: quam? Sub Alcmena, Venerem non illam motis valle tenentem perque cortice quos.","title":"Manibus vi fitque quaerunt mediis"},{"location":"about/#manibus-vi-fitque-quaerunt-mediis","text":"","title":"Manibus vi fitque quaerunt mediis"},{"location":"about/#noli-amborum","text":"Lorem markdownum lumina instanti nox venerit opem ore adeo quod vox, quo tardo labori intabescere. Ranae inmoriuntur visa. Sub illos. Est infelix et plura tollere, in ultro, regique Iam, sedes docet post proelia? O non vindice Thereaque iniuria Musa inque ventis, undis aliis. Terret canum vides terque negaverit solane Meis amantior veterum Dat spiritus imagine Auras praecutiunt percurrens mihi noctem","title":"Noli amborum"},{"location":"about/#coniunx-crater-tunc-vota-at-sed-dispensat","text":"Auctor condita minimo auxilium at ipsa reccidit ! Et huic supplice: dilata metas! Citi quas que? Graves et clipeus sed factis tabo miratur Pallade fert Hiberi certo tenet semesarumque serrae in. Gratia movet nuntia deprendit artus avidusque detulit pia oriens seque nam remoretur.","title":"Coniunx crater tunc vota at sed dispensat"},{"location":"about/#quem-sed-cur-fauces-enses-firmat-tecta","text":"Lucida secundo praesentem sagitta, in iras in, ut verti: pignora lupi. Ait est viscere hinc, in mater fecit putares ignara: loqui ille vacuas ait vultum faventibus? Pedes Rhadamanthus arvis exhalantes virginis auro praestans nec robora caedis? Stagna mihi laetitiae praesentia ipsum quas aperti , Iuppiter accensus condiderat equos parientem rabie utque, pugnabant, frementem subitae. Altissimus nam. Fateor tuum suum haut inquam tunc dextram ipsa per supra citis Arcadiae; nomina sunto. Corpora sub tot ideoque praedator et cornua, erat oblita mentem, se non montes orbis sed ducar.","title":"Quem sed cur fauces enses firmat tecta"},{"location":"about/#unde-pararet-utrumque-qui-rapacibus-dare-nec","text":"Liberiore potiere et suam . Dei vim quoque aethera subiectum omnibus Iphide iubet tum et procul morte nominat ponti. Forte pharetram vimine facta etsi aequoris ministri, ille equos longeque agat, qui harenam lecto quidem qua! Monitusque fecisse nemus Moderamine pro fratrique Dea ad erubuit cadendum figurae thalamos pharetras Ignis quos magis solebam Specie vim functus ultor Fine ne, dederat lacrimisque fruge tamen incendia, nostris nec quam adsensere. Eburnas e et est saltu et negabat quidem arbore Euboica formosis sacrata nefas dedit vineta: quam? Sub Alcmena, Venerem non illam motis valle tenentem perque cortice quos.","title":"Unde pararet utrumque qui rapacibus dare nec"},{"location":"cprogramming/devenv/","text":"C \uac1c\ubc1c\ud658\uacbd \uc124\uc815 Linux(Ubuntu) + vim + cscope + ctags python3, clipboard\ub97c \uc9c0\uc6d0\ud558\ub294 vim 9.1 \ube4c\ub4dc commit hash - 35699f17497dcdcfdd747fedaef28f208ac6eb5f branch - master Ubuntu 22.04 \uae30\uc900 python3-distutils python3 python3-dev libncurses-dev \ub4f1\uc758 dependency \uc124\uce58 clipboard, python3\uc744 \uc9c0\uc6d0\ud558\ub294 vim\uc744 \ube4c\ub4dc\ud558\uae30 \uc704\ud574 configure \ud30c\uc77c \uc2e4\ud589 sudo apt-get update sudo apt-get install -y python3-distutils python3-dev python3 \\ libx11-dev libxt-dev libgtk2.0-dev git clone --depth=1 https://github.com/vim/vim.git cd vim/src ./configure --with-features=huge \\ --enable-python3interp \\ --enable-gui=gtk2 \\ --enable-fail-if-missing \\ --with-python3-command=/usr/bin/python3 \\ --with-python3-config-dir=/usr/lib/python3.10/config-3.10-x86_64-linux-gnu make sudo make install cscope, ctags DB \uc0dd\uc131 \uc2a4\ud06c\ub9bd\ud2b8 #!/bin/bash rm -rf tags cscope.out find . \\( -name '*.c' -o -name '*.cpp' -o -name '*.cc' -o -name '*.h' -o -name '*.s' -o -name '*S' \\) -print > cscope.files ctags -R . cscope -i cscope.files rm cscope.files vimrc set ruler syntax on filetype plugin indent on set nocompatible set cindent set termguicolors set ts=4 sw=4 set clipboard=unnamedplus set showmatch set incsearch set hlsearch set formatoptions=cro \" c: Auto-wrap comments, \" r: Auto insert the current comment leader after 'Enter' \" o: Auto insert the current comment leader after 'o' or 'O' set colorcolumn=80 \" coloring on the N'th column set cursorline set nowrap set foldmethod=manual set backspace=indent,eol,start \" Google style guide \" C++ \ud30c\uc77c\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc124\uc815 autocmd FileType cpp setlocal expandtab shiftwidth=2 softtabstop=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30, \uad04\ud638 \uc2a4\ud0c0\uc77c, \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 set tabstop=2 \" \ud0ed\uc744 \uc2a4\ud398\uc774\uc2a4 2\uac1c\ub85c \uc124\uc815 set shiftwidth=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30 \uc2dc \uc2a4\ud398\uc774\uc2a4 2\uce78 \uc0ac\uc6a9 set expandtab \" \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 \" \uacf5\ubc31 \uc81c\uac70, \ud2b8\ub808\uc77c\ub9c1 \uacf5\ubc31 \uc790\ub3d9 \uc81c\uac70 autocmd BufWritePre *.cpp,*.h :%s/\\s\\+$//e \" \uad04\ud638 \uc790\ub3d9 \ub9de\ucd94\uae30 set smartindent set autoindent \" \uc790\ub3d9 \uc904\ubc14\uafc8 \" set textwidth=80 set colorcolumn=80 \" 80\ubc88\uc9f8 \uc5f4\uc5d0 \uceec\ub7fc \uac00\uc774\ub4dc \ud45c\uc2dc highlight ColorColumn ctermbg=lightgrey \" \uceec\ub7fc \uac00\uc774\ub4dc \uc0c9\uc0c1 \uc124\uc815 map <leader>1 :b!1<CR> map <leader>2 :b!2<CR> map <leader>3 :b!3<CR> map <leader>4 :b!4<CR> map <leader>5 :b!5<CR> map <leader>6 :b!6<CR> map <leader>7 :b!7<CR> map <leader>8 :b!8<CR> map <leader>9 :b!9<CR> map <leader>0 :b!0<CR> map <Tab>h :bp<CR> map <Tab>l :bn<CR> inoremap {<CR> {<CR>}<Esc>O inoremap { {}<left> inoremap {} {}<left> inoremap ( ()<left> inoremap () ()<left> inoremap [ []<left> inoremap [] []<left> inoremap \" \"\"<left> inoremap ' ''<left> inoremap ` ``<left> \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" plugins set rtp+=$HOME/.vim/bundle/Vundle.vim call vundle#begin() \" let Vundle manage Vundle, required Plugin 'VundleVim/Vundle.vim' Plugin 'vim-airline/vim-airline' Plugin 'preservim/nerdtree' Plugin 'preservim/tagbar' Plugin 'Donaldttt/fuzzyy' Plugin 'tpope/vim-fugitive' Plugin 'airblade/vim-gitgutter' Plugin 'neoclide/coc.nvim' Plugin 'rhysd/vim-clang-format' call vundle#end() \" Brief help \" :PluginList - lists configured plugins \" :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate \" :PluginSearch foo - searches for foo; append `!` to refresh local cache \" :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" shortcuts map <Space> <leader> nmap <leader>t :TagbarToggle<CR> nnoremap <leader>n :NERDTreeToggle<CR> nnoremap <silent> <leader>fc :FuzzyColors<CR> nnoremap <silent> <leader>ff :FuzzyFiles<CR> \" airline let g:airline#extensions#tabline#enabled = 1 \" GitGutter let g:gitgutter_enabled = 1 set updatetime=100 \" DoxygenToolkit let g:DoxygenToolkit_briefTag_pre=\"@brief \" let g:DoxygenToolkit_paramTag_pre=\"@param \" let g:DoxygenToolkit_returnTag=\"@returns \" let g:DoxygenToolkit_authorName=\"Minkeun Park\" \" cscope if filereadable(\"./cscope.out\") cs add cscope.out endif \" coc.nvim \" CocInstall coc-clangd \" Use tab for trigger completion with characters ahead and navigate \" NOTE: There's always complete item selected by default, you may want to enable \" no select by `\"suggest.noselect\": true` in your configuration file \" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by \" other plugin before putting this into your config inoremap <silent><expr> <TAB> \\ coc#pum#visible() ? coc#pum#next(1) : \\ CheckBackspace() ? \"\\<Tab>\" : \\ coc#refresh() inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : \"\\<C-h>\" set pumwidth=5 \" Make <CR> to accept selected completion item or notify coc.nvim to format \" <C-g>u breaks current undo, please make your own choice inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() \\: \"\\<C-g>u\\<CR>\\<c-r>=coc#on_enter()\\<CR>\" function! CheckBackspace() abort let col = col('.') - 1 return !col || getline('.')[col - 1] =~# '\\s' endfunction \" Use <c-space> to trigger completion if has('nvim') inoremap <silent><expr> <c-space> coc#refresh() else inoremap <silent><expr> <c-@> coc#refresh() endif \" Use `[g` and `]g` to navigate diagnostics \" Use `:CocDiagnostics` to get all diagnostics of current buffer in location list \" nmap <silent> [g <Plug>(coc-diagnostic-prev) \" nmap <silent> ]g <Plug>(coc-diagnostic-next) \" GoTo code navigation nmap <silent> gd <Plug>(coc-definition) nmap <silent> gy <Plug>(coc-type-definition) nmap <silent> gi <Plug>(coc-implementation) nmap <silent> gr <Plug>(coc-references) function! ShowDocumentation() if CocAction('hasProvider', 'hover') call CocActionAsync('doHover') else call feedkeys('K', 'in') endif endfunction \" Use K to show documentation in preview window nnoremap <silent>K :call ShowDocumentation()<CR> \" Highlight the symbol and its references when holding the cursor autocmd CursorHold * silent call CocActionAsync('highlight') \" Symbol renaming nmap <leader>rn <Plug>(coc-rename) \" Formatting selected code xmap <leader>f <Plug>(coc-format-selected) nmap <leader>f <Plug>(coc-format-selected) augroup mygroup autocmd! \" Setup formatexpr specified filetype(s) autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected') \" Update signature help on jump placeholder autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp') augroup end \" Applying code actions to the selected code block \" Example: `<leader>aap` for current paragraph xmap <leader>a <Plug>(coc-codeaction-selected) nmap <leader>a <Plug>(coc-codeaction-selected) \" Remap keys for applying code actions at the cursor position nmap <leader>ac <Plug>(coc-codeaction-cursor) \" Remap keys for apply code actions affect whole buffer nmap <leader>as <Plug>(coc-codeaction-source) \" Apply the most preferred quickfix action to fix diagnostic on the current line nmap <leader>qf <Plug>(coc-fix-current) \" Remap keys for applying refactor code actions nmap <silent> <leader>re <Plug>(coc-codeaction-refactor) xmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) nmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) \" Run the Code Lens action on the current line nmap <leader>cl <Plug>(coc-codelens-action) \" Map function and class text objects \" NOTE: Requires 'textDocument.documentSymbol' support from the language server xmap if <Plug>(coc-funcobj-i) omap if <Plug>(coc-funcobj-i) xmap af <Plug>(coc-funcobj-a) omap af <Plug>(coc-funcobj-a) xmap ic <Plug>(coc-classobj-i) omap ic <Plug>(coc-classobj-i) xmap ac <Plug>(coc-classobj-a) omap ac <Plug>(coc-classobj-a) \" Remap <C-f> and <C-b> to scroll float windows/popups if has('nvim-0.4.0') || has('patch-8.2.0750') nnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" nnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" inoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(1)\\<cr>\" : \"\\<Right>\" inoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(0)\\<cr>\" : \"\\<Left>\" vnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" vnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" endif \" Use CTRL-S for selections ranges \" Requires 'textDocument/selectionRange' support of language server nmap <silent> <C-s> <Plug>(coc-range-select) xmap <silent> <C-s> <Plug>(coc-range-select) \" Add `:Format` command to format current buffer command! -nargs=0 Format :call CocActionAsync('format') \" Add `:Fold` command to fold current buffer command! -nargs=? Fold :call CocAction('fold', <f-args>) \" Add `:OR` command for organize imports of the current buffer command! -nargs=0 OR :call CocActionAsync('runCommand', 'editor.action.organizeImport') \" Add (Neo)Vim's native statusline support \" NOTE: Please see `:h coc-status` for integrations with external plugins that \" provide custom statusline: lightline.vim, vim-airline \" set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')} \" Mappings for CoCList \" Show all diagnostics nnoremap <silent><nowait> <space>a :<C-u>CocList diagnostics<cr> \" Manage extensions nnoremap <silent><nowait> <space>e :<C-u>CocList extensions<cr> \" Show commands nnoremap <silent><nowait> <space>c :<C-u>CocList commands<cr> \" Find symbol of current document nnoremap <silent><nowait> <space>o :<C-u>CocList outline<cr> \" Search workspace symbols nnoremap <silent><nowait> <space>s :<C-u>CocList -I symbols<cr> \" Do default action for next item nnoremap <silent><nowait> <space>j :<C-u>CocNext<CR> \" Do default action for previous item nnoremap <silent><nowait> <space>k :<C-u>CocPrev<CR> \" Resume latest coc list nnoremap <silent><nowait> <space>p :<C-u>CocListResume<CR> \" vim-clang-format let g:clang_format#style_options = { \\ 'BasedOnStyle': 'Google', \\ 'IndentWidth': 2, \\ } colorscheme koehler hi ColorColumn guibg=#555555 set signcolumn=yes hi SignColumn guibg=#555555 references","title":"\uac1c\ubc1c\ud658\uacbd"},{"location":"cprogramming/devenv/#c","text":"Linux(Ubuntu) + vim + cscope + ctags","title":"C \uac1c\ubc1c\ud658\uacbd \uc124\uc815"},{"location":"cprogramming/devenv/#python3-clipboard-vim-91","text":"commit hash - 35699f17497dcdcfdd747fedaef28f208ac6eb5f branch - master Ubuntu 22.04 \uae30\uc900 python3-distutils python3 python3-dev libncurses-dev \ub4f1\uc758 dependency \uc124\uce58 clipboard, python3\uc744 \uc9c0\uc6d0\ud558\ub294 vim\uc744 \ube4c\ub4dc\ud558\uae30 \uc704\ud574 configure \ud30c\uc77c \uc2e4\ud589 sudo apt-get update sudo apt-get install -y python3-distutils python3-dev python3 \\ libx11-dev libxt-dev libgtk2.0-dev git clone --depth=1 https://github.com/vim/vim.git cd vim/src ./configure --with-features=huge \\ --enable-python3interp \\ --enable-gui=gtk2 \\ --enable-fail-if-missing \\ --with-python3-command=/usr/bin/python3 \\ --with-python3-config-dir=/usr/lib/python3.10/config-3.10-x86_64-linux-gnu make sudo make install","title":"python3, clipboard\ub97c \uc9c0\uc6d0\ud558\ub294 vim 9.1 \ube4c\ub4dc"},{"location":"cprogramming/devenv/#cscope-ctags-db","text":"#!/bin/bash rm -rf tags cscope.out find . \\( -name '*.c' -o -name '*.cpp' -o -name '*.cc' -o -name '*.h' -o -name '*.s' -o -name '*S' \\) -print > cscope.files ctags -R . cscope -i cscope.files rm cscope.files","title":"cscope, ctags DB \uc0dd\uc131 \uc2a4\ud06c\ub9bd\ud2b8"},{"location":"cprogramming/devenv/#vimrc","text":"set ruler syntax on filetype plugin indent on set nocompatible set cindent set termguicolors set ts=4 sw=4 set clipboard=unnamedplus set showmatch set incsearch set hlsearch set formatoptions=cro \" c: Auto-wrap comments, \" r: Auto insert the current comment leader after 'Enter' \" o: Auto insert the current comment leader after 'o' or 'O' set colorcolumn=80 \" coloring on the N'th column set cursorline set nowrap set foldmethod=manual set backspace=indent,eol,start \" Google style guide \" C++ \ud30c\uc77c\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc124\uc815 autocmd FileType cpp setlocal expandtab shiftwidth=2 softtabstop=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30, \uad04\ud638 \uc2a4\ud0c0\uc77c, \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 set tabstop=2 \" \ud0ed\uc744 \uc2a4\ud398\uc774\uc2a4 2\uac1c\ub85c \uc124\uc815 set shiftwidth=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30 \uc2dc \uc2a4\ud398\uc774\uc2a4 2\uce78 \uc0ac\uc6a9 set expandtab \" \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 \" \uacf5\ubc31 \uc81c\uac70, \ud2b8\ub808\uc77c\ub9c1 \uacf5\ubc31 \uc790\ub3d9 \uc81c\uac70 autocmd BufWritePre *.cpp,*.h :%s/\\s\\+$//e \" \uad04\ud638 \uc790\ub3d9 \ub9de\ucd94\uae30 set smartindent set autoindent \" \uc790\ub3d9 \uc904\ubc14\uafc8 \" set textwidth=80 set colorcolumn=80 \" 80\ubc88\uc9f8 \uc5f4\uc5d0 \uceec\ub7fc \uac00\uc774\ub4dc \ud45c\uc2dc highlight ColorColumn ctermbg=lightgrey \" \uceec\ub7fc \uac00\uc774\ub4dc \uc0c9\uc0c1 \uc124\uc815 map <leader>1 :b!1<CR> map <leader>2 :b!2<CR> map <leader>3 :b!3<CR> map <leader>4 :b!4<CR> map <leader>5 :b!5<CR> map <leader>6 :b!6<CR> map <leader>7 :b!7<CR> map <leader>8 :b!8<CR> map <leader>9 :b!9<CR> map <leader>0 :b!0<CR> map <Tab>h :bp<CR> map <Tab>l :bn<CR> inoremap {<CR> {<CR>}<Esc>O inoremap { {}<left> inoremap {} {}<left> inoremap ( ()<left> inoremap () ()<left> inoremap [ []<left> inoremap [] []<left> inoremap \" \"\"<left> inoremap ' ''<left> inoremap ` ``<left> \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" plugins set rtp+=$HOME/.vim/bundle/Vundle.vim call vundle#begin() \" let Vundle manage Vundle, required Plugin 'VundleVim/Vundle.vim' Plugin 'vim-airline/vim-airline' Plugin 'preservim/nerdtree' Plugin 'preservim/tagbar' Plugin 'Donaldttt/fuzzyy' Plugin 'tpope/vim-fugitive' Plugin 'airblade/vim-gitgutter' Plugin 'neoclide/coc.nvim' Plugin 'rhysd/vim-clang-format' call vundle#end() \" Brief help \" :PluginList - lists configured plugins \" :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate \" :PluginSearch foo - searches for foo; append `!` to refresh local cache \" :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" shortcuts map <Space> <leader> nmap <leader>t :TagbarToggle<CR> nnoremap <leader>n :NERDTreeToggle<CR> nnoremap <silent> <leader>fc :FuzzyColors<CR> nnoremap <silent> <leader>ff :FuzzyFiles<CR> \" airline let g:airline#extensions#tabline#enabled = 1 \" GitGutter let g:gitgutter_enabled = 1 set updatetime=100 \" DoxygenToolkit let g:DoxygenToolkit_briefTag_pre=\"@brief \" let g:DoxygenToolkit_paramTag_pre=\"@param \" let g:DoxygenToolkit_returnTag=\"@returns \" let g:DoxygenToolkit_authorName=\"Minkeun Park\" \" cscope if filereadable(\"./cscope.out\") cs add cscope.out endif \" coc.nvim \" CocInstall coc-clangd \" Use tab for trigger completion with characters ahead and navigate \" NOTE: There's always complete item selected by default, you may want to enable \" no select by `\"suggest.noselect\": true` in your configuration file \" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by \" other plugin before putting this into your config inoremap <silent><expr> <TAB> \\ coc#pum#visible() ? coc#pum#next(1) : \\ CheckBackspace() ? \"\\<Tab>\" : \\ coc#refresh() inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : \"\\<C-h>\" set pumwidth=5 \" Make <CR> to accept selected completion item or notify coc.nvim to format \" <C-g>u breaks current undo, please make your own choice inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() \\: \"\\<C-g>u\\<CR>\\<c-r>=coc#on_enter()\\<CR>\" function! CheckBackspace() abort let col = col('.') - 1 return !col || getline('.')[col - 1] =~# '\\s' endfunction \" Use <c-space> to trigger completion if has('nvim') inoremap <silent><expr> <c-space> coc#refresh() else inoremap <silent><expr> <c-@> coc#refresh() endif \" Use `[g` and `]g` to navigate diagnostics \" Use `:CocDiagnostics` to get all diagnostics of current buffer in location list \" nmap <silent> [g <Plug>(coc-diagnostic-prev) \" nmap <silent> ]g <Plug>(coc-diagnostic-next) \" GoTo code navigation nmap <silent> gd <Plug>(coc-definition) nmap <silent> gy <Plug>(coc-type-definition) nmap <silent> gi <Plug>(coc-implementation) nmap <silent> gr <Plug>(coc-references) function! ShowDocumentation() if CocAction('hasProvider', 'hover') call CocActionAsync('doHover') else call feedkeys('K', 'in') endif endfunction \" Use K to show documentation in preview window nnoremap <silent>K :call ShowDocumentation()<CR> \" Highlight the symbol and its references when holding the cursor autocmd CursorHold * silent call CocActionAsync('highlight') \" Symbol renaming nmap <leader>rn <Plug>(coc-rename) \" Formatting selected code xmap <leader>f <Plug>(coc-format-selected) nmap <leader>f <Plug>(coc-format-selected) augroup mygroup autocmd! \" Setup formatexpr specified filetype(s) autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected') \" Update signature help on jump placeholder autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp') augroup end \" Applying code actions to the selected code block \" Example: `<leader>aap` for current paragraph xmap <leader>a <Plug>(coc-codeaction-selected) nmap <leader>a <Plug>(coc-codeaction-selected) \" Remap keys for applying code actions at the cursor position nmap <leader>ac <Plug>(coc-codeaction-cursor) \" Remap keys for apply code actions affect whole buffer nmap <leader>as <Plug>(coc-codeaction-source) \" Apply the most preferred quickfix action to fix diagnostic on the current line nmap <leader>qf <Plug>(coc-fix-current) \" Remap keys for applying refactor code actions nmap <silent> <leader>re <Plug>(coc-codeaction-refactor) xmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) nmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) \" Run the Code Lens action on the current line nmap <leader>cl <Plug>(coc-codelens-action) \" Map function and class text objects \" NOTE: Requires 'textDocument.documentSymbol' support from the language server xmap if <Plug>(coc-funcobj-i) omap if <Plug>(coc-funcobj-i) xmap af <Plug>(coc-funcobj-a) omap af <Plug>(coc-funcobj-a) xmap ic <Plug>(coc-classobj-i) omap ic <Plug>(coc-classobj-i) xmap ac <Plug>(coc-classobj-a) omap ac <Plug>(coc-classobj-a) \" Remap <C-f> and <C-b> to scroll float windows/popups if has('nvim-0.4.0') || has('patch-8.2.0750') nnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" nnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" inoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(1)\\<cr>\" : \"\\<Right>\" inoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(0)\\<cr>\" : \"\\<Left>\" vnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" vnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" endif \" Use CTRL-S for selections ranges \" Requires 'textDocument/selectionRange' support of language server nmap <silent> <C-s> <Plug>(coc-range-select) xmap <silent> <C-s> <Plug>(coc-range-select) \" Add `:Format` command to format current buffer command! -nargs=0 Format :call CocActionAsync('format') \" Add `:Fold` command to fold current buffer command! -nargs=? Fold :call CocAction('fold', <f-args>) \" Add `:OR` command for organize imports of the current buffer command! -nargs=0 OR :call CocActionAsync('runCommand', 'editor.action.organizeImport') \" Add (Neo)Vim's native statusline support \" NOTE: Please see `:h coc-status` for integrations with external plugins that \" provide custom statusline: lightline.vim, vim-airline \" set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')} \" Mappings for CoCList \" Show all diagnostics nnoremap <silent><nowait> <space>a :<C-u>CocList diagnostics<cr> \" Manage extensions nnoremap <silent><nowait> <space>e :<C-u>CocList extensions<cr> \" Show commands nnoremap <silent><nowait> <space>c :<C-u>CocList commands<cr> \" Find symbol of current document nnoremap <silent><nowait> <space>o :<C-u>CocList outline<cr> \" Search workspace symbols nnoremap <silent><nowait> <space>s :<C-u>CocList -I symbols<cr> \" Do default action for next item nnoremap <silent><nowait> <space>j :<C-u>CocNext<CR> \" Do default action for previous item nnoremap <silent><nowait> <space>k :<C-u>CocPrev<CR> \" Resume latest coc list nnoremap <silent><nowait> <space>p :<C-u>CocListResume<CR> \" vim-clang-format let g:clang_format#style_options = { \\ 'BasedOnStyle': 'Google', \\ 'IndentWidth': 2, \\ } colorscheme koehler hi ColorColumn guibg=#555555 set signcolumn=yes hi SignColumn guibg=#555555","title":"vimrc"},{"location":"cprogramming/devenv/#references","text":"","title":"references"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/","text":"OpenSSL PKC12S API OpenSSL\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc591\ud55c \uc778\uc99d\uc11c\ub97c \uc548\uc804\ud558\uac8c \ud558\ub098\uc758 \ud30c\uc77c\ub85c \ubcf4\uad00\ud560 \uc218 \uc788\ub2e4 PKCS#12 Public Key Cryptography Standards RSA Security\uc5d0\uc11c \uc81c\uc815\ud55c public-key cryptography \ud45c\uc900\ub4e4\uc758 \ubb36\uc74c\uc744 PKCS\ub77c\uace0 \ud55c\ub2e4 \uadf8 \uc911\uc5d0\uc11c\ub3c4 PKCS#12\ub294 \uc5ec\ub7ec \uac1c\uc758 cryptography object\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud558\ub294 \ud30c\uc77c\uc758 \ud3ec\ub9f7\uc744 \uc815\uc758\ud55c\ub2e4 \ubcf4\ud1b5 private key\uc640 X.509 certificate \ub97c \ubb36\uac70\ub098(bundle) \ubaa8\ub4e0 chain of trust(\uc77c\ub828\uc758 \uc778\uc99d\uc11c\ub4e4)\ub97c \ubb36\ub294\ub370 \uc0ac\uc6a9\ud55c\ub2e4 X.509 - public key certificate(\uc778\uc99d\uc11c) \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 chain of trust - root certificate(CA\uc5d0\uc11c \ubc1c\uae09\ud55c \uc778\uc99d\uc11c)\uc5d0\uc11c\ubd80\ud130 end entity(\uc560\ud50c\ub9ac\ucf00\uc774\uc158, \uc0ac\uc6a9\uc790, \uc7a5\uce58 \ub4f1)\uae4c\uc9c0 \uc774\uc5b4\uc9c0\ub294 \uac80\uc99d CA(Certificate Authority) - \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc778\uc99d\uae30\uad00. \ub514\uc9c0\ud138 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud558\uace0 \uad00\ub9ac\ud55c\ub2e4 OpenSSL\uc758 pkcs12 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77d\uc744 \uc218 \uc788\ub2e4 \uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c(Public Key Certificate) \uacf5\uac1c\ud0a4\uc758 \uc9c4\uc704 \uc5ec\ubd80 \ub97c \ubcf4\uc99d\ud558\uae30 \uc704\ud55c \ubb38\uc11c\ub85c \uacf5\uac1c\ud0a4 \uc790\uccb4\uc640 \uadf8\uc640 \uad00\ub828\ub41c \uc815\ubcf4\ub97c \ud3ec\ud568\ud55c\ub2e4 public key \uacf5\uac1c\ud0a4\ub97c \uc18c\uc720\ud55c subject\uc758 \uc2e0\uc6d0\uc5d0 \uad00\ud55c \uc815\ubcf4 \uc774 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud55c CA\uc758 \uc804\uc790\uc11c\uba85 \ub2e8\ub9d0 A\uc640 \uc11c\ubc84 B\uac00 \ud1b5\uc2e0\ud560\ub54c \uc11c\ubc84 B\ub294 \uc790\uc2e0\uc758 \uc778\uc99d\uc11c\ub97c A\uc5d0\uac8c \ubcf4\ub0b8\ub2e4. A\ub294 \uc774 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uc5ec B\uac00 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 entity\uc784\uc744 \ud655\uc2e0\ud55c\ub2e4 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 CA\uc758 \uc804\uc790\uc11c\uba85\uc774 \uc720\ud6a8\ud55c\uc9c0\ub97c \uac80\uc0ac\ud574\uc57c \ud558\ub294\ub370 \uadf8\ub7ec\ub824\uba74 CA\uc758 \uacf5\uac1c\ud0a4\ub97c \uc54c\uc544\uc57c\ud55c\ub2e4. CA\uc758 \uacf5\uac1c\ud0a4\ub294 \ub2e8\ub9d0A(e.g. web browser)\uc758 root certificate\uc5d0 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4 E1\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc0c1\uc704 \uc8fc\uccb4\uc778 E2\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 E2\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\ub824\uba74 \uc0c1\uc704 \uc8fc\uccb4\uc778 E3\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 ... \uc774\ub7f0 \uccb4\uc778\uc758 \uac00\uc7a5 \uc704\uc5d0 \uc788\ub294 \uc778\uc99d\uc11c\uac00 root certificate\uc774\ub2e4 \uc774\ub7f0 \ub8e8\ud2b8 \uc778\uc99d\uc11c\ub294 \ud558\ub4dc\uc6e8\uc5b4 \uc81c\uc870\uc0ac\uc5d0\uc11c \ubc30\ud3ec\ud55c\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85(Digital Signature) electronic signature(\uc804\uc790 \uc11c\uba85)\uc774\ub77c\uace0\ub3c4 \ud55c\ub2e4 \ub514\uc9c0\ud138 \uc815\ubcf4\uac00 \uc9c4\ubcf8\uc784\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc218\ud559\uc801 \ubc29\ubc95(scheme)\uc774\ub2e4 A\uac00 B\uc5d0\uac8c \uba54\uc138\uc9c0\uc640 \uc790\uc2e0\uc758 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac19\uc774 \ubcf4\ub0b8\ub2e4 --> B\ub294 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac80\uc99d \ud558\uc5ec \uba54\uc138\uc9c0\uac00 A\ub85c\ubd80\ud130 \uc628\uac83\uc784\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 A\ub294 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\uac00 \ud3ec\ud568\ub41c \uc778\uc99d\uc11c\ub97c B\uc5d0\uac8c \uc81c\uacf5\ud55c\ub2e4 A\uc758 \uacf5\uac1c\ud0a4\ub85c \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ubcf5\ud638\ud654\ud558\uba74 \uba54\uc138\uc9c0\uc758 \ud574\uc2dc\uac12\uc774 \ub098\uc628\ub2e4. \ub9e4\uc138\uc9c0\ub97c \ud574\uc2f1\ud55c \uac12\uacfc \uc774 \uac12\uc744 \ube44\uad50\ud574\uc11c \uba54\uc138\uc9c0\uac00 \ubcc0\uc870\ub418\uc9c0 \uc54a\uc558\uc74c\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc740 \ub300\ubd80\ubd84\uc758 \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c\uc5d0 \ud3ec\ud568\ub418\ub294 \uc694\uc18c\uc774\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ud1b5\ud574 \ub370\uc774\ud130\uac00 \uc704\uc870\ub418\uc5c8\uac70\ub098 \ubd80 \ubcc0\uacbd(tampering)\ub418\uc5c8\uc74c\uc744 \ud0d0\uc9c0\ud560 \uc218 \uc788\ub2e4 By FlippyFlink - Combined changed the image https://en.wikipedia.org/wiki/File:Public_key_encryption.svg from encryption to signing., CC BY-SA 4.0 , Link Alice\uc758 \uacf5\uac1c\ud0a4\uac00 \uc9c4\uc9dc\uc784\uc744 \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 Alice\uac00 CA\ub85c\ubd80\ud130 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\ub97c \ud3ec\ud568\ud558\ub294 CA\ub97c \ubc1c\uae09\ubc1b\uc544\uc11c Bob\uc5d0\uac8c \uc804\ub2ec\ud558\ub294 \uac83\uc774\ub2e4 \ub2e8, B\uc758 \ub8e8\ud2b8 \uc778\uc99d\uc11c\uc5d0 CA\uc758 \uacf5\uac1c\ud0a4\uac00 \uc800\uc7a5\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4 ASN1(Abstract Syntax Notation 1) \ub370\uc774\ud130\uc758 \uad6c\uc870(\ud30c\uc77c\uc758 \ud3ec\ub9f7\uacfc \ub3d9\uce58)\ub97c \uc815\uc758\ud558\ub294 \ud45c\uc900 \uc5b8\uc5b4 \uc8fc\ub85c \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0, \uc778\uc99d\uc11c, \ubcf4\uc548 \ud504\ub85c\ud1a0\ucf5c \ub4f1\uc5d0\uc11c \ub370\uc774\ud130\uc758 \ud45c\ud604 \ubc29\uc2dd\uacfc \uc778\ucf54\ub529\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9 ASN.1\uc740 \ud2b9\ud788 \ubcf4\uc548 \uad00\ub828 \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \ub110\ub9ac \uc0ac\uc6a9\ub428 ASN.1\uc758 \uc8fc\uc694 \uc9c1\ub82c\ud654 \ud3ec\ub9f7\uc740 DER(Distinguished Encoding Rules) \uc774\ub2e4 struct point { int x, y; char label[10]; }; Point ::= SEQUENCE { x INTEGER, y INTEGER, label UTF8String } OpenSSL API EVP_PKEY - \uacf5\uac1c\ud0a4\uc640 \ube44\ubc00\ud0a4\ub97c \uc800\uc7a5\ud558\ub294 \uad6c\uc870\uccb4 X509 - X.509\uc778\uc99d\uc11c\ub97c \ud45c\ud604\ud558\ub294 \uad6c\uc870\uccb4 X.509\ub294 \uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 PKCS12 *PKCS12_create(const char *pass, const char *name, EVP_PKEY *pkey, X509 *cert, STACK_OF(X509) *ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype); pass - \uc778\uc99d\uc11c\ub97c \ubcf4\ud638\ud560 \ube44\ubc00\ubc88\ud638 name - \uc778\uc99d\uc11c\ub97c \uac00\ub9ac\ud0a4\ub294 \uc774\ub984\uc744 \uc9c0\uc815 pkey - \uac1c\uc778 \ud0a4\uac00 \uc800\uc7a5\ub41c \uacf5\uac04 cert - pkey\ub97c \ubcf4\uc99d\ud558\ub294 \uc778\uc99d\uc11c ca - NULL \uc804\ub2ec \uac00\ub2a5. CA\uac00 \ubc1c\uae09\ud55c \uc778\uc99d\uc11c. cert\ub97c \uac80\uc99d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4 int i2d_TYPE_fp(FILE *fp, TYPE *a); TYPE \uc778\uc2a4\ud134\uc2a4\ub97c DER \ud3ec\ub9f7\uc73c\ub85c \uc778\ucf54\ub529 \ud558\uc5ec fp\uc5d0 \uc4f4\ub2e4 PKCS#12 \uc0dd\uc131 \ud504\ub85c\uadf8\ub7a8 usage: ./pkwrite <X.509\ud30c\uc77c> <\ube44\ubc00\ubc88\ud638> <name> <p12file> \uc778\uc99d\uc11c(X.509\ud30c\uc77c)\ub97c \uc800\uc7a5\ud558\ub294 p12\ud30c\uc77c\uc744 \uc0c8\ub85c \uc0dd\uc131\ud55c\ub2e4 p12file \ub0b4\ubd80\uc5d0\uc11c \uc774 \uc778\uc99d\uc11c\uc758 \uc774\ub984\uc740 name\uc73c\ub85c \uc124\uc815\ud558\uace0 \ube44\ubc00\ubc88\ud638\ub85c \ubcf4\ud638\ud55c\ub2e4 /* * Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file creator */ int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey; X509 *cert; PKCS12 *p12; if (argc != 5) { fprintf(stderr, \"Usage: pkwrite infile password name p12file\\n\"); exit(1); } OpenSSL_add_all_algorithms(); ERR_load_crypto_strings(); if ((fp = fopen(argv[1], \"r\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(1); } cert = PEM_read_X509(fp, NULL, NULL, NULL); rewind(fp); pkey = PEM_read_PrivateKey(fp, NULL, NULL, NULL); fclose(fp); p12 = PKCS12_create(argv[2], argv[3], pkey, cert, NULL, 0, 0, 0, 0, 0); if (!p12) { fprintf(stderr, \"Error creating PKCS#12 structure\\n\"); ERR_print_errors_fp(stderr); exit(1); } if ((fp = fopen(argv[4], \"wb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); ERR_print_errors_fp(stderr); exit(1); } i2d_PKCS12_fp(fp, p12); PKCS12_free(p12); fclose(fp); return 0; } PKCS#12 \uc77d\uae30 \ud504\ub85c\uadf8\ub7a8 /* * Copyright 2000-2019 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file reader */ static char *find_friendly_name(PKCS12 *p12) { STACK_OF(PKCS7) *safes; int n, m; char *name = NULL; PKCS7 *safe; STACK_OF(PKCS12_SAFEBAG) *bags; PKCS12_SAFEBAG *bag; if ((safes = PKCS12_unpack_authsafes(p12)) == NULL) return NULL; for (n = 0; n < sk_PKCS7_num(safes) && name == NULL; n++) { safe = sk_PKCS7_value(safes, n); if (OBJ_obj2nid(safe->type) != NID_pkcs7_data || (bags = PKCS12_unpack_p7data(safe)) == NULL) continue; for (m = 0; m < sk_PKCS12_SAFEBAG_num(bags) && name == NULL; m++) { bag = sk_PKCS12_SAFEBAG_value(bags, m); name = PKCS12_get_friendlyname(bag); } sk_PKCS12_SAFEBAG_pop_free(bags, PKCS12_SAFEBAG_free); } sk_PKCS7_pop_free(safes, PKCS7_free); return name; } int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey = NULL; X509 *cert = NULL; STACK_OF(X509) *ca = NULL; PKCS12 *p12 = NULL; char *name = NULL; int i, ret = EXIT_FAILURE; if (argc != 4) { fprintf(stderr, \"Usage: pkread p12file password opfile\\n\"); exit(EXIT_FAILURE); } if ((fp = fopen(argv[1], \"rb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(EXIT_FAILURE); } p12 = d2i_PKCS12_fp(fp, NULL); fclose(fp); if (p12 == NULL) { fprintf(stderr, \"Error reading PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } if (!PKCS12_parse(p12, argv[2], &pkey, &cert, &ca)) { fprintf(stderr, \"Error parsing PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } name = find_friendly_name(p12); PKCS12_free(p12); if ((fp = fopen(argv[3], \"w\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); goto err; } if (name != NULL) fprintf(fp, \"***Friendly Name***\\n%s\\n\", name); if (pkey != NULL) { fprintf(fp, \"***Private Key***\\n\"); PEM_write_PrivateKey(fp, pkey, NULL, NULL, 0, NULL, NULL); } if (cert != NULL) { fprintf(fp, \"***User Certificate***\\n\"); PEM_write_X509_AUX(fp, cert); } if (ca != NULL && sk_X509_num(ca) > 0) { fprintf(fp, \"***Other Certificates***\\n\"); for (i = 0; i < sk_X509_num(ca); i++) PEM_write_X509_AUX(fp, sk_X509_value(ca, i)); } fclose(fp); ret = EXIT_SUCCESS; err: OPENSSL_free(name); X509_free(cert); EVP_PKEY_free(pkey); sk_X509_pop_free(ca, X509_free); return ret; } references [WIKIPEDIA]PCKS [University of Toronto] OpenSSL Tutorial [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkread.c [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkwrite.c [OpenSSL Documentation 1.1.1] [OpenSSL Documentation 3.0] migration_guide [WIKIPEDIA] ASN1 A Warm Welcome to ASN.1 and DER","title":"OpenSSL PKCS API"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#openssl-pkc12s-api","text":"OpenSSL\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc591\ud55c \uc778\uc99d\uc11c\ub97c \uc548\uc804\ud558\uac8c \ud558\ub098\uc758 \ud30c\uc77c\ub85c \ubcf4\uad00\ud560 \uc218 \uc788\ub2e4","title":"OpenSSL PKC12S API"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#pkcs12","text":"Public Key Cryptography Standards RSA Security\uc5d0\uc11c \uc81c\uc815\ud55c public-key cryptography \ud45c\uc900\ub4e4\uc758 \ubb36\uc74c\uc744 PKCS\ub77c\uace0 \ud55c\ub2e4 \uadf8 \uc911\uc5d0\uc11c\ub3c4 PKCS#12\ub294 \uc5ec\ub7ec \uac1c\uc758 cryptography object\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud558\ub294 \ud30c\uc77c\uc758 \ud3ec\ub9f7\uc744 \uc815\uc758\ud55c\ub2e4 \ubcf4\ud1b5 private key\uc640 X.509 certificate \ub97c \ubb36\uac70\ub098(bundle) \ubaa8\ub4e0 chain of trust(\uc77c\ub828\uc758 \uc778\uc99d\uc11c\ub4e4)\ub97c \ubb36\ub294\ub370 \uc0ac\uc6a9\ud55c\ub2e4 X.509 - public key certificate(\uc778\uc99d\uc11c) \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 chain of trust - root certificate(CA\uc5d0\uc11c \ubc1c\uae09\ud55c \uc778\uc99d\uc11c)\uc5d0\uc11c\ubd80\ud130 end entity(\uc560\ud50c\ub9ac\ucf00\uc774\uc158, \uc0ac\uc6a9\uc790, \uc7a5\uce58 \ub4f1)\uae4c\uc9c0 \uc774\uc5b4\uc9c0\ub294 \uac80\uc99d CA(Certificate Authority) - \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc778\uc99d\uae30\uad00. \ub514\uc9c0\ud138 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud558\uace0 \uad00\ub9ac\ud55c\ub2e4 OpenSSL\uc758 pkcs12 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77d\uc744 \uc218 \uc788\ub2e4","title":"PKCS#12"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#public-key-certificate","text":"\uacf5\uac1c\ud0a4\uc758 \uc9c4\uc704 \uc5ec\ubd80 \ub97c \ubcf4\uc99d\ud558\uae30 \uc704\ud55c \ubb38\uc11c\ub85c \uacf5\uac1c\ud0a4 \uc790\uccb4\uc640 \uadf8\uc640 \uad00\ub828\ub41c \uc815\ubcf4\ub97c \ud3ec\ud568\ud55c\ub2e4 public key \uacf5\uac1c\ud0a4\ub97c \uc18c\uc720\ud55c subject\uc758 \uc2e0\uc6d0\uc5d0 \uad00\ud55c \uc815\ubcf4 \uc774 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud55c CA\uc758 \uc804\uc790\uc11c\uba85 \ub2e8\ub9d0 A\uc640 \uc11c\ubc84 B\uac00 \ud1b5\uc2e0\ud560\ub54c \uc11c\ubc84 B\ub294 \uc790\uc2e0\uc758 \uc778\uc99d\uc11c\ub97c A\uc5d0\uac8c \ubcf4\ub0b8\ub2e4. A\ub294 \uc774 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uc5ec B\uac00 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 entity\uc784\uc744 \ud655\uc2e0\ud55c\ub2e4 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 CA\uc758 \uc804\uc790\uc11c\uba85\uc774 \uc720\ud6a8\ud55c\uc9c0\ub97c \uac80\uc0ac\ud574\uc57c \ud558\ub294\ub370 \uadf8\ub7ec\ub824\uba74 CA\uc758 \uacf5\uac1c\ud0a4\ub97c \uc54c\uc544\uc57c\ud55c\ub2e4. CA\uc758 \uacf5\uac1c\ud0a4\ub294 \ub2e8\ub9d0A(e.g. web browser)\uc758 root certificate\uc5d0 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4 E1\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc0c1\uc704 \uc8fc\uccb4\uc778 E2\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 E2\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\ub824\uba74 \uc0c1\uc704 \uc8fc\uccb4\uc778 E3\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 ... \uc774\ub7f0 \uccb4\uc778\uc758 \uac00\uc7a5 \uc704\uc5d0 \uc788\ub294 \uc778\uc99d\uc11c\uac00 root certificate\uc774\ub2e4 \uc774\ub7f0 \ub8e8\ud2b8 \uc778\uc99d\uc11c\ub294 \ud558\ub4dc\uc6e8\uc5b4 \uc81c\uc870\uc0ac\uc5d0\uc11c \ubc30\ud3ec\ud55c\ub2e4","title":"\uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c(Public Key Certificate)"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#digital-signature","text":"electronic signature(\uc804\uc790 \uc11c\uba85)\uc774\ub77c\uace0\ub3c4 \ud55c\ub2e4 \ub514\uc9c0\ud138 \uc815\ubcf4\uac00 \uc9c4\ubcf8\uc784\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc218\ud559\uc801 \ubc29\ubc95(scheme)\uc774\ub2e4 A\uac00 B\uc5d0\uac8c \uba54\uc138\uc9c0\uc640 \uc790\uc2e0\uc758 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac19\uc774 \ubcf4\ub0b8\ub2e4 --> B\ub294 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac80\uc99d \ud558\uc5ec \uba54\uc138\uc9c0\uac00 A\ub85c\ubd80\ud130 \uc628\uac83\uc784\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 A\ub294 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\uac00 \ud3ec\ud568\ub41c \uc778\uc99d\uc11c\ub97c B\uc5d0\uac8c \uc81c\uacf5\ud55c\ub2e4 A\uc758 \uacf5\uac1c\ud0a4\ub85c \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ubcf5\ud638\ud654\ud558\uba74 \uba54\uc138\uc9c0\uc758 \ud574\uc2dc\uac12\uc774 \ub098\uc628\ub2e4. \ub9e4\uc138\uc9c0\ub97c \ud574\uc2f1\ud55c \uac12\uacfc \uc774 \uac12\uc744 \ube44\uad50\ud574\uc11c \uba54\uc138\uc9c0\uac00 \ubcc0\uc870\ub418\uc9c0 \uc54a\uc558\uc74c\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc740 \ub300\ubd80\ubd84\uc758 \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c\uc5d0 \ud3ec\ud568\ub418\ub294 \uc694\uc18c\uc774\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ud1b5\ud574 \ub370\uc774\ud130\uac00 \uc704\uc870\ub418\uc5c8\uac70\ub098 \ubd80 \ubcc0\uacbd(tampering)\ub418\uc5c8\uc74c\uc744 \ud0d0\uc9c0\ud560 \uc218 \uc788\ub2e4 By FlippyFlink - Combined changed the image https://en.wikipedia.org/wiki/File:Public_key_encryption.svg from encryption to signing., CC BY-SA 4.0 , Link Alice\uc758 \uacf5\uac1c\ud0a4\uac00 \uc9c4\uc9dc\uc784\uc744 \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 Alice\uac00 CA\ub85c\ubd80\ud130 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\ub97c \ud3ec\ud568\ud558\ub294 CA\ub97c \ubc1c\uae09\ubc1b\uc544\uc11c Bob\uc5d0\uac8c \uc804\ub2ec\ud558\ub294 \uac83\uc774\ub2e4 \ub2e8, B\uc758 \ub8e8\ud2b8 \uc778\uc99d\uc11c\uc5d0 CA\uc758 \uacf5\uac1c\ud0a4\uac00 \uc800\uc7a5\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4","title":"\ub514\uc9c0\ud138 \uc11c\uba85(Digital Signature)"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#asn1abstract-syntax-notation-1","text":"\ub370\uc774\ud130\uc758 \uad6c\uc870(\ud30c\uc77c\uc758 \ud3ec\ub9f7\uacfc \ub3d9\uce58)\ub97c \uc815\uc758\ud558\ub294 \ud45c\uc900 \uc5b8\uc5b4 \uc8fc\ub85c \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0, \uc778\uc99d\uc11c, \ubcf4\uc548 \ud504\ub85c\ud1a0\ucf5c \ub4f1\uc5d0\uc11c \ub370\uc774\ud130\uc758 \ud45c\ud604 \ubc29\uc2dd\uacfc \uc778\ucf54\ub529\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9 ASN.1\uc740 \ud2b9\ud788 \ubcf4\uc548 \uad00\ub828 \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \ub110\ub9ac \uc0ac\uc6a9\ub428 ASN.1\uc758 \uc8fc\uc694 \uc9c1\ub82c\ud654 \ud3ec\ub9f7\uc740 DER(Distinguished Encoding Rules) \uc774\ub2e4 struct point { int x, y; char label[10]; }; Point ::= SEQUENCE { x INTEGER, y INTEGER, label UTF8String }","title":"ASN1(Abstract Syntax Notation 1)"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#openssl-api","text":"EVP_PKEY - \uacf5\uac1c\ud0a4\uc640 \ube44\ubc00\ud0a4\ub97c \uc800\uc7a5\ud558\ub294 \uad6c\uc870\uccb4 X509 - X.509\uc778\uc99d\uc11c\ub97c \ud45c\ud604\ud558\ub294 \uad6c\uc870\uccb4 X.509\ub294 \uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 PKCS12 *PKCS12_create(const char *pass, const char *name, EVP_PKEY *pkey, X509 *cert, STACK_OF(X509) *ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype); pass - \uc778\uc99d\uc11c\ub97c \ubcf4\ud638\ud560 \ube44\ubc00\ubc88\ud638 name - \uc778\uc99d\uc11c\ub97c \uac00\ub9ac\ud0a4\ub294 \uc774\ub984\uc744 \uc9c0\uc815 pkey - \uac1c\uc778 \ud0a4\uac00 \uc800\uc7a5\ub41c \uacf5\uac04 cert - pkey\ub97c \ubcf4\uc99d\ud558\ub294 \uc778\uc99d\uc11c ca - NULL \uc804\ub2ec \uac00\ub2a5. CA\uac00 \ubc1c\uae09\ud55c \uc778\uc99d\uc11c. cert\ub97c \uac80\uc99d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4 int i2d_TYPE_fp(FILE *fp, TYPE *a); TYPE \uc778\uc2a4\ud134\uc2a4\ub97c DER \ud3ec\ub9f7\uc73c\ub85c \uc778\ucf54\ub529 \ud558\uc5ec fp\uc5d0 \uc4f4\ub2e4","title":"OpenSSL API"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#pkcs12_1","text":"usage: ./pkwrite <X.509\ud30c\uc77c> <\ube44\ubc00\ubc88\ud638> <name> <p12file> \uc778\uc99d\uc11c(X.509\ud30c\uc77c)\ub97c \uc800\uc7a5\ud558\ub294 p12\ud30c\uc77c\uc744 \uc0c8\ub85c \uc0dd\uc131\ud55c\ub2e4 p12file \ub0b4\ubd80\uc5d0\uc11c \uc774 \uc778\uc99d\uc11c\uc758 \uc774\ub984\uc740 name\uc73c\ub85c \uc124\uc815\ud558\uace0 \ube44\ubc00\ubc88\ud638\ub85c \ubcf4\ud638\ud55c\ub2e4 /* * Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file creator */ int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey; X509 *cert; PKCS12 *p12; if (argc != 5) { fprintf(stderr, \"Usage: pkwrite infile password name p12file\\n\"); exit(1); } OpenSSL_add_all_algorithms(); ERR_load_crypto_strings(); if ((fp = fopen(argv[1], \"r\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(1); } cert = PEM_read_X509(fp, NULL, NULL, NULL); rewind(fp); pkey = PEM_read_PrivateKey(fp, NULL, NULL, NULL); fclose(fp); p12 = PKCS12_create(argv[2], argv[3], pkey, cert, NULL, 0, 0, 0, 0, 0); if (!p12) { fprintf(stderr, \"Error creating PKCS#12 structure\\n\"); ERR_print_errors_fp(stderr); exit(1); } if ((fp = fopen(argv[4], \"wb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); ERR_print_errors_fp(stderr); exit(1); } i2d_PKCS12_fp(fp, p12); PKCS12_free(p12); fclose(fp); return 0; }","title":"PKCS#12 \uc0dd\uc131 \ud504\ub85c\uadf8\ub7a8"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#pkcs12_2","text":"/* * Copyright 2000-2019 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file reader */ static char *find_friendly_name(PKCS12 *p12) { STACK_OF(PKCS7) *safes; int n, m; char *name = NULL; PKCS7 *safe; STACK_OF(PKCS12_SAFEBAG) *bags; PKCS12_SAFEBAG *bag; if ((safes = PKCS12_unpack_authsafes(p12)) == NULL) return NULL; for (n = 0; n < sk_PKCS7_num(safes) && name == NULL; n++) { safe = sk_PKCS7_value(safes, n); if (OBJ_obj2nid(safe->type) != NID_pkcs7_data || (bags = PKCS12_unpack_p7data(safe)) == NULL) continue; for (m = 0; m < sk_PKCS12_SAFEBAG_num(bags) && name == NULL; m++) { bag = sk_PKCS12_SAFEBAG_value(bags, m); name = PKCS12_get_friendlyname(bag); } sk_PKCS12_SAFEBAG_pop_free(bags, PKCS12_SAFEBAG_free); } sk_PKCS7_pop_free(safes, PKCS7_free); return name; } int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey = NULL; X509 *cert = NULL; STACK_OF(X509) *ca = NULL; PKCS12 *p12 = NULL; char *name = NULL; int i, ret = EXIT_FAILURE; if (argc != 4) { fprintf(stderr, \"Usage: pkread p12file password opfile\\n\"); exit(EXIT_FAILURE); } if ((fp = fopen(argv[1], \"rb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(EXIT_FAILURE); } p12 = d2i_PKCS12_fp(fp, NULL); fclose(fp); if (p12 == NULL) { fprintf(stderr, \"Error reading PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } if (!PKCS12_parse(p12, argv[2], &pkey, &cert, &ca)) { fprintf(stderr, \"Error parsing PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } name = find_friendly_name(p12); PKCS12_free(p12); if ((fp = fopen(argv[3], \"w\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); goto err; } if (name != NULL) fprintf(fp, \"***Friendly Name***\\n%s\\n\", name); if (pkey != NULL) { fprintf(fp, \"***Private Key***\\n\"); PEM_write_PrivateKey(fp, pkey, NULL, NULL, 0, NULL, NULL); } if (cert != NULL) { fprintf(fp, \"***User Certificate***\\n\"); PEM_write_X509_AUX(fp, cert); } if (ca != NULL && sk_X509_num(ca) > 0) { fprintf(fp, \"***Other Certificates***\\n\"); for (i = 0; i < sk_X509_num(ca); i++) PEM_write_X509_AUX(fp, sk_X509_value(ca, i)); } fclose(fp); ret = EXIT_SUCCESS; err: OPENSSL_free(name); X509_free(cert); EVP_PKEY_free(pkey); sk_X509_pop_free(ca, X509_free); return ret; }","title":"PKCS#12 \uc77d\uae30 \ud504\ub85c\uadf8\ub7a8"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#references","text":"[WIKIPEDIA]PCKS [University of Toronto] OpenSSL Tutorial [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkread.c [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkwrite.c [OpenSSL Documentation 1.1.1] [OpenSSL Documentation 3.0] migration_guide [WIKIPEDIA] ASN1 A Warm Welcome to ASN.1 and DER","title":"references"},{"location":"mariadb/test-framework/","text":"[MariaDB] \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c mariadb \ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\ub294 \uacfc\uc815 \ubd84\uc11d \ube4c\ub4dc mkdir build && cd build && cmake .. && cmake --build . --parallel 5 \ube4c\ub4dc \uacb0\uacfc\uac00 \uc800\uc7a5\ub420 \ub514\ub809\ud1a0\ub9ac build \uc0dd\uc131&\uc774\ub3d9 \ub530\ub85c \uc635\uc158\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ube4c\ub4dc\ub41c\ub2e4 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c cmake \uba85\ub839\uc5b4 \uc2e4\ud589 \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build/unittest/mysys/my_malloc-t \uc2e4\ud589 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c MariaDB\uc758 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ctest, cmake\ub97c \uac10\uc2f8\ub294 cmake \ub9e4\ud06c\ub85c\uc640 \ud568\uc218\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4 MY_ADD_TESTS(dynarray LINK_LIBRARYS mysys) cmake/ctest.cmake \uc5d0 \uc815\uc758\ub41c cmake \ub9e4\ud06c\ub85c dynarray-t.c \ud30c\uc77c\uc5d0 mytap \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9c1\ud06c\ud558\uc5ec dynarray-t \uc2e4\ud589\ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud55c\ub2e4 mytap : MariaDB\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud14c\uc2a4\ud2b8 \uc791\uc131\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5 unittest/examples/simple-t.c \uc5d0\uc11c \uc0ac\uc6a9\ubc95\uc744 \uc775\ud790 \uc218 \uc788\ub2e4 plan \ud568\uc218 : \uc774 \ud30c\uc77c\uc5d0\uc11c \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560\uc9c0 \ubbf8\ub9ac \uc120\uc5b8\ud55c\ub2e4 ok \ud568\uc218 : \uccab \ubc88\uc9f8 \uc778\uc790\ub85c 0\uc774 \uc804\ub2ec\ub418\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud328\ub97c \uc758\ubbf8\ud55c\ub2e4 \uc2e4\uc2b5 cmake\uc5d0\uac8c \ud14c\uc2a4\ud2b8 \ube4c\ub4dc \ubc29\ubc95 \uc804\ub2ec unittest/mysys/CMakeLists.txt \ud30c\uc77c \ud3b8\uc9d1 MY_ADD_TESTS \ub9e4\ud06c\ub85c\uc5d0 dynarray \ucd94\uac00 unittest/mysys/dynarray-t.c \ud30c\uc77c \uc0dd\uc131 #include <tap.h> #include <my_global.h> #include <my_sys.h> #include <stdio.h> struct _foo { int num; char str[64]; }; static unsigned int test_dynamic_increase(int size) { /* @given * \ucd08\uae30 \ud06c\uae30\uac00 size\uc774\uace0 element32\uac1c\ub9cc\ud07c\uc758 \uacf5\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub3d9\uc801 \ubc30\uc5f4 \uc0dd\uc131 */ unsigned int inc = 32; DYNAMIC_ARRAY array; // my_init_dynamic_array \ud568\uc218\ub294 \ud56d\uc0c1 FALSE\ub97c \ubc18\ud658\ud55c\ub2e4 my_init_dynamic_array(PSI_NOT_INSTRUMENTED, &array, sizeof(struct _foo), size, inc, MYF(0)); /* @when * size + 1\uac1c\uc758 \uc6d0\uc18c\ub97c \ubc30\uc5f4\uc5d0 \ucd94\uac00 */ unsigned int i; struct _foo foo; for (i = 0; i <= size; ++i) { foo.num = i; snprintf(foo.str, 64, \"sample string-%u\", i); /* @then * \uc6d0\uc18c \ucd94\uac00\uc5d0 \uc131\uacf5 */ if (insert_dynamic(&array, (const void *)&foo)) { diag(\"insert_dynamic failed\"); return TRUE; } } /* @then * capacity\uac00 size\uc5d0\uc11c inc\ub9cc\ud07c \uc99d\uac00\ud568 */ if (size + array.alloc_increment != array.max_element) { diag(\"actual: %u expected: %u\", array.max_element, size+array.alloc_increment); return TRUE; } /* * C/C++ \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \ud568\uc218\uac00 \uc131\uacf5\ud560 \uacbd\uc6b0 0\uc744 \ubc18\ud658\ud558\ub294 \uad00\ub840\ub97c \ub530\ub984 */ return FALSE; } int main() { unsigned int a,b; unsigned int failed; plan(1); diag(\"Testing DYNAMIC_ARRAY\"); failed = 0; for (a = 1 ; a < 200 ; ++a) if (test_dynamic_increase(a)) { ++failed; diag(\"Failed for test_dynamic_increase(%3u)\", a); } ok(failed == 0, \"test_dynamic_increase\"); return exit_status(); } \ube4c\ub4dc\ud55c \ub4a4 \uc804\uccb4 \uc2e4\ud589 \ub610\ub294 build/unittest/mysys/dynarray-t \uc2e4\ud589 \ucd9c\ucc98 Get the code, build it, test it Writing Good Test Cases for MariaDB Server","title":"\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#mariadb","text":"mariadb \ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\ub294 \uacfc\uc815 \ubd84\uc11d","title":"[MariaDB] \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#_1","text":"mkdir build && cd build && cmake .. && cmake --build . --parallel 5 \ube4c\ub4dc \uacb0\uacfc\uac00 \uc800\uc7a5\ub420 \ub514\ub809\ud1a0\ub9ac build \uc0dd\uc131&\uc774\ub3d9 \ub530\ub85c \uc635\uc158\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ube4c\ub4dc\ub41c\ub2e4","title":"\ube4c\ub4dc"},{"location":"mariadb/test-framework/#_2","text":"\ubaa8\ub4e0 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c cmake \uba85\ub839\uc5b4 \uc2e4\ud589 \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build/unittest/mysys/my_malloc-t \uc2e4\ud589","title":"\ud14c\uc2a4\ud2b8 \uc2e4\ud589"},{"location":"mariadb/test-framework/#_3","text":"MariaDB\uc758 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ctest, cmake\ub97c \uac10\uc2f8\ub294 cmake \ub9e4\ud06c\ub85c\uc640 \ud568\uc218\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4 MY_ADD_TESTS(dynarray LINK_LIBRARYS mysys) cmake/ctest.cmake \uc5d0 \uc815\uc758\ub41c cmake \ub9e4\ud06c\ub85c dynarray-t.c \ud30c\uc77c\uc5d0 mytap \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9c1\ud06c\ud558\uc5ec dynarray-t \uc2e4\ud589\ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud55c\ub2e4 mytap : MariaDB\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud14c\uc2a4\ud2b8 \uc791\uc131\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5 unittest/examples/simple-t.c \uc5d0\uc11c \uc0ac\uc6a9\ubc95\uc744 \uc775\ud790 \uc218 \uc788\ub2e4 plan \ud568\uc218 : \uc774 \ud30c\uc77c\uc5d0\uc11c \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560\uc9c0 \ubbf8\ub9ac \uc120\uc5b8\ud55c\ub2e4 ok \ud568\uc218 : \uccab \ubc88\uc9f8 \uc778\uc790\ub85c 0\uc774 \uc804\ub2ec\ub418\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud328\ub97c \uc758\ubbf8\ud55c\ub2e4","title":"\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#_4","text":"cmake\uc5d0\uac8c \ud14c\uc2a4\ud2b8 \ube4c\ub4dc \ubc29\ubc95 \uc804\ub2ec unittest/mysys/CMakeLists.txt \ud30c\uc77c \ud3b8\uc9d1 MY_ADD_TESTS \ub9e4\ud06c\ub85c\uc5d0 dynarray \ucd94\uac00 unittest/mysys/dynarray-t.c \ud30c\uc77c \uc0dd\uc131 #include <tap.h> #include <my_global.h> #include <my_sys.h> #include <stdio.h> struct _foo { int num; char str[64]; }; static unsigned int test_dynamic_increase(int size) { /* @given * \ucd08\uae30 \ud06c\uae30\uac00 size\uc774\uace0 element32\uac1c\ub9cc\ud07c\uc758 \uacf5\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub3d9\uc801 \ubc30\uc5f4 \uc0dd\uc131 */ unsigned int inc = 32; DYNAMIC_ARRAY array; // my_init_dynamic_array \ud568\uc218\ub294 \ud56d\uc0c1 FALSE\ub97c \ubc18\ud658\ud55c\ub2e4 my_init_dynamic_array(PSI_NOT_INSTRUMENTED, &array, sizeof(struct _foo), size, inc, MYF(0)); /* @when * size + 1\uac1c\uc758 \uc6d0\uc18c\ub97c \ubc30\uc5f4\uc5d0 \ucd94\uac00 */ unsigned int i; struct _foo foo; for (i = 0; i <= size; ++i) { foo.num = i; snprintf(foo.str, 64, \"sample string-%u\", i); /* @then * \uc6d0\uc18c \ucd94\uac00\uc5d0 \uc131\uacf5 */ if (insert_dynamic(&array, (const void *)&foo)) { diag(\"insert_dynamic failed\"); return TRUE; } } /* @then * capacity\uac00 size\uc5d0\uc11c inc\ub9cc\ud07c \uc99d\uac00\ud568 */ if (size + array.alloc_increment != array.max_element) { diag(\"actual: %u expected: %u\", array.max_element, size+array.alloc_increment); return TRUE; } /* * C/C++ \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \ud568\uc218\uac00 \uc131\uacf5\ud560 \uacbd\uc6b0 0\uc744 \ubc18\ud658\ud558\ub294 \uad00\ub840\ub97c \ub530\ub984 */ return FALSE; } int main() { unsigned int a,b; unsigned int failed; plan(1); diag(\"Testing DYNAMIC_ARRAY\"); failed = 0; for (a = 1 ; a < 200 ; ++a) if (test_dynamic_increase(a)) { ++failed; diag(\"Failed for test_dynamic_increase(%3u)\", a); } ok(failed == 0, \"test_dynamic_increase\"); return exit_status(); } \ube4c\ub4dc\ud55c \ub4a4 \uc804\uccb4 \uc2e4\ud589 \ub610\ub294 build/unittest/mysys/dynarray-t \uc2e4\ud589","title":"\uc2e4\uc2b5"},{"location":"mariadb/test-framework/#_5","text":"Get the code, build it, test it Writing Good Test Cases for MariaDB Server","title":"\ucd9c\ucc98"},{"location":"note/programming-principle/","text":"\ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59 \ubc18\uba74\uad50\uc0ac\ub97c \ud1b5\ud574 \ubc30\uc6b4 \ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59 \uc804\uc81c \ubd88\ud655\uc2e4\uc131(\uac1c\ubc1c\uc790\uac00 \uace0\ub824\ud558\uc9c0 \ubabb\ud55c \uc0c1\ud669)\uc740 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \uc2dc\uc2a4\ud15c\uc774 \uc544\ub2cc \uac1c\uc778\uc758 \ub2a5\ub825\uc5d0 \uc758\uc874\ud558\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc758 \uacbd\uc7c1\ub825\uc740 \uc624\ub798\uac00\uc9c0 \ubabb\ud55c\ub2e4 encapsulation \ud2b9\uc815 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 API\ub97c \uad6c\ud604\ud560 \ub54c\uc5d0\ub294 \uad6c\uccb4\uc801\uc778 \uc790\ub8cc\uad6c\uc870\ub294 \uc228\uaca8 \uc624\uc9c1 \ud568\uc218\ub85c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\ub3c4\ub85d \uc720\ub3c4\ud558\uc790 \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \ub0b4\ubd80 \ub370\uc774\ud130(\uad6c\uc870\uccb4 \ud544\ub4dc)\uc5d0 \uc811\uadfc\ud558\uba74 \uac1c\ubc1c\uc790\uc758 \uc758\ub3c4\uc640 \ub2e4\ub974\uac8c \uc0ac\uc6a9\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \ud568\uc218\ub97c \ud1b5\ud574\uc11c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\uba74 \ubd88\ud655\uc2e4\uc131\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \ud568\uc218(\uba54\ub274\uc5bc \ud3ec\ud568)\uc640 \uad6c\uc870\uccb4 \uc774\ub984\ub9cc \uc81c\uacf5\ud558\uc790 API \uc0ac\uc6a9\uc790\ub294 \uadf8 \uc774\uc0c1(\ud568\uc218\uc758 \uad6c\ud604)\uc740 \uc54c \ud544\uc694\ub3c4 \uc5c6\uace0 \ubd84\uc11d\ud558\ub294 \uac83\uc740 \uc2dc\uac04\ub0ad\ube44\ub2e4 \uacc4\uce35\ud654 \ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\ub97c \uacc4\uce35\ud654 \ud558\uc5ec \ubaa8\ub4e0 \uacc4\uce35\uc740 \ud55c \ub2e8\uacc4 \uc544\ub798 \uacc4\uce35\uc758 API\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \ucd94\uc0c1\ud654\ud558\uc790 \uae54\ub054\ud558\uac8c \ubaa8\ub4c8\ud654\uac00 \uac00\ub2a5\ud558\ub2e4 --> \ud14c\uc2a4\ud2b8 \uc791\uc131\uc774 \ud3b8\ud558\ub2e4 \uc790\uc8fc \uc0ac\uc6a9\ub420 \ubaa8\ub4c8(list, hashmap\uacfc \uac19\uc740 \uc790\ub8cc\uad6c\uc870)\uc744 \ud558\uc704 \uacc4\uce35\uc73c\ub85c \ubd84\ub9ac\ud558\uba74 \uc7ac\ud65c\uc6a9\uc131\uc774 \uc62c\ub77c\uac04\ub2e4 \uc2dc\uc2a4\ud15c(\ud558\ub4dc\uc6e8\uc5b4 \ub610\ub294 \uc6b4\uc601\uccb4\uc81c) \uc758\uc874\uc801\uc778 \ub9e4\ud06c\ub85c\ub294 \ud558\ub098\uc758 \uacc4\uce35\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc790 \ub9e4\ud06c\ub85c \ubd84\uae30\ub294 \ucf54\ub4dc \ubd84\uc11d\uc744 \uc5b4\ub835\uac8c \ub9cc\ub4e0\ub2e4 \uc2dc\uc2a4\ud15c \uc758\uc874\uc801\uc778 \ucf54\ub4dc\ub97c \ud55c \ubc88 \uac10\uc2f8\uba74 \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ud55c \ubc88 \uac10\uc2f8\uc11c \uc81c\uacf5\ud558\uc790 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uad6c\ud604\uc774 \ubc14\ub00c\uc5c8\uc744\ub54c \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \ud14c\uc2a4\ud2b8 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uc790 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uad6c\ud604\uc774 \ubcc0\uacbd\ub420 \uacbd\uc6b0 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud589\ub9cc\uc73c\ub85c \ubb38\uc81c\uac00 \uc5c6\uc74c\uc744 \ubcf4\uc7a5\ubc1b\uc744 \uc218 \uc788\ub2e4 \ucf54\ub4dc\ub97c \uc218\uc815\ud560\ub54c\ub9c8\ub2e4 side effect\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud558\ub2e4 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \ubcf4\uba74 \uac01 \ud568\uc218\uac00 \uc5b4\ub5a4 \uc77c\uc744 \ud558\ub294\uc9c0 \uc27d\uac8c \ud30c\uc545 \uac00\ub2a5\ud558\ub2e4 \ud568\uc218 \ud568\uc218\uac00 \ud558\ub294 \uc77c\uc740 \uc811\uc18d\uc0ac \uc5c6\uc774 \ud55c \ubb38\uc7a5\uc73c\ub85c \uc124\uba85\uc774 \uac00\ub2a5\ud560\ub54c\uae4c\uc9c0 \ubd84\ub9ac \ud568\uc218\uc758 \uc7ac\ud65c\uc6a9\uc131\uc774 \ub192\uc73c\uba74 \ubc84\uadf8 \uc218\uc815\uc5d0 \uc6a9\uc774\ud558\ub2e4 \uc904 \uc218\uac00 \ud06c\uace0 \ud558\ub294 \uc77c\uc774 \ub9ce\uc740 \ud568\uc218\ub294 \ubd84\uc11d\ud558\ub294\ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b0\ub2e4 --> \uc0c8\ub85c\uc6b4 \uc0ac\ub78c\uc774 \uc62c\ub54c\ub9c8\ub2e4 \uc124\uba85\ud574\uc8fc\ub294 \uc2dc\uac04\uc774 \uc544\uae5d\ub2e4 \ubc18\ud658\uac12\uc73c\ub85c \uc131\uacf5/\uc2e4\ud328 \uc5ec\ubd80\ub97c \ud45c\ud604\ud558\uace0 \uacb0\uacfc\uac12\uc740 [out] parameter\ub85c \uc804\ub2ec\ud558\uc790 \ubb34\ucc45\uc784\ud558\uac8c \ub09c\uc0ac\ud55c Throw\ub294 \ucf54\ub4dc\uc758 \ud750\ub984\uc744 \uc608\uc0c1\ud558\uae30 \ud798\ub4e4\uac8c \ub9cc\ub4e4\uace0 \uc774\ub7f0 \ubd88\ud655\uc2e4\uc131\uc774 \ubc84\uadf8\ub97c \uc720\ubc1c\ud55c\ub2e4 \uc608\ub97c \ub4e4\uba74 \uc5b4\ub5a4 \ubcc0\uc218\uac00 \ud574\uc81c\ub418\uc5c8\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 SIGSEGV\uc758 \ubc1c\uc0dd \uc704\ud5d8\uc131\uc744 \ub192\uc778\ub2e4 \uc131\uacf5\ud558\uba74 0\uc744 \ubc18\ud658\ud558\uace0 \uc2e4\ud328\ud558\uba74 1\uc744 \ubc18\ud658\ud558\ub294 \ud615\ud0dc\ub294 C/C++ \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c\ub294 \uc77c\ubc18\uc801\uc778 \uad00\uc2b5\uc774\ub2e4(e.g. pthread, unix system call \ub4f1) \uc774\ub984\uc5d0 \uc904\uc784\ub9d0\uc744 \uc4f0\uc9c0 \ub9d0\uace0 \ubb38\uc7a5\ucc98\ub7fc \ud480\uc5b4\uc11c \uc4f0\uc790 \ub3d9\uc0ac\uac00 \uc5c6\uc774 \uba85\uc0ac\ub9cc \uc788\ub294 \ud568\uc218 \uc774\ub984\uc740 \uc774\ub984\ub9cc\uc73c\ub85c \uae30\ub2a5\uc744 \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4 \uc904\uc784\ub9d0\uc740 \uc6d0\ub798 \ub2e8\uc5b4\ub97c \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4. \uadf8\ub9ac\uace0 \uc790\ub3d9\uc644\uc131 \uae30\ub2a5\uc774 \uc788\ub294\ub370 \uadc0\ucc2e\ub2e4\uace0 \uc904\uc784\ub9d0\uc744 \uc4f0\ub294\uac74 \ub9d0\uc774 \uc548\ub41c\ub2e4","title":"\ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59"},{"location":"note/programming-principle/#_1","text":"\ubc18\uba74\uad50\uc0ac\ub97c \ud1b5\ud574 \ubc30\uc6b4 \ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59","title":"\ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59"},{"location":"note/programming-principle/#_2","text":"\ubd88\ud655\uc2e4\uc131(\uac1c\ubc1c\uc790\uac00 \uace0\ub824\ud558\uc9c0 \ubabb\ud55c \uc0c1\ud669)\uc740 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \uc2dc\uc2a4\ud15c\uc774 \uc544\ub2cc \uac1c\uc778\uc758 \ub2a5\ub825\uc5d0 \uc758\uc874\ud558\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc758 \uacbd\uc7c1\ub825\uc740 \uc624\ub798\uac00\uc9c0 \ubabb\ud55c\ub2e4","title":"\uc804\uc81c"},{"location":"note/programming-principle/#encapsulation","text":"\ud2b9\uc815 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 API\ub97c \uad6c\ud604\ud560 \ub54c\uc5d0\ub294 \uad6c\uccb4\uc801\uc778 \uc790\ub8cc\uad6c\uc870\ub294 \uc228\uaca8 \uc624\uc9c1 \ud568\uc218\ub85c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\ub3c4\ub85d \uc720\ub3c4\ud558\uc790 \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \ub0b4\ubd80 \ub370\uc774\ud130(\uad6c\uc870\uccb4 \ud544\ub4dc)\uc5d0 \uc811\uadfc\ud558\uba74 \uac1c\ubc1c\uc790\uc758 \uc758\ub3c4\uc640 \ub2e4\ub974\uac8c \uc0ac\uc6a9\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \ud568\uc218\ub97c \ud1b5\ud574\uc11c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\uba74 \ubd88\ud655\uc2e4\uc131\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \ud568\uc218(\uba54\ub274\uc5bc \ud3ec\ud568)\uc640 \uad6c\uc870\uccb4 \uc774\ub984\ub9cc \uc81c\uacf5\ud558\uc790 API \uc0ac\uc6a9\uc790\ub294 \uadf8 \uc774\uc0c1(\ud568\uc218\uc758 \uad6c\ud604)\uc740 \uc54c \ud544\uc694\ub3c4 \uc5c6\uace0 \ubd84\uc11d\ud558\ub294 \uac83\uc740 \uc2dc\uac04\ub0ad\ube44\ub2e4","title":"encapsulation"},{"location":"note/programming-principle/#_3","text":"\ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\ub97c \uacc4\uce35\ud654 \ud558\uc5ec \ubaa8\ub4e0 \uacc4\uce35\uc740 \ud55c \ub2e8\uacc4 \uc544\ub798 \uacc4\uce35\uc758 API\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \ucd94\uc0c1\ud654\ud558\uc790 \uae54\ub054\ud558\uac8c \ubaa8\ub4c8\ud654\uac00 \uac00\ub2a5\ud558\ub2e4 --> \ud14c\uc2a4\ud2b8 \uc791\uc131\uc774 \ud3b8\ud558\ub2e4 \uc790\uc8fc \uc0ac\uc6a9\ub420 \ubaa8\ub4c8(list, hashmap\uacfc \uac19\uc740 \uc790\ub8cc\uad6c\uc870)\uc744 \ud558\uc704 \uacc4\uce35\uc73c\ub85c \ubd84\ub9ac\ud558\uba74 \uc7ac\ud65c\uc6a9\uc131\uc774 \uc62c\ub77c\uac04\ub2e4 \uc2dc\uc2a4\ud15c(\ud558\ub4dc\uc6e8\uc5b4 \ub610\ub294 \uc6b4\uc601\uccb4\uc81c) \uc758\uc874\uc801\uc778 \ub9e4\ud06c\ub85c\ub294 \ud558\ub098\uc758 \uacc4\uce35\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc790 \ub9e4\ud06c\ub85c \ubd84\uae30\ub294 \ucf54\ub4dc \ubd84\uc11d\uc744 \uc5b4\ub835\uac8c \ub9cc\ub4e0\ub2e4 \uc2dc\uc2a4\ud15c \uc758\uc874\uc801\uc778 \ucf54\ub4dc\ub97c \ud55c \ubc88 \uac10\uc2f8\uba74 \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ud55c \ubc88 \uac10\uc2f8\uc11c \uc81c\uacf5\ud558\uc790 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uad6c\ud604\uc774 \ubc14\ub00c\uc5c8\uc744\ub54c \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4","title":"\uacc4\uce35\ud654"},{"location":"note/programming-principle/#_4","text":"\ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uc790 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uad6c\ud604\uc774 \ubcc0\uacbd\ub420 \uacbd\uc6b0 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud589\ub9cc\uc73c\ub85c \ubb38\uc81c\uac00 \uc5c6\uc74c\uc744 \ubcf4\uc7a5\ubc1b\uc744 \uc218 \uc788\ub2e4 \ucf54\ub4dc\ub97c \uc218\uc815\ud560\ub54c\ub9c8\ub2e4 side effect\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud558\ub2e4 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \ubcf4\uba74 \uac01 \ud568\uc218\uac00 \uc5b4\ub5a4 \uc77c\uc744 \ud558\ub294\uc9c0 \uc27d\uac8c \ud30c\uc545 \uac00\ub2a5\ud558\ub2e4","title":"\ud14c\uc2a4\ud2b8"},{"location":"note/programming-principle/#_5","text":"\ud568\uc218\uac00 \ud558\ub294 \uc77c\uc740 \uc811\uc18d\uc0ac \uc5c6\uc774 \ud55c \ubb38\uc7a5\uc73c\ub85c \uc124\uba85\uc774 \uac00\ub2a5\ud560\ub54c\uae4c\uc9c0 \ubd84\ub9ac \ud568\uc218\uc758 \uc7ac\ud65c\uc6a9\uc131\uc774 \ub192\uc73c\uba74 \ubc84\uadf8 \uc218\uc815\uc5d0 \uc6a9\uc774\ud558\ub2e4 \uc904 \uc218\uac00 \ud06c\uace0 \ud558\ub294 \uc77c\uc774 \ub9ce\uc740 \ud568\uc218\ub294 \ubd84\uc11d\ud558\ub294\ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b0\ub2e4 --> \uc0c8\ub85c\uc6b4 \uc0ac\ub78c\uc774 \uc62c\ub54c\ub9c8\ub2e4 \uc124\uba85\ud574\uc8fc\ub294 \uc2dc\uac04\uc774 \uc544\uae5d\ub2e4 \ubc18\ud658\uac12\uc73c\ub85c \uc131\uacf5/\uc2e4\ud328 \uc5ec\ubd80\ub97c \ud45c\ud604\ud558\uace0 \uacb0\uacfc\uac12\uc740 [out] parameter\ub85c \uc804\ub2ec\ud558\uc790 \ubb34\ucc45\uc784\ud558\uac8c \ub09c\uc0ac\ud55c Throw\ub294 \ucf54\ub4dc\uc758 \ud750\ub984\uc744 \uc608\uc0c1\ud558\uae30 \ud798\ub4e4\uac8c \ub9cc\ub4e4\uace0 \uc774\ub7f0 \ubd88\ud655\uc2e4\uc131\uc774 \ubc84\uadf8\ub97c \uc720\ubc1c\ud55c\ub2e4 \uc608\ub97c \ub4e4\uba74 \uc5b4\ub5a4 \ubcc0\uc218\uac00 \ud574\uc81c\ub418\uc5c8\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 SIGSEGV\uc758 \ubc1c\uc0dd \uc704\ud5d8\uc131\uc744 \ub192\uc778\ub2e4 \uc131\uacf5\ud558\uba74 0\uc744 \ubc18\ud658\ud558\uace0 \uc2e4\ud328\ud558\uba74 1\uc744 \ubc18\ud658\ud558\ub294 \ud615\ud0dc\ub294 C/C++ \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c\ub294 \uc77c\ubc18\uc801\uc778 \uad00\uc2b5\uc774\ub2e4(e.g. pthread, unix system call \ub4f1) \uc774\ub984\uc5d0 \uc904\uc784\ub9d0\uc744 \uc4f0\uc9c0 \ub9d0\uace0 \ubb38\uc7a5\ucc98\ub7fc \ud480\uc5b4\uc11c \uc4f0\uc790 \ub3d9\uc0ac\uac00 \uc5c6\uc774 \uba85\uc0ac\ub9cc \uc788\ub294 \ud568\uc218 \uc774\ub984\uc740 \uc774\ub984\ub9cc\uc73c\ub85c \uae30\ub2a5\uc744 \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4 \uc904\uc784\ub9d0\uc740 \uc6d0\ub798 \ub2e8\uc5b4\ub97c \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4. \uadf8\ub9ac\uace0 \uc790\ub3d9\uc644\uc131 \uae30\ub2a5\uc774 \uc788\ub294\ub370 \uadc0\ucc2e\ub2e4\uace0 \uc904\uc784\ub9d0\uc744 \uc4f0\ub294\uac74 \ub9d0\uc774 \uc548\ub41c\ub2e4","title":"\ud568\uc218"},{"location":"unix/process-relationships/","text":"[UNIX] session POSIX 1.1\uc5d0\uc11c \ub3c4\uc785\ud55c \uc138\uc158(session)\uc774\ub77c\ub294 \uac1c\ub150\uc5d0 \ub300\ud55c \uc18c\uac1c \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\ub294 pid\ub97c \uac00\uc9c0\uba70 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0 \uc18d\ud55c\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \ud55c \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \uad6c\uc131\ub41c \uc9d1\ud569\uc774\uace0 pgid\ub97c \uac00\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc8fc\ub85c \uac19\uc740 \uc791\uc5c5 \uc744 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub4e4\uc758 \uc9d1\ud569\uc774\uace0 \uac19\uc740 \ud130\ubbf8\ub110\ub85c\ubd80\ud130 \uc2e0\ud638 \ub97c \ubc1b\ub294\ub2e4 shell pipeline( | )\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4 proc1 | proc2 & proc3 | proc4 | proc5 proc1, proc2\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud558\uace0 proc3, proc4, proc5\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud55c\ub2e4 & \uae30\ud638\ub294 proc1, proc2\ub97c background process group\uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4 #include <unistd.h> /** * pid\uac00 0\uc774\uba74 \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uc758 pgid\ub97c \ubc18\ud658\ud55c\ub2e4 * \uc2e4\ud328\ud560 \uacbd\uc6b0 -1\uc744 \ubc18\ud658\ud55c\ub2e4 */ pid_t getpgid(pid_t pid) \uadf8\ub8f9 \ub9ac\ub354 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0\ub294 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc874\uc7ac\ud558\ub294\ub370 pid\uac12\uc774 pgid\uc640 \ub3d9\uc77c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uc774\ub2e4 \uadf8\ub8f9 \ub9ac\ub354\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud55c \ud504\ub85c\uc138\uc2a4\uc774\uace0 \uadf8\ub8f9 \uc548\uc5d0 \ud504\ub85c\uc138\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc885\ub8cc\ub418\uc5b4\ub3c4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc5ec\uc804\ud788 \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uac00 \uc885\ub8cc\ub418\uc5b4\uc57c \uadf8\ub8f9\uc774 \uc0ac\ub77c\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4\ub294 \uc790\uc2e0\uc758 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4 \uc138\uc158 \uc138\uc158\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \uc9d1\ud569\uc774\ub2e4 #include <unistd.h> /** * \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ud504\ub85c\uc138\uc2a4 \ub9ac\ub354\uc774\uba74 \uc2e4\ud328(-1 \ubc18\ud658) * \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c8 \uc138\uc158\uc744 \uc0dd\uc131\ud558\uace0 pgid \ubc18\ud658 */ pid_t setsid(void); \uc704\uc758 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc744 \uc0dd\uc131\ud55c\ub2e4 setsid \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \ud504\ub85c\uc138\uc2a4\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc758 \ub9ac\ub354\uc778 \ub3d9\uc2dc\uc5d0 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \ub9ac\ub354\uac00 \ub41c\ub2e4 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc774 \ud55c \uac1c \uc788\uace0 \uadf8 \uadf8\ub8f9\uc5d0 \ud504\ub85c\uc138\uc2a4\ub294 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4 \ud55c\uac1c\uc774\ub2e4 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4\uac00 \ud568\uc218 \ud638\ucd9c \uc804\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uadf8 \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc\uc758 \uc5f0\uacb0 \uad00\uacc4 \uac00 \ub04a\uc5b4\uc9c4\ub2e4 open\ud55c\uac8c \uc790\ub3d9\uc73c\ub85c \ub2eb\ud78c\ub2e4\ub294 \ub73b\uc778\uac00? \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc544\ub2d8\uc744 \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 fork\ub97c \ud638\ucd9c\ud55c \ub4a4 \ubd80\ubaa8\ub294 \uc885\ub8cc\ud558\uace0 \uc790\uc2dd\uc740 \uacc4\uc18d \uc2e4\ud589\ud558\ub294 \uac83\uc774\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110 \uc138\uc158\uc5d0\ub294 \ud558\ub098\uc758 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4(\uc5c6\uc744 \uc218\ub3c4 \uc788\ub2e4) \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc \uc5f0\uacb0 \uc744 \ud655\ub9bd\ud55c \uc138\uc158 \ub9ac\ub354\ub97c \uc81c\uc5b4 \ud504\ub85c\uc138\uc2a4\ub77c\uace0 \ud55c\ub2e4 \uc138\uc158\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 background group, foreground group\uc73c\ub85c \ubd84\ub958\ud560 \uc218 \uc788\ub2e4 foreground \uadf8\ub8f9\uc740 \ud55c \uac1c, background group\uc740 \ud558\ub098 \uc774\uc0c1 \uc788\uc744 \uc218 \uc788\ub2e4 \uc138\uc158\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc788\uc73c\uba74 \uadf8 \uc138\uc158\uc5d0\ub294 \ubc18\ub4dc\uc2dc \ud558\ub098\uc758 foreground process \uadf8\ub8f9\uc774 \uc788\ub2e4 \ud130\ubbf8\ub110\uc5d0\uc11c interrupt key(e.g. ctrl-c)\ub97c \uc785\ub825\ud558\uba74 foreground group\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uc5d0\uac8c signal\uc774 \uc804\ub2ec\ub41c\ub2e4 /dev/tty \ud45c\uc900 \uc785\ucd9c\ub825 \ub9ac\ub2e4\uc774\ub809\uc158 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc785\ucd9c\ub825 \ub300\uc0c1\uc774 \ud130\ubbf8\ub110\uc774 \ub418\ub3c4\ub85d \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 /dev/tty device file\uc744 open\ud558\ub294 \uac83\uc774\ub2e4 \ucee4\ub110\uc740 \uc774 \ud30c\uc77c\uc744 \uc81c\uc5b4 \ud130\ubbf8\ub110\ub85c \uc778\uc2dd\ud55c\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5c6\ub294 \ud504\ub85c\uc138\uc2a4\uac00 /dev/tty \ub97c open\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba74 \uc2e4\ud328\ud55c\ub2e4 \uc2e4\uc2b5 procinfo.c cli \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \ud504\ub85c\uc138\uc2a4\uc758 \uadf8\ub8f9 \uc544\uc774\ub514\uc640 \uc138\uc158 \uc544\uc774\ub514\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 #include <stdio.h> #include <unistd.h> #include <stdlib.h> int main(int argc, const char *argv[]) { if (argc == 1) return 1; pid_t tpid = atoi(argv[1]); printf(\"[%s] pid: %d pgid: %d sid: %d\\n\", argv[0], tpid, getpgid(tpid), getsid(tpid)); return 0; } amplify.c \ud45c\uc900\uc785\ub825\uc5d0\uc11c \uc77d\uc740 \ubb38\uc790\uc5f4\uc744 \ud45c\uc900 \ucd9c\ub825\uacfc \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5ec\ub7ec \ubc88 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 amplify < input.txt > output.txt \uc640 \uac19\uc774 \uc2e4\ud589(stdin, stdout \ub9ac\ub2e4\uc774\ub809\uc158)\ud558\ub354\ub77c\ub3c4 \ud130\ubbf8\ub110\uc5d0 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \ubcf4\uc7a5\ub41c\ub2e4 #include <unistd.h> #include <fcntl.h> #include <string.h> #include <stdio.h> #include <stdlib.h> void printn2stdout(const unsigned char str[], int n) { for (int i = 0; i < n; i++) printf(\"%s\\n\", str); } void print2control_terminal(const unsigned char str[]) { int tfd; tfd = open(\"/dev/tty\", O_WRONLY); if (tfd < 0) return; unsigned char buffer[7*128]; memset(buffer, '\\0', 7*128); snprintf(buffer, sizeof(buffer), \"\\033[31m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[32m%s\\033[0m\\n\" \"\\033[34m%s\\033[0m\\n\" \"\\033[36m%s\\033[0m\\n\" \"\\033[35m%s\\033[0m\\n\", str, str, str, str, str, str, str); write(tfd, buffer, 7*128); close(tfd); } int main(int argc, const char *argv[]) { int n = 7; if (argc == 2) n = atoi(argv[1]); unsigned char str[128]; memset(str, '\\0', 128); fgets(str, sizeof(str), stdin); if (str[strlen(str) - 1] == '\\n') str[strlen(str) - 1] = '\\0'; print2control_terminal(str); printn2stdout(str, n); return 0; } \ucd9c\ucc98 APUE3e","title":"\uc138\uc158"},{"location":"unix/process-relationships/#unix-session","text":"POSIX 1.1\uc5d0\uc11c \ub3c4\uc785\ud55c \uc138\uc158(session)\uc774\ub77c\ub294 \uac1c\ub150\uc5d0 \ub300\ud55c \uc18c\uac1c","title":"[UNIX] session"},{"location":"unix/process-relationships/#_1","text":"\ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\ub294 pid\ub97c \uac00\uc9c0\uba70 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0 \uc18d\ud55c\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \ud55c \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \uad6c\uc131\ub41c \uc9d1\ud569\uc774\uace0 pgid\ub97c \uac00\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc8fc\ub85c \uac19\uc740 \uc791\uc5c5 \uc744 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub4e4\uc758 \uc9d1\ud569\uc774\uace0 \uac19\uc740 \ud130\ubbf8\ub110\ub85c\ubd80\ud130 \uc2e0\ud638 \ub97c \ubc1b\ub294\ub2e4 shell pipeline( | )\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4 proc1 | proc2 & proc3 | proc4 | proc5 proc1, proc2\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud558\uace0 proc3, proc4, proc5\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud55c\ub2e4 & \uae30\ud638\ub294 proc1, proc2\ub97c background process group\uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4 #include <unistd.h> /** * pid\uac00 0\uc774\uba74 \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uc758 pgid\ub97c \ubc18\ud658\ud55c\ub2e4 * \uc2e4\ud328\ud560 \uacbd\uc6b0 -1\uc744 \ubc18\ud658\ud55c\ub2e4 */ pid_t getpgid(pid_t pid)","title":"\ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9"},{"location":"unix/process-relationships/#_2","text":"\ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0\ub294 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc874\uc7ac\ud558\ub294\ub370 pid\uac12\uc774 pgid\uc640 \ub3d9\uc77c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uc774\ub2e4 \uadf8\ub8f9 \ub9ac\ub354\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud55c \ud504\ub85c\uc138\uc2a4\uc774\uace0 \uadf8\ub8f9 \uc548\uc5d0 \ud504\ub85c\uc138\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc885\ub8cc\ub418\uc5b4\ub3c4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc5ec\uc804\ud788 \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uac00 \uc885\ub8cc\ub418\uc5b4\uc57c \uadf8\ub8f9\uc774 \uc0ac\ub77c\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4\ub294 \uc790\uc2e0\uc758 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4","title":"\uadf8\ub8f9 \ub9ac\ub354"},{"location":"unix/process-relationships/#_3","text":"\uc138\uc158\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \uc9d1\ud569\uc774\ub2e4 #include <unistd.h> /** * \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ud504\ub85c\uc138\uc2a4 \ub9ac\ub354\uc774\uba74 \uc2e4\ud328(-1 \ubc18\ud658) * \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c8 \uc138\uc158\uc744 \uc0dd\uc131\ud558\uace0 pgid \ubc18\ud658 */ pid_t setsid(void); \uc704\uc758 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc744 \uc0dd\uc131\ud55c\ub2e4 setsid \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \ud504\ub85c\uc138\uc2a4\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc758 \ub9ac\ub354\uc778 \ub3d9\uc2dc\uc5d0 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \ub9ac\ub354\uac00 \ub41c\ub2e4 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc774 \ud55c \uac1c \uc788\uace0 \uadf8 \uadf8\ub8f9\uc5d0 \ud504\ub85c\uc138\uc2a4\ub294 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4 \ud55c\uac1c\uc774\ub2e4 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4\uac00 \ud568\uc218 \ud638\ucd9c \uc804\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uadf8 \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc\uc758 \uc5f0\uacb0 \uad00\uacc4 \uac00 \ub04a\uc5b4\uc9c4\ub2e4 open\ud55c\uac8c \uc790\ub3d9\uc73c\ub85c \ub2eb\ud78c\ub2e4\ub294 \ub73b\uc778\uac00? \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc544\ub2d8\uc744 \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 fork\ub97c \ud638\ucd9c\ud55c \ub4a4 \ubd80\ubaa8\ub294 \uc885\ub8cc\ud558\uace0 \uc790\uc2dd\uc740 \uacc4\uc18d \uc2e4\ud589\ud558\ub294 \uac83\uc774\ub2e4","title":"\uc138\uc158"},{"location":"unix/process-relationships/#_4","text":"\uc138\uc158\uc5d0\ub294 \ud558\ub098\uc758 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4(\uc5c6\uc744 \uc218\ub3c4 \uc788\ub2e4) \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc \uc5f0\uacb0 \uc744 \ud655\ub9bd\ud55c \uc138\uc158 \ub9ac\ub354\ub97c \uc81c\uc5b4 \ud504\ub85c\uc138\uc2a4\ub77c\uace0 \ud55c\ub2e4 \uc138\uc158\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 background group, foreground group\uc73c\ub85c \ubd84\ub958\ud560 \uc218 \uc788\ub2e4 foreground \uadf8\ub8f9\uc740 \ud55c \uac1c, background group\uc740 \ud558\ub098 \uc774\uc0c1 \uc788\uc744 \uc218 \uc788\ub2e4 \uc138\uc158\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc788\uc73c\uba74 \uadf8 \uc138\uc158\uc5d0\ub294 \ubc18\ub4dc\uc2dc \ud558\ub098\uc758 foreground process \uadf8\ub8f9\uc774 \uc788\ub2e4 \ud130\ubbf8\ub110\uc5d0\uc11c interrupt key(e.g. ctrl-c)\ub97c \uc785\ub825\ud558\uba74 foreground group\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uc5d0\uac8c signal\uc774 \uc804\ub2ec\ub41c\ub2e4","title":"\uc81c\uc5b4 \ud130\ubbf8\ub110"},{"location":"unix/process-relationships/#devtty","text":"\ud45c\uc900 \uc785\ucd9c\ub825 \ub9ac\ub2e4\uc774\ub809\uc158 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc785\ucd9c\ub825 \ub300\uc0c1\uc774 \ud130\ubbf8\ub110\uc774 \ub418\ub3c4\ub85d \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 /dev/tty device file\uc744 open\ud558\ub294 \uac83\uc774\ub2e4 \ucee4\ub110\uc740 \uc774 \ud30c\uc77c\uc744 \uc81c\uc5b4 \ud130\ubbf8\ub110\ub85c \uc778\uc2dd\ud55c\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5c6\ub294 \ud504\ub85c\uc138\uc2a4\uac00 /dev/tty \ub97c open\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba74 \uc2e4\ud328\ud55c\ub2e4","title":"/dev/tty"},{"location":"unix/process-relationships/#_5","text":"","title":"\uc2e4\uc2b5"},{"location":"unix/process-relationships/#procinfoc","text":"cli \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \ud504\ub85c\uc138\uc2a4\uc758 \uadf8\ub8f9 \uc544\uc774\ub514\uc640 \uc138\uc158 \uc544\uc774\ub514\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 #include <stdio.h> #include <unistd.h> #include <stdlib.h> int main(int argc, const char *argv[]) { if (argc == 1) return 1; pid_t tpid = atoi(argv[1]); printf(\"[%s] pid: %d pgid: %d sid: %d\\n\", argv[0], tpid, getpgid(tpid), getsid(tpid)); return 0; }","title":"procinfo.c"},{"location":"unix/process-relationships/#amplifyc","text":"\ud45c\uc900\uc785\ub825\uc5d0\uc11c \uc77d\uc740 \ubb38\uc790\uc5f4\uc744 \ud45c\uc900 \ucd9c\ub825\uacfc \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5ec\ub7ec \ubc88 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 amplify < input.txt > output.txt \uc640 \uac19\uc774 \uc2e4\ud589(stdin, stdout \ub9ac\ub2e4\uc774\ub809\uc158)\ud558\ub354\ub77c\ub3c4 \ud130\ubbf8\ub110\uc5d0 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \ubcf4\uc7a5\ub41c\ub2e4 #include <unistd.h> #include <fcntl.h> #include <string.h> #include <stdio.h> #include <stdlib.h> void printn2stdout(const unsigned char str[], int n) { for (int i = 0; i < n; i++) printf(\"%s\\n\", str); } void print2control_terminal(const unsigned char str[]) { int tfd; tfd = open(\"/dev/tty\", O_WRONLY); if (tfd < 0) return; unsigned char buffer[7*128]; memset(buffer, '\\0', 7*128); snprintf(buffer, sizeof(buffer), \"\\033[31m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[32m%s\\033[0m\\n\" \"\\033[34m%s\\033[0m\\n\" \"\\033[36m%s\\033[0m\\n\" \"\\033[35m%s\\033[0m\\n\", str, str, str, str, str, str, str); write(tfd, buffer, 7*128); close(tfd); } int main(int argc, const char *argv[]) { int n = 7; if (argc == 2) n = atoi(argv[1]); unsigned char str[128]; memset(str, '\\0', 128); fgets(str, sizeof(str), stdin); if (str[strlen(str) - 1] == '\\n') str[strlen(str) - 1] = '\\0'; print2control_terminal(str); printn2stdout(str, n); return 0; }","title":"amplify.c"},{"location":"unix/process-relationships/#_6","text":"APUE3e","title":"\ucd9c\ucc98"}]}