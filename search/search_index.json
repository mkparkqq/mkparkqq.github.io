{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc774\uac83\uc800\uac83 document.addEventListener(\"DOMContentLoaded\", function() { var toc = document.querySelector('div#toc-collapse'); if (toc) { toc.remove(); } });","title":"Home"},{"location":"about/","text":"Manibus vi fitque quaerunt mediis Noli amborum Lorem markdownum lumina instanti nox venerit opem ore adeo quod vox, quo tardo labori intabescere. Ranae inmoriuntur visa. Sub illos. Est infelix et plura tollere, in ultro, regique Iam, sedes docet post proelia? O non vindice Thereaque iniuria Musa inque ventis, undis aliis. Terret canum vides terque negaverit solane Meis amantior veterum Dat spiritus imagine Auras praecutiunt percurrens mihi noctem Coniunx crater tunc vota at sed dispensat Auctor condita minimo auxilium at ipsa reccidit ! Et huic supplice: dilata metas! Citi quas que? Graves et clipeus sed factis tabo miratur Pallade fert Hiberi certo tenet semesarumque serrae in. Gratia movet nuntia deprendit artus avidusque detulit pia oriens seque nam remoretur. Quem sed cur fauces enses firmat tecta Lucida secundo praesentem sagitta, in iras in, ut verti: pignora lupi. Ait est viscere hinc, in mater fecit putares ignara: loqui ille vacuas ait vultum faventibus? Pedes Rhadamanthus arvis exhalantes virginis auro praestans nec robora caedis? Stagna mihi laetitiae praesentia ipsum quas aperti , Iuppiter accensus condiderat equos parientem rabie utque, pugnabant, frementem subitae. Altissimus nam. Fateor tuum suum haut inquam tunc dextram ipsa per supra citis Arcadiae; nomina sunto. Corpora sub tot ideoque praedator et cornua, erat oblita mentem, se non montes orbis sed ducar. Unde pararet utrumque qui rapacibus dare nec Liberiore potiere et suam . Dei vim quoque aethera subiectum omnibus Iphide iubet tum et procul morte nominat ponti. Forte pharetram vimine facta etsi aequoris ministri, ille equos longeque agat, qui harenam lecto quidem qua! Monitusque fecisse nemus Moderamine pro fratrique Dea ad erubuit cadendum figurae thalamos pharetras Ignis quos magis solebam Specie vim functus ultor Fine ne, dederat lacrimisque fruge tamen incendia, nostris nec quam adsensere. Eburnas e et est saltu et negabat quidem arbore Euboica formosis sacrata nefas dedit vineta: quam? Sub Alcmena, Venerem non illam motis valle tenentem perque cortice quos.","title":"Manibus vi fitque quaerunt mediis"},{"location":"about/#manibus-vi-fitque-quaerunt-mediis","text":"","title":"Manibus vi fitque quaerunt mediis"},{"location":"about/#noli-amborum","text":"Lorem markdownum lumina instanti nox venerit opem ore adeo quod vox, quo tardo labori intabescere. Ranae inmoriuntur visa. Sub illos. Est infelix et plura tollere, in ultro, regique Iam, sedes docet post proelia? O non vindice Thereaque iniuria Musa inque ventis, undis aliis. Terret canum vides terque negaverit solane Meis amantior veterum Dat spiritus imagine Auras praecutiunt percurrens mihi noctem","title":"Noli amborum"},{"location":"about/#coniunx-crater-tunc-vota-at-sed-dispensat","text":"Auctor condita minimo auxilium at ipsa reccidit ! Et huic supplice: dilata metas! Citi quas que? Graves et clipeus sed factis tabo miratur Pallade fert Hiberi certo tenet semesarumque serrae in. Gratia movet nuntia deprendit artus avidusque detulit pia oriens seque nam remoretur.","title":"Coniunx crater tunc vota at sed dispensat"},{"location":"about/#quem-sed-cur-fauces-enses-firmat-tecta","text":"Lucida secundo praesentem sagitta, in iras in, ut verti: pignora lupi. Ait est viscere hinc, in mater fecit putares ignara: loqui ille vacuas ait vultum faventibus? Pedes Rhadamanthus arvis exhalantes virginis auro praestans nec robora caedis? Stagna mihi laetitiae praesentia ipsum quas aperti , Iuppiter accensus condiderat equos parientem rabie utque, pugnabant, frementem subitae. Altissimus nam. Fateor tuum suum haut inquam tunc dextram ipsa per supra citis Arcadiae; nomina sunto. Corpora sub tot ideoque praedator et cornua, erat oblita mentem, se non montes orbis sed ducar.","title":"Quem sed cur fauces enses firmat tecta"},{"location":"about/#unde-pararet-utrumque-qui-rapacibus-dare-nec","text":"Liberiore potiere et suam . Dei vim quoque aethera subiectum omnibus Iphide iubet tum et procul morte nominat ponti. Forte pharetram vimine facta etsi aequoris ministri, ille equos longeque agat, qui harenam lecto quidem qua! Monitusque fecisse nemus Moderamine pro fratrique Dea ad erubuit cadendum figurae thalamos pharetras Ignis quos magis solebam Specie vim functus ultor Fine ne, dederat lacrimisque fruge tamen incendia, nostris nec quam adsensere. Eburnas e et est saltu et negabat quidem arbore Euboica formosis sacrata nefas dedit vineta: quam? Sub Alcmena, Venerem non illam motis valle tenentem perque cortice quos.","title":"Unde pararet utrumque qui rapacibus dare nec"},{"location":"mariadb/test-framework/","text":"[MariaDB] \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c mariadb \ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\ub294 \uacfc\uc815 \ubd84\uc11d \ube4c\ub4dc mkdir build && cd build && cmake .. && cmake --build . --parallel 5 \ube4c\ub4dc \uacb0\uacfc\uac00 \uc800\uc7a5\ub420 \ub514\ub809\ud1a0\ub9ac build \uc0dd\uc131&\uc774\ub3d9 \ub530\ub85c \uc635\uc158\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ube4c\ub4dc\ub41c\ub2e4 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c cmake \uba85\ub839\uc5b4 \uc2e4\ud589 \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build/unittest/mysys/my_malloc-t \uc2e4\ud589 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c MariaDB\uc758 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ctest, cmake\ub97c \uac10\uc2f8\ub294 cmake \ub9e4\ud06c\ub85c\uc640 \ud568\uc218\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4 MY_ADD_TESTS(dynarray LINK_LIBRARYS mysys) cmake/ctest.cmake \uc5d0 \uc815\uc758\ub41c cmake \ub9e4\ud06c\ub85c dynarray-t.c \ud30c\uc77c\uc5d0 mytap \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9c1\ud06c\ud558\uc5ec dynarray-t \uc2e4\ud589\ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud55c\ub2e4 mytap : MariaDB\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud14c\uc2a4\ud2b8 \uc791\uc131\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5 unittest/examples/simple-t.c \uc5d0\uc11c \uc0ac\uc6a9\ubc95\uc744 \uc775\ud790 \uc218 \uc788\ub2e4 plan \ud568\uc218 : \uc774 \ud30c\uc77c\uc5d0\uc11c \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560\uc9c0 \ubbf8\ub9ac \uc120\uc5b8\ud55c\ub2e4 ok \ud568\uc218 : \uccab \ubc88\uc9f8 \uc778\uc790\ub85c 0\uc774 \uc804\ub2ec\ub418\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud328\ub97c \uc758\ubbf8\ud55c\ub2e4 \uc2e4\uc2b5 cmake\uc5d0\uac8c \ud14c\uc2a4\ud2b8 \ube4c\ub4dc \ubc29\ubc95 \uc804\ub2ec unittest/mysys/CMakeLists.txt \ud30c\uc77c \ud3b8\uc9d1 MY_ADD_TESTS \ub9e4\ud06c\ub85c\uc5d0 dynarray \ucd94\uac00 unittest/mysys/dynarray-t.c \ud30c\uc77c \uc0dd\uc131 #include <tap.h> #include <my_global.h> #include <my_sys.h> #include <stdio.h> struct _foo { int num; char str[64]; }; static unsigned int test_dynamic_increase(int size) { /* @given * \ucd08\uae30 \ud06c\uae30\uac00 size\uc774\uace0 element32\uac1c\ub9cc\ud07c\uc758 \uacf5\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub3d9\uc801 \ubc30\uc5f4 \uc0dd\uc131 */ unsigned int inc = 32; DYNAMIC_ARRAY array; // my_init_dynamic_array \ud568\uc218\ub294 \ud56d\uc0c1 FALSE\ub97c \ubc18\ud658\ud55c\ub2e4 my_init_dynamic_array(PSI_NOT_INSTRUMENTED, &array, sizeof(struct _foo), size, inc, MYF(0)); /* @when * size + 1\uac1c\uc758 \uc6d0\uc18c\ub97c \ubc30\uc5f4\uc5d0 \ucd94\uac00 */ unsigned int i; struct _foo foo; for (i = 0; i <= size; ++i) { foo.num = i; snprintf(foo.str, 64, \"sample string-%u\", i); /* @then * \uc6d0\uc18c \ucd94\uac00\uc5d0 \uc131\uacf5 */ if (insert_dynamic(&array, (const void *)&foo)) { diag(\"insert_dynamic failed\"); return TRUE; } } /* @then * capacity\uac00 size\uc5d0\uc11c inc\ub9cc\ud07c \uc99d\uac00\ud568 */ if (size + array.alloc_increment != array.max_element) { diag(\"actual: %u expected: %u\", array.max_element, size+array.alloc_increment); return TRUE; } /* * C/C++ \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \ud568\uc218\uac00 \uc131\uacf5\ud560 \uacbd\uc6b0 0\uc744 \ubc18\ud658\ud558\ub294 \uad00\ub840\ub97c \ub530\ub984 */ return FALSE; } int main() { unsigned int a,b; unsigned int failed; plan(1); diag(\"Testing DYNAMIC_ARRAY\"); failed = 0; for (a = 1 ; a < 200 ; ++a) if (test_dynamic_increase(a)) { ++failed; diag(\"Failed for test_dynamic_increase(%3u)\", a); } ok(failed == 0, \"test_dynamic_increase\"); return exit_status(); } \ube4c\ub4dc\ud55c \ub4a4 \uc804\uccb4 \uc2e4\ud589 \ub610\ub294 build/unittest/mysys/dynarray-t \uc2e4\ud589 \ucd9c\ucc98 Get the code, build it, test it Writing Good Test Cases for MariaDB Server","title":"\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#mariadb","text":"mariadb \ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\ub294 \uacfc\uc815 \ubd84\uc11d","title":"[MariaDB] \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#_1","text":"mkdir build && cd build && cmake .. && cmake --build . --parallel 5 \ube4c\ub4dc \uacb0\uacfc\uac00 \uc800\uc7a5\ub420 \ub514\ub809\ud1a0\ub9ac build \uc0dd\uc131&\uc774\ub3d9 \ub530\ub85c \uc635\uc158\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ube4c\ub4dc\ub41c\ub2e4","title":"\ube4c\ub4dc"},{"location":"mariadb/test-framework/#_2","text":"\ubaa8\ub4e0 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c cmake \uba85\ub839\uc5b4 \uc2e4\ud589 \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build/unittest/mysys/my_malloc-t \uc2e4\ud589","title":"\ud14c\uc2a4\ud2b8 \uc2e4\ud589"},{"location":"mariadb/test-framework/#_3","text":"MariaDB\uc758 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ctest, cmake\ub97c \uac10\uc2f8\ub294 cmake \ub9e4\ud06c\ub85c\uc640 \ud568\uc218\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4 MY_ADD_TESTS(dynarray LINK_LIBRARYS mysys) cmake/ctest.cmake \uc5d0 \uc815\uc758\ub41c cmake \ub9e4\ud06c\ub85c dynarray-t.c \ud30c\uc77c\uc5d0 mytap \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9c1\ud06c\ud558\uc5ec dynarray-t \uc2e4\ud589\ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud55c\ub2e4 mytap : MariaDB\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud14c\uc2a4\ud2b8 \uc791\uc131\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5 unittest/examples/simple-t.c \uc5d0\uc11c \uc0ac\uc6a9\ubc95\uc744 \uc775\ud790 \uc218 \uc788\ub2e4 plan \ud568\uc218 : \uc774 \ud30c\uc77c\uc5d0\uc11c \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560\uc9c0 \ubbf8\ub9ac \uc120\uc5b8\ud55c\ub2e4 ok \ud568\uc218 : \uccab \ubc88\uc9f8 \uc778\uc790\ub85c 0\uc774 \uc804\ub2ec\ub418\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud328\ub97c \uc758\ubbf8\ud55c\ub2e4","title":"\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#_4","text":"cmake\uc5d0\uac8c \ud14c\uc2a4\ud2b8 \ube4c\ub4dc \ubc29\ubc95 \uc804\ub2ec unittest/mysys/CMakeLists.txt \ud30c\uc77c \ud3b8\uc9d1 MY_ADD_TESTS \ub9e4\ud06c\ub85c\uc5d0 dynarray \ucd94\uac00 unittest/mysys/dynarray-t.c \ud30c\uc77c \uc0dd\uc131 #include <tap.h> #include <my_global.h> #include <my_sys.h> #include <stdio.h> struct _foo { int num; char str[64]; }; static unsigned int test_dynamic_increase(int size) { /* @given * \ucd08\uae30 \ud06c\uae30\uac00 size\uc774\uace0 element32\uac1c\ub9cc\ud07c\uc758 \uacf5\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub3d9\uc801 \ubc30\uc5f4 \uc0dd\uc131 */ unsigned int inc = 32; DYNAMIC_ARRAY array; // my_init_dynamic_array \ud568\uc218\ub294 \ud56d\uc0c1 FALSE\ub97c \ubc18\ud658\ud55c\ub2e4 my_init_dynamic_array(PSI_NOT_INSTRUMENTED, &array, sizeof(struct _foo), size, inc, MYF(0)); /* @when * size + 1\uac1c\uc758 \uc6d0\uc18c\ub97c \ubc30\uc5f4\uc5d0 \ucd94\uac00 */ unsigned int i; struct _foo foo; for (i = 0; i <= size; ++i) { foo.num = i; snprintf(foo.str, 64, \"sample string-%u\", i); /* @then * \uc6d0\uc18c \ucd94\uac00\uc5d0 \uc131\uacf5 */ if (insert_dynamic(&array, (const void *)&foo)) { diag(\"insert_dynamic failed\"); return TRUE; } } /* @then * capacity\uac00 size\uc5d0\uc11c inc\ub9cc\ud07c \uc99d\uac00\ud568 */ if (size + array.alloc_increment != array.max_element) { diag(\"actual: %u expected: %u\", array.max_element, size+array.alloc_increment); return TRUE; } /* * C/C++ \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \ud568\uc218\uac00 \uc131\uacf5\ud560 \uacbd\uc6b0 0\uc744 \ubc18\ud658\ud558\ub294 \uad00\ub840\ub97c \ub530\ub984 */ return FALSE; } int main() { unsigned int a,b; unsigned int failed; plan(1); diag(\"Testing DYNAMIC_ARRAY\"); failed = 0; for (a = 1 ; a < 200 ; ++a) if (test_dynamic_increase(a)) { ++failed; diag(\"Failed for test_dynamic_increase(%3u)\", a); } ok(failed == 0, \"test_dynamic_increase\"); return exit_status(); } \ube4c\ub4dc\ud55c \ub4a4 \uc804\uccb4 \uc2e4\ud589 \ub610\ub294 build/unittest/mysys/dynarray-t \uc2e4\ud589","title":"\uc2e4\uc2b5"},{"location":"mariadb/test-framework/#_5","text":"Get the code, build it, test it Writing Good Test Cases for MariaDB Server","title":"\ucd9c\ucc98"},{"location":"unix/process-relationships/","text":"[UNIX] session POSIX 1.1\uc5d0\uc11c \ub3c4\uc785\ud55c \uc138\uc158(session)\uc774\ub77c\ub294 \uac1c\ub150\uc5d0 \ub300\ud55c \uc18c\uac1c \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\ub294 pid\ub97c \uac00\uc9c0\uba70 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0 \uc18d\ud55c\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \ud55c \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \uad6c\uc131\ub41c \uc9d1\ud569\uc774\uace0 pgid\ub97c \uac00\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc8fc\ub85c \uac19\uc740 \uc791\uc5c5 \uc744 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub4e4\uc758 \uc9d1\ud569\uc774\uace0 \uac19\uc740 \ud130\ubbf8\ub110\ub85c\ubd80\ud130 \uc2e0\ud638 \ub97c \ubc1b\ub294\ub2e4 shell pipeline( | )\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4 proc1 | proc2 & proc3 | proc4 | proc5 proc1, proc2\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud558\uace0 proc3, proc4, proc5\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud55c\ub2e4 & \uae30\ud638\ub294 proc1, proc2\ub97c background process group\uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4 #include <unistd.h> /** * pid\uac00 0\uc774\uba74 \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uc758 pgid\ub97c \ubc18\ud658\ud55c\ub2e4 * \uc2e4\ud328\ud560 \uacbd\uc6b0 -1\uc744 \ubc18\ud658\ud55c\ub2e4 */ pid_t getpgid(pid_t pid) \uadf8\ub8f9 \ub9ac\ub354 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0\ub294 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc874\uc7ac\ud558\ub294\ub370 pid\uac12\uc774 pgid\uc640 \ub3d9\uc77c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uc774\ub2e4 \uadf8\ub8f9 \ub9ac\ub354\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud55c \ud504\ub85c\uc138\uc2a4\uc774\uace0 \uadf8\ub8f9 \uc548\uc5d0 \ud504\ub85c\uc138\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc885\ub8cc\ub418\uc5b4\ub3c4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc5ec\uc804\ud788 \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uac00 \uc885\ub8cc\ub418\uc5b4\uc57c \uadf8\ub8f9\uc774 \uc0ac\ub77c\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4\ub294 \uc790\uc2e0\uc758 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4 \uc138\uc158 \uc138\uc158\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \uc9d1\ud569\uc774\ub2e4 #include <unistd.h> /** * \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ud504\ub85c\uc138\uc2a4 \ub9ac\ub354\uc774\uba74 \uc2e4\ud328(-1 \ubc18\ud658) * \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c8 \uc138\uc158\uc744 \uc0dd\uc131\ud558\uace0 pgid \ubc18\ud658 */ pid_t setsid(void); \uc704\uc758 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc744 \uc0dd\uc131\ud55c\ub2e4 setsid \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \ud504\ub85c\uc138\uc2a4\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc758 \ub9ac\ub354\uc778 \ub3d9\uc2dc\uc5d0 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \ub9ac\ub354\uac00 \ub41c\ub2e4 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc774 \ud55c \uac1c \uc788\uace0 \uadf8 \uadf8\ub8f9\uc5d0 \ud504\ub85c\uc138\uc2a4\ub294 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4 \ud55c\uac1c\uc774\ub2e4 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4\uac00 \ud568\uc218 \ud638\ucd9c \uc804\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uadf8 \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc\uc758 \uc5f0\uacb0 \uad00\uacc4 \uac00 \ub04a\uc5b4\uc9c4\ub2e4 open\ud55c\uac8c \uc790\ub3d9\uc73c\ub85c \ub2eb\ud78c\ub2e4\ub294 \ub73b\uc778\uac00? \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc544\ub2d8\uc744 \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 fork\ub97c \ud638\ucd9c\ud55c \ub4a4 \ubd80\ubaa8\ub294 \uc885\ub8cc\ud558\uace0 \uc790\uc2dd\uc740 \uacc4\uc18d \uc2e4\ud589\ud558\ub294 \uac83\uc774\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110 \uc138\uc158\uc5d0\ub294 \ud558\ub098\uc758 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4(\uc5c6\uc744 \uc218\ub3c4 \uc788\ub2e4) \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc \uc5f0\uacb0 \uc744 \ud655\ub9bd\ud55c \uc138\uc158 \ub9ac\ub354\ub97c \uc81c\uc5b4 \ud504\ub85c\uc138\uc2a4\ub77c\uace0 \ud55c\ub2e4 \uc138\uc158\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 background group, foreground group\uc73c\ub85c \ubd84\ub958\ud560 \uc218 \uc788\ub2e4 foreground \uadf8\ub8f9\uc740 \ud55c \uac1c, background group\uc740 \ud558\ub098 \uc774\uc0c1 \uc788\uc744 \uc218 \uc788\ub2e4 \uc138\uc158\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc788\uc73c\uba74 \uadf8 \uc138\uc158\uc5d0\ub294 \ubc18\ub4dc\uc2dc \ud558\ub098\uc758 foreground process \uadf8\ub8f9\uc774 \uc788\ub2e4 \ud130\ubbf8\ub110\uc5d0\uc11c interrupt key(e.g. ctrl-c)\ub97c \uc785\ub825\ud558\uba74 foreground group\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uc5d0\uac8c signal\uc774 \uc804\ub2ec\ub41c\ub2e4 /dev/tty \ud45c\uc900 \uc785\ucd9c\ub825 \ub9ac\ub2e4\uc774\ub809\uc158 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc785\ucd9c\ub825 \ub300\uc0c1\uc774 \ud130\ubbf8\ub110\uc774 \ub418\ub3c4\ub85d \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 /dev/tty device file\uc744 open\ud558\ub294 \uac83\uc774\ub2e4 \ucee4\ub110\uc740 \uc774 \ud30c\uc77c\uc744 \uc81c\uc5b4 \ud130\ubbf8\ub110\ub85c \uc778\uc2dd\ud55c\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5c6\ub294 \ud504\ub85c\uc138\uc2a4\uac00 /dev/tty \ub97c open\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba74 \uc2e4\ud328\ud55c\ub2e4 \uc2e4\uc2b5 procinfo.c cli \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \ud504\ub85c\uc138\uc2a4\uc758 \uadf8\ub8f9 \uc544\uc774\ub514\uc640 \uc138\uc158 \uc544\uc774\ub514\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 #include <stdio.h> #include <unistd.h> #include <stdlib.h> int main(int argc, const char *argv[]) { if (argc == 1) return 1; pid_t tpid = atoi(argv[1]); printf(\"[%s] pid: %d pgid: %d sid: %d\\n\", argv[0], tpid, getpgid(tpid), getsid(tpid)); return 0; } amplify.c \ud45c\uc900\uc785\ub825\uc5d0\uc11c \uc77d\uc740 \ubb38\uc790\uc5f4\uc744 \ud45c\uc900 \ucd9c\ub825\uacfc \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5ec\ub7ec \ubc88 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 amplify < input.txt > output.txt \uc640 \uac19\uc774 \uc2e4\ud589(stdin, stdout \ub9ac\ub2e4\uc774\ub809\uc158)\ud558\ub354\ub77c\ub3c4 \ud130\ubbf8\ub110\uc5d0 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \ubcf4\uc7a5\ub41c\ub2e4 #include <unistd.h> #include <fcntl.h> #include <string.h> #include <stdio.h> #include <stdlib.h> void printn2stdout(const unsigned char str[], int n) { for (int i = 0; i < n; i++) printf(\"%s\\n\", str); } void print2control_terminal(const unsigned char str[]) { int tfd; tfd = open(\"/dev/tty\", O_WRONLY); if (tfd < 0) return; unsigned char buffer[7*128]; memset(buffer, '\\0', 7*128); snprintf(buffer, sizeof(buffer), \"\\033[31m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[32m%s\\033[0m\\n\" \"\\033[34m%s\\033[0m\\n\" \"\\033[36m%s\\033[0m\\n\" \"\\033[35m%s\\033[0m\\n\", str, str, str, str, str, str, str); write(tfd, buffer, 7*128); close(tfd); } int main(int argc, const char *argv[]) { int n = 7; if (argc == 2) n = atoi(argv[1]); unsigned char str[128]; memset(str, '\\0', 128); fgets(str, sizeof(str), stdin); if (str[strlen(str) - 1] == '\\n') str[strlen(str) - 1] = '\\0'; print2control_terminal(str); printn2stdout(str, n); return 0; } \ucd9c\ucc98 APUE3e","title":"\uc138\uc158"},{"location":"unix/process-relationships/#unix-session","text":"POSIX 1.1\uc5d0\uc11c \ub3c4\uc785\ud55c \uc138\uc158(session)\uc774\ub77c\ub294 \uac1c\ub150\uc5d0 \ub300\ud55c \uc18c\uac1c","title":"[UNIX] session"},{"location":"unix/process-relationships/#_1","text":"\ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\ub294 pid\ub97c \uac00\uc9c0\uba70 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0 \uc18d\ud55c\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \ud55c \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \uad6c\uc131\ub41c \uc9d1\ud569\uc774\uace0 pgid\ub97c \uac00\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc8fc\ub85c \uac19\uc740 \uc791\uc5c5 \uc744 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub4e4\uc758 \uc9d1\ud569\uc774\uace0 \uac19\uc740 \ud130\ubbf8\ub110\ub85c\ubd80\ud130 \uc2e0\ud638 \ub97c \ubc1b\ub294\ub2e4 shell pipeline( | )\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4 proc1 | proc2 & proc3 | proc4 | proc5 proc1, proc2\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud558\uace0 proc3, proc4, proc5\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud55c\ub2e4 & \uae30\ud638\ub294 proc1, proc2\ub97c background process group\uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4 #include <unistd.h> /** * pid\uac00 0\uc774\uba74 \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uc758 pgid\ub97c \ubc18\ud658\ud55c\ub2e4 * \uc2e4\ud328\ud560 \uacbd\uc6b0 -1\uc744 \ubc18\ud658\ud55c\ub2e4 */ pid_t getpgid(pid_t pid)","title":"\ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9"},{"location":"unix/process-relationships/#_2","text":"\ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0\ub294 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc874\uc7ac\ud558\ub294\ub370 pid\uac12\uc774 pgid\uc640 \ub3d9\uc77c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uc774\ub2e4 \uadf8\ub8f9 \ub9ac\ub354\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud55c \ud504\ub85c\uc138\uc2a4\uc774\uace0 \uadf8\ub8f9 \uc548\uc5d0 \ud504\ub85c\uc138\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc885\ub8cc\ub418\uc5b4\ub3c4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc5ec\uc804\ud788 \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uac00 \uc885\ub8cc\ub418\uc5b4\uc57c \uadf8\ub8f9\uc774 \uc0ac\ub77c\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4\ub294 \uc790\uc2e0\uc758 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4","title":"\uadf8\ub8f9 \ub9ac\ub354"},{"location":"unix/process-relationships/#_3","text":"\uc138\uc158\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \uc9d1\ud569\uc774\ub2e4 #include <unistd.h> /** * \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ud504\ub85c\uc138\uc2a4 \ub9ac\ub354\uc774\uba74 \uc2e4\ud328(-1 \ubc18\ud658) * \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c8 \uc138\uc158\uc744 \uc0dd\uc131\ud558\uace0 pgid \ubc18\ud658 */ pid_t setsid(void); \uc704\uc758 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc744 \uc0dd\uc131\ud55c\ub2e4 setsid \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \ud504\ub85c\uc138\uc2a4\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc758 \ub9ac\ub354\uc778 \ub3d9\uc2dc\uc5d0 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \ub9ac\ub354\uac00 \ub41c\ub2e4 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc774 \ud55c \uac1c \uc788\uace0 \uadf8 \uadf8\ub8f9\uc5d0 \ud504\ub85c\uc138\uc2a4\ub294 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4 \ud55c\uac1c\uc774\ub2e4 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4\uac00 \ud568\uc218 \ud638\ucd9c \uc804\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uadf8 \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc\uc758 \uc5f0\uacb0 \uad00\uacc4 \uac00 \ub04a\uc5b4\uc9c4\ub2e4 open\ud55c\uac8c \uc790\ub3d9\uc73c\ub85c \ub2eb\ud78c\ub2e4\ub294 \ub73b\uc778\uac00? \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc544\ub2d8\uc744 \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 fork\ub97c \ud638\ucd9c\ud55c \ub4a4 \ubd80\ubaa8\ub294 \uc885\ub8cc\ud558\uace0 \uc790\uc2dd\uc740 \uacc4\uc18d \uc2e4\ud589\ud558\ub294 \uac83\uc774\ub2e4","title":"\uc138\uc158"},{"location":"unix/process-relationships/#_4","text":"\uc138\uc158\uc5d0\ub294 \ud558\ub098\uc758 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4(\uc5c6\uc744 \uc218\ub3c4 \uc788\ub2e4) \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc \uc5f0\uacb0 \uc744 \ud655\ub9bd\ud55c \uc138\uc158 \ub9ac\ub354\ub97c \uc81c\uc5b4 \ud504\ub85c\uc138\uc2a4\ub77c\uace0 \ud55c\ub2e4 \uc138\uc158\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 background group, foreground group\uc73c\ub85c \ubd84\ub958\ud560 \uc218 \uc788\ub2e4 foreground \uadf8\ub8f9\uc740 \ud55c \uac1c, background group\uc740 \ud558\ub098 \uc774\uc0c1 \uc788\uc744 \uc218 \uc788\ub2e4 \uc138\uc158\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc788\uc73c\uba74 \uadf8 \uc138\uc158\uc5d0\ub294 \ubc18\ub4dc\uc2dc \ud558\ub098\uc758 foreground process \uadf8\ub8f9\uc774 \uc788\ub2e4 \ud130\ubbf8\ub110\uc5d0\uc11c interrupt key(e.g. ctrl-c)\ub97c \uc785\ub825\ud558\uba74 foreground group\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uc5d0\uac8c signal\uc774 \uc804\ub2ec\ub41c\ub2e4","title":"\uc81c\uc5b4 \ud130\ubbf8\ub110"},{"location":"unix/process-relationships/#devtty","text":"\ud45c\uc900 \uc785\ucd9c\ub825 \ub9ac\ub2e4\uc774\ub809\uc158 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc785\ucd9c\ub825 \ub300\uc0c1\uc774 \ud130\ubbf8\ub110\uc774 \ub418\ub3c4\ub85d \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 /dev/tty device file\uc744 open\ud558\ub294 \uac83\uc774\ub2e4 \ucee4\ub110\uc740 \uc774 \ud30c\uc77c\uc744 \uc81c\uc5b4 \ud130\ubbf8\ub110\ub85c \uc778\uc2dd\ud55c\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5c6\ub294 \ud504\ub85c\uc138\uc2a4\uac00 /dev/tty \ub97c open\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba74 \uc2e4\ud328\ud55c\ub2e4","title":"/dev/tty"},{"location":"unix/process-relationships/#_5","text":"","title":"\uc2e4\uc2b5"},{"location":"unix/process-relationships/#procinfoc","text":"cli \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \ud504\ub85c\uc138\uc2a4\uc758 \uadf8\ub8f9 \uc544\uc774\ub514\uc640 \uc138\uc158 \uc544\uc774\ub514\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 #include <stdio.h> #include <unistd.h> #include <stdlib.h> int main(int argc, const char *argv[]) { if (argc == 1) return 1; pid_t tpid = atoi(argv[1]); printf(\"[%s] pid: %d pgid: %d sid: %d\\n\", argv[0], tpid, getpgid(tpid), getsid(tpid)); return 0; }","title":"procinfo.c"},{"location":"unix/process-relationships/#amplifyc","text":"\ud45c\uc900\uc785\ub825\uc5d0\uc11c \uc77d\uc740 \ubb38\uc790\uc5f4\uc744 \ud45c\uc900 \ucd9c\ub825\uacfc \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5ec\ub7ec \ubc88 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 amplify < input.txt > output.txt \uc640 \uac19\uc774 \uc2e4\ud589(stdin, stdout \ub9ac\ub2e4\uc774\ub809\uc158)\ud558\ub354\ub77c\ub3c4 \ud130\ubbf8\ub110\uc5d0 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \ubcf4\uc7a5\ub41c\ub2e4 #include <unistd.h> #include <fcntl.h> #include <string.h> #include <stdio.h> #include <stdlib.h> void printn2stdout(const unsigned char str[], int n) { for (int i = 0; i < n; i++) printf(\"%s\\n\", str); } void print2control_terminal(const unsigned char str[]) { int tfd; tfd = open(\"/dev/tty\", O_WRONLY); if (tfd < 0) return; unsigned char buffer[7*128]; memset(buffer, '\\0', 7*128); snprintf(buffer, sizeof(buffer), \"\\033[31m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[32m%s\\033[0m\\n\" \"\\033[34m%s\\033[0m\\n\" \"\\033[36m%s\\033[0m\\n\" \"\\033[35m%s\\033[0m\\n\", str, str, str, str, str, str, str); write(tfd, buffer, 7*128); close(tfd); } int main(int argc, const char *argv[]) { int n = 7; if (argc == 2) n = atoi(argv[1]); unsigned char str[128]; memset(str, '\\0', 128); fgets(str, sizeof(str), stdin); if (str[strlen(str) - 1] == '\\n') str[strlen(str) - 1] = '\\0'; print2control_terminal(str); printn2stdout(str, n); return 0; }","title":"amplify.c"},{"location":"unix/process-relationships/#_6","text":"APUE3e","title":"\ucd9c\ucc98"}]}