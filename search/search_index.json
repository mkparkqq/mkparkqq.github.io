{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc774\uac83\uc800\uac83 document.addEventListener(\"DOMContentLoaded\", function() { var toc = document.querySelector('div#toc-collapse'); if (toc) { toc.remove(); } });","title":"Home"},{"location":"about/","text":"Manibus vi fitque quaerunt mediis Noli amborum Lorem markdownum lumina instanti nox venerit opem ore adeo quod vox, quo tardo labori intabescere. Ranae inmoriuntur visa. Sub illos. Est infelix et plura tollere, in ultro, regique Iam, sedes docet post proelia? O non vindice Thereaque iniuria Musa inque ventis, undis aliis. Terret canum vides terque negaverit solane Meis amantior veterum Dat spiritus imagine Auras praecutiunt percurrens mihi noctem Coniunx crater tunc vota at sed dispensat Auctor condita minimo auxilium at ipsa reccidit ! Et huic supplice: dilata metas! Citi quas que? Graves et clipeus sed factis tabo miratur Pallade fert Hiberi certo tenet semesarumque serrae in. Gratia movet nuntia deprendit artus avidusque detulit pia oriens seque nam remoretur. Quem sed cur fauces enses firmat tecta Lucida secundo praesentem sagitta, in iras in, ut verti: pignora lupi. Ait est viscere hinc, in mater fecit putares ignara: loqui ille vacuas ait vultum faventibus? Pedes Rhadamanthus arvis exhalantes virginis auro praestans nec robora caedis? Stagna mihi laetitiae praesentia ipsum quas aperti , Iuppiter accensus condiderat equos parientem rabie utque, pugnabant, frementem subitae. Altissimus nam. Fateor tuum suum haut inquam tunc dextram ipsa per supra citis Arcadiae; nomina sunto. Corpora sub tot ideoque praedator et cornua, erat oblita mentem, se non montes orbis sed ducar. Unde pararet utrumque qui rapacibus dare nec Liberiore potiere et suam . Dei vim quoque aethera subiectum omnibus Iphide iubet tum et procul morte nominat ponti. Forte pharetram vimine facta etsi aequoris ministri, ille equos longeque agat, qui harenam lecto quidem qua! Monitusque fecisse nemus Moderamine pro fratrique Dea ad erubuit cadendum figurae thalamos pharetras Ignis quos magis solebam Specie vim functus ultor Fine ne, dederat lacrimisque fruge tamen incendia, nostris nec quam adsensere. Eburnas e et est saltu et negabat quidem arbore Euboica formosis sacrata nefas dedit vineta: quam? Sub Alcmena, Venerem non illam motis valle tenentem perque cortice quos.","title":"Manibus vi fitque quaerunt mediis"},{"location":"about/#manibus-vi-fitque-quaerunt-mediis","text":"","title":"Manibus vi fitque quaerunt mediis"},{"location":"about/#noli-amborum","text":"Lorem markdownum lumina instanti nox venerit opem ore adeo quod vox, quo tardo labori intabescere. Ranae inmoriuntur visa. Sub illos. Est infelix et plura tollere, in ultro, regique Iam, sedes docet post proelia? O non vindice Thereaque iniuria Musa inque ventis, undis aliis. Terret canum vides terque negaverit solane Meis amantior veterum Dat spiritus imagine Auras praecutiunt percurrens mihi noctem","title":"Noli amborum"},{"location":"about/#coniunx-crater-tunc-vota-at-sed-dispensat","text":"Auctor condita minimo auxilium at ipsa reccidit ! Et huic supplice: dilata metas! Citi quas que? Graves et clipeus sed factis tabo miratur Pallade fert Hiberi certo tenet semesarumque serrae in. Gratia movet nuntia deprendit artus avidusque detulit pia oriens seque nam remoretur.","title":"Coniunx crater tunc vota at sed dispensat"},{"location":"about/#quem-sed-cur-fauces-enses-firmat-tecta","text":"Lucida secundo praesentem sagitta, in iras in, ut verti: pignora lupi. Ait est viscere hinc, in mater fecit putares ignara: loqui ille vacuas ait vultum faventibus? Pedes Rhadamanthus arvis exhalantes virginis auro praestans nec robora caedis? Stagna mihi laetitiae praesentia ipsum quas aperti , Iuppiter accensus condiderat equos parientem rabie utque, pugnabant, frementem subitae. Altissimus nam. Fateor tuum suum haut inquam tunc dextram ipsa per supra citis Arcadiae; nomina sunto. Corpora sub tot ideoque praedator et cornua, erat oblita mentem, se non montes orbis sed ducar.","title":"Quem sed cur fauces enses firmat tecta"},{"location":"about/#unde-pararet-utrumque-qui-rapacibus-dare-nec","text":"Liberiore potiere et suam . Dei vim quoque aethera subiectum omnibus Iphide iubet tum et procul morte nominat ponti. Forte pharetram vimine facta etsi aequoris ministri, ille equos longeque agat, qui harenam lecto quidem qua! Monitusque fecisse nemus Moderamine pro fratrique Dea ad erubuit cadendum figurae thalamos pharetras Ignis quos magis solebam Specie vim functus ultor Fine ne, dederat lacrimisque fruge tamen incendia, nostris nec quam adsensere. Eburnas e et est saltu et negabat quidem arbore Euboica formosis sacrata nefas dedit vineta: quam? Sub Alcmena, Venerem non illam motis valle tenentem perque cortice quos.","title":"Unde pararet utrumque qui rapacibus dare nec"},{"location":"cprogramming/chunk-structure/","text":"chunk structure glibc\ub294 \uba54\ubaa8\ub9ac \ub3d9\uc801 \ud560\ub2f9 api\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 \ub0b4\ubd80\uc801\uc73c\ub85c \uba54\ubaa8\ub9ac\ub97c chunk \ub2e8\uc704\ub85c \uad00\ub9ac\ud55c\ub2e4 allocated chunk chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of chunk, in bytes |A|M|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | User data starts here... . . . . (malloc_usable_size() bytes) . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (size of chunk, but used for application data) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|1| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ prev_size : \uc774\uc804 chunk\uac00 free chunk\uc774\uba74 \uc774 \uc601\uc5ed\uc5d0\ub294 \uc774\uc804 chunk\uc758 \ud06c\uae30\uac00 \uc800\uc7a5\ub41c\ub2e4. \ubc18\ub300\ub85c \ud560\ub2f9\ub41c chunk\uc774\uba74 \ud574\ub2f9 chunk\uc758 user data \uac00 \uc800\uc7a5\ub41c\ub2e4 mchunk_size : \ud604\uc7ac chunk\uc758 \ud06c\uae30. \ub9c8\uc9c0\ub9c9 \uc138 \uac1c\uc758 \ube44\ud2b8(P, A, M)\ub294 flag bit\ub4e4\uc774\ub2e4 P (PREV_INUSE) : \uc774\uc804 chunk\uac00 \ud560\ub2f9\ub418\uc5c8\ub294\uc9c0 \ub098\ud0c0\ub0b8\ub2e4. \ud2b9\uc815 chunk\uac00 \ud560\ub2f9\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \uadf8 \ub2e4\uc74c chunk\uc758 bit 0\ub97c \ud655\uc778\ud558\uba74 \ub41c\ub2e4 M (IS_MMAPPED) : \ud604\uc7ac chunk\uac00 system call\uc5d0 \uc758\ud574 \ud560\ub2f9\ub418\uc5c8\ub294\uc9c0\ub97c \ub098\ud0c0\ub0b8\ub2e4 A (NON_MAIN_ARENA) : main arena\uc5d0 \ud3ec\ud568\ub41c chunk\uc774\uba74 0, thread\uac00 \ud560\ub2f9\ubc1b\uc740 arena\uc5d0 \ud3ec\ud568\ub41c chunk\uc774\uba74 1 free chunk chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `head:' | Size of chunk, in bytes |A|0|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (fd)Forward pointer to next chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (bk)Back pointer to previous chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Unused space (may be 0 bytes long) . . . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `foot:' | Size of chunk, in bytes | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|0| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ free chunk\uc5d0\ub9cc \uc788\ub294 \ud544\ub4dc fd(forward pointer) : \uac19\uc740 bin\uc5d0\uc11c \ub2e4\uc74c chunk\ub97c \uac00\ub9ac\ud0a8\ub2e4 bk(backward pointer) : \uac19\uc740 bin\uc5d0\uc11c \uc774\uc804 chunk\ub97c \uac00\ub9ac\ud0a8\ub2e4 Arena \uc11c\ub85c \ub2e4\ub978 \uc885\ub958\uc758 chunk\ub4e4\uc744 \uac00\ub9ac\ud0a4\ub294 \ud3ec\uc778\ud130\ub4e4\uc774 \uc800\uc7a5\ub41c \uad6c\uc870\uccb4 \uac01 thread\ub294 \uba54\ubaa8\ub9ac\ub97c \uc694\uccad\ud558\uba74 \ud558\ub098\uc758 arena\ub97c \ud560\ub2f9\ubc1b\ub294\ub2e4 arena\ub294 main arena\uc640 thread arena \ub450 \uc885\ub958\ub85c \ub098\ub25c\ub2e4 main arena\ub294 \ud504\ub85c\uc138\uc2a4 \ub2f9 \ud55c \uac1c \uc874\uc7ac\ud55c\ub2e4 \uc0c8\ub85c\uc6b4 \uc2a4\ub808\ub4dc\uac00 \uba54\ubaa8\ub9ac\ub97c \uc694\uccad\ud558\uba74 global linked list\uc5d0\uc11c arena\ub97c \ud558\ub098 \ud560\ub2f9\ud574\uc900\ub2e4 \uc0c8\ub85c\uc6b4 arena\uac00 \uc5c6\uace0 \uc804\uccb4 arena\uc758 \uac1c\uc218\uac00 M_ARENA_MAX\ub97c \ub118\uc9c0 \uc54a\uc558\ub2e4\uba74 malloc\uc740 arena\ub97c \ud558\ub098 \uc0c8\ub85c \uc0dd\uc131\ud55c\ub2e4 Heap heap\uc740 \ud558\ub098\uc758 frame header\uc640 chunk\ub4e4\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4 Glibc\ub294 OS\ub85c\ubd80\ud130 \uba54\ubaa8\ub9ac\ub97c heap \ub2e8\uc704 \ub85c \uc694\uccad\ud558\uace0 \ubc18\ud658\ud55c\ub2e4 glibc\uc5d0\uc11c heap\uc740 \ud504\ub85c\uc138\uc2a4 \uba54\ubaa8\ub9ac \uacf5\uac04 \uc911 heap\uc601\uc5ed\uacfc\ub294 \ub2e4\ub978 \uc758\ubbf8\uc774\ub2e4 glibc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub17c\ub9ac\uc801 \ub2e8\uc704\uc774\ub2e4 glibc\ub294 OS\uc5d0\uac8c \uba54\ubaa8\ub9ac\ub97c \uc694\uccad/\ubc18\ud658\ud560 \ub54c heap\uc774\ub77c\ub294 \ud070 \ub2e8\uc704\ub85c \uba54\ubaa8\ub9ac\ub97c \uc694\uccad\ud558\uace0 \ubc18\ud658\ud55c\ub2e4 main arena\uc640 heap arena\ub294 \uc0dd\uc131\ub420 \ub54c heap\uc744 \ud558\ub098 \uac00\uc9c4\ub2e4 thread arena\uc758 heap \ud06c\uae30\uac00 \ud2b9\uc815 \uac12(64MB) \uc774\uc0c1\uc774 \ub418\uba74 \uc0c8\ub85c\uc6b4 heap\uc774 \ucd94\uac00\ub41c\ub2e4 heap\ub4e4\uc740 \uc5f0\uacb0 \ub9ac\uc2a4\ud2b8\ub85c \uad00\ub9ac\ub41c\ub2e4 heap\uc774 \ucc98\uc74c \uc0dd\uc131\ub418\uba74 heap\uc5d0\ub294 top chunk\ub77c\ub294 chunk \ud558\ub098\ub9cc \uc874\uc7ac\ud55c\ub2e4. \uc774 heap\uc73c\ub85c \uba54\ubaa8\ub9ac \uc694\uccad\uc774 \uc62c \ub54c\ub9c8\ub2e4 top chunk\uc5d0\uc11c chunk \ud558\ub098\ub97c \ubd84\ub9ac\ud55c\ub2e4 references Glibc Malloc Principle Diving into glibc heap Part 2: Understanding the GLIBC Heap Implementation","title":"chunk structure"},{"location":"cprogramming/chunk-structure/#chunk-structure","text":"glibc\ub294 \uba54\ubaa8\ub9ac \ub3d9\uc801 \ud560\ub2f9 api\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 \ub0b4\ubd80\uc801\uc73c\ub85c \uba54\ubaa8\ub9ac\ub97c chunk \ub2e8\uc704\ub85c \uad00\ub9ac\ud55c\ub2e4","title":"chunk structure"},{"location":"cprogramming/chunk-structure/#allocated-chunk","text":"chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of chunk, in bytes |A|M|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | User data starts here... . . . . (malloc_usable_size() bytes) . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (size of chunk, but used for application data) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|1| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ prev_size : \uc774\uc804 chunk\uac00 free chunk\uc774\uba74 \uc774 \uc601\uc5ed\uc5d0\ub294 \uc774\uc804 chunk\uc758 \ud06c\uae30\uac00 \uc800\uc7a5\ub41c\ub2e4. \ubc18\ub300\ub85c \ud560\ub2f9\ub41c chunk\uc774\uba74 \ud574\ub2f9 chunk\uc758 user data \uac00 \uc800\uc7a5\ub41c\ub2e4 mchunk_size : \ud604\uc7ac chunk\uc758 \ud06c\uae30. \ub9c8\uc9c0\ub9c9 \uc138 \uac1c\uc758 \ube44\ud2b8(P, A, M)\ub294 flag bit\ub4e4\uc774\ub2e4 P (PREV_INUSE) : \uc774\uc804 chunk\uac00 \ud560\ub2f9\ub418\uc5c8\ub294\uc9c0 \ub098\ud0c0\ub0b8\ub2e4. \ud2b9\uc815 chunk\uac00 \ud560\ub2f9\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \uadf8 \ub2e4\uc74c chunk\uc758 bit 0\ub97c \ud655\uc778\ud558\uba74 \ub41c\ub2e4 M (IS_MMAPPED) : \ud604\uc7ac chunk\uac00 system call\uc5d0 \uc758\ud574 \ud560\ub2f9\ub418\uc5c8\ub294\uc9c0\ub97c \ub098\ud0c0\ub0b8\ub2e4 A (NON_MAIN_ARENA) : main arena\uc5d0 \ud3ec\ud568\ub41c chunk\uc774\uba74 0, thread\uac00 \ud560\ub2f9\ubc1b\uc740 arena\uc5d0 \ud3ec\ud568\ub41c chunk\uc774\uba74 1","title":"allocated chunk"},{"location":"cprogramming/chunk-structure/#free-chunk","text":"chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `head:' | Size of chunk, in bytes |A|0|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (fd)Forward pointer to next chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (bk)Back pointer to previous chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Unused space (may be 0 bytes long) . . . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `foot:' | Size of chunk, in bytes | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|0| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ free chunk\uc5d0\ub9cc \uc788\ub294 \ud544\ub4dc fd(forward pointer) : \uac19\uc740 bin\uc5d0\uc11c \ub2e4\uc74c chunk\ub97c \uac00\ub9ac\ud0a8\ub2e4 bk(backward pointer) : \uac19\uc740 bin\uc5d0\uc11c \uc774\uc804 chunk\ub97c \uac00\ub9ac\ud0a8\ub2e4","title":"free chunk"},{"location":"cprogramming/chunk-structure/#arena","text":"\uc11c\ub85c \ub2e4\ub978 \uc885\ub958\uc758 chunk\ub4e4\uc744 \uac00\ub9ac\ud0a4\ub294 \ud3ec\uc778\ud130\ub4e4\uc774 \uc800\uc7a5\ub41c \uad6c\uc870\uccb4 \uac01 thread\ub294 \uba54\ubaa8\ub9ac\ub97c \uc694\uccad\ud558\uba74 \ud558\ub098\uc758 arena\ub97c \ud560\ub2f9\ubc1b\ub294\ub2e4 arena\ub294 main arena\uc640 thread arena \ub450 \uc885\ub958\ub85c \ub098\ub25c\ub2e4 main arena\ub294 \ud504\ub85c\uc138\uc2a4 \ub2f9 \ud55c \uac1c \uc874\uc7ac\ud55c\ub2e4 \uc0c8\ub85c\uc6b4 \uc2a4\ub808\ub4dc\uac00 \uba54\ubaa8\ub9ac\ub97c \uc694\uccad\ud558\uba74 global linked list\uc5d0\uc11c arena\ub97c \ud558\ub098 \ud560\ub2f9\ud574\uc900\ub2e4 \uc0c8\ub85c\uc6b4 arena\uac00 \uc5c6\uace0 \uc804\uccb4 arena\uc758 \uac1c\uc218\uac00 M_ARENA_MAX\ub97c \ub118\uc9c0 \uc54a\uc558\ub2e4\uba74 malloc\uc740 arena\ub97c \ud558\ub098 \uc0c8\ub85c \uc0dd\uc131\ud55c\ub2e4","title":"Arena"},{"location":"cprogramming/chunk-structure/#heap","text":"heap\uc740 \ud558\ub098\uc758 frame header\uc640 chunk\ub4e4\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4 Glibc\ub294 OS\ub85c\ubd80\ud130 \uba54\ubaa8\ub9ac\ub97c heap \ub2e8\uc704 \ub85c \uc694\uccad\ud558\uace0 \ubc18\ud658\ud55c\ub2e4 glibc\uc5d0\uc11c heap\uc740 \ud504\ub85c\uc138\uc2a4 \uba54\ubaa8\ub9ac \uacf5\uac04 \uc911 heap\uc601\uc5ed\uacfc\ub294 \ub2e4\ub978 \uc758\ubbf8\uc774\ub2e4 glibc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub17c\ub9ac\uc801 \ub2e8\uc704\uc774\ub2e4 glibc\ub294 OS\uc5d0\uac8c \uba54\ubaa8\ub9ac\ub97c \uc694\uccad/\ubc18\ud658\ud560 \ub54c heap\uc774\ub77c\ub294 \ud070 \ub2e8\uc704\ub85c \uba54\ubaa8\ub9ac\ub97c \uc694\uccad\ud558\uace0 \ubc18\ud658\ud55c\ub2e4 main arena\uc640 heap arena\ub294 \uc0dd\uc131\ub420 \ub54c heap\uc744 \ud558\ub098 \uac00\uc9c4\ub2e4 thread arena\uc758 heap \ud06c\uae30\uac00 \ud2b9\uc815 \uac12(64MB) \uc774\uc0c1\uc774 \ub418\uba74 \uc0c8\ub85c\uc6b4 heap\uc774 \ucd94\uac00\ub41c\ub2e4 heap\ub4e4\uc740 \uc5f0\uacb0 \ub9ac\uc2a4\ud2b8\ub85c \uad00\ub9ac\ub41c\ub2e4 heap\uc774 \ucc98\uc74c \uc0dd\uc131\ub418\uba74 heap\uc5d0\ub294 top chunk\ub77c\ub294 chunk \ud558\ub098\ub9cc \uc874\uc7ac\ud55c\ub2e4. \uc774 heap\uc73c\ub85c \uba54\ubaa8\ub9ac \uc694\uccad\uc774 \uc62c \ub54c\ub9c8\ub2e4 top chunk\uc5d0\uc11c chunk \ud558\ub098\ub97c \ubd84\ub9ac\ud55c\ub2e4","title":"Heap"},{"location":"cprogramming/chunk-structure/#references","text":"Glibc Malloc Principle Diving into glibc heap Part 2: Understanding the GLIBC Heap Implementation","title":"references"},{"location":"cprogramming/devenv/","text":"C \uac1c\ubc1c\ud658\uacbd \uc124\uc815 Linux(Ubuntu) + vim + cscope + ctags python3, clipboard\ub97c \uc9c0\uc6d0\ud558\ub294 vim 9.1 \ube4c\ub4dc commit hash - 35699f17497dcdcfdd747fedaef28f208ac6eb5f branch - master Ubuntu 22.04 \uae30\uc900 python3-distutils python3 python3-dev libncurses-dev \ub4f1\uc758 dependency \uc124\uce58 clipboard, python3\uc744 \uc9c0\uc6d0\ud558\ub294 vim\uc744 \ube4c\ub4dc\ud558\uae30 \uc704\ud574 configure \ud30c\uc77c \uc2e4\ud589 sudo apt-get update sudo apt-get install -y python3-distutils python3-dev python3 \\ libx11-dev libxt-dev libgtk2.0-dev git clone --depth=1 https://github.com/vim/vim.git cd vim/src ./configure --with-features=huge \\ --enable-python3interp \\ --enable-gui=gtk2 \\ --enable-fail-if-missing \\ --with-python3-command=/usr/bin/python3 \\ --with-python3-config-dir=/usr/lib/python3.10/config-3.10-x86_64-linux-gnu make sudo make install cscope, ctags DB \uc0dd\uc131 \uc2a4\ud06c\ub9bd\ud2b8 #!/bin/bash rm -rf tags cscope.out find . \\( -name '*.c' -o -name '*.cpp' -o -name '*.cc' -o -name '*.h' -o -name '*.s' -o -name '*S' \\) -print > cscope.files ctags -R . cscope -i cscope.files rm cscope.files vimrc set ruler syntax on filetype plugin indent on set nocompatible set cindent set termguicolors set ts=4 sw=4 set clipboard=unnamedplus set showmatch set incsearch set hlsearch set formatoptions=cro \" c: Auto-wrap comments, \" r: Auto insert the current comment leader after 'Enter' \" o: Auto insert the current comment leader after 'o' or 'O' set colorcolumn=80 \" coloring on the N'th column set cursorline set nowrap set foldmethod=manual set backspace=indent,eol,start \" Google style guide \" C++ \ud30c\uc77c\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc124\uc815 autocmd FileType cpp setlocal expandtab shiftwidth=2 softtabstop=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30, \uad04\ud638 \uc2a4\ud0c0\uc77c, \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 set tabstop=2 \" \ud0ed\uc744 \uc2a4\ud398\uc774\uc2a4 2\uac1c\ub85c \uc124\uc815 set shiftwidth=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30 \uc2dc \uc2a4\ud398\uc774\uc2a4 2\uce78 \uc0ac\uc6a9 set expandtab \" \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 \" \uacf5\ubc31 \uc81c\uac70, \ud2b8\ub808\uc77c\ub9c1 \uacf5\ubc31 \uc790\ub3d9 \uc81c\uac70 autocmd BufWritePre *.cpp,*.h :%s/\\s\\+$//e \" \uad04\ud638 \uc790\ub3d9 \ub9de\ucd94\uae30 set smartindent set autoindent \" \uc790\ub3d9 \uc904\ubc14\uafc8 \" set textwidth=80 set colorcolumn=80 \" 80\ubc88\uc9f8 \uc5f4\uc5d0 \uceec\ub7fc \uac00\uc774\ub4dc \ud45c\uc2dc highlight ColorColumn ctermbg=lightgrey \" \uceec\ub7fc \uac00\uc774\ub4dc \uc0c9\uc0c1 \uc124\uc815 map <leader>1 :b!1<CR> map <leader>2 :b!2<CR> map <leader>3 :b!3<CR> map <leader>4 :b!4<CR> map <leader>5 :b!5<CR> map <leader>6 :b!6<CR> map <leader>7 :b!7<CR> map <leader>8 :b!8<CR> map <leader>9 :b!9<CR> map <leader>0 :b!0<CR> map <Tab>h :bp<CR> map <Tab>l :bn<CR> inoremap {<CR> {<CR>}<Esc>O inoremap { {}<left> inoremap {} {}<left> inoremap ( ()<left> inoremap () ()<left> inoremap [ []<left> inoremap [] []<left> inoremap \" \"\"<left> inoremap ' ''<left> inoremap ` ``<left> \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" plugins set rtp+=$HOME/.vim/bundle/Vundle.vim call vundle#begin() \" let Vundle manage Vundle, required Plugin 'VundleVim/Vundle.vim' Plugin 'vim-airline/vim-airline' Plugin 'preservim/nerdtree' Plugin 'preservim/tagbar' Plugin 'Donaldttt/fuzzyy' Plugin 'tpope/vim-fugitive' Plugin 'airblade/vim-gitgutter' Plugin 'neoclide/coc.nvim' Plugin 'rhysd/vim-clang-format' call vundle#end() \" Brief help \" :PluginList - lists configured plugins \" :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate \" :PluginSearch foo - searches for foo; append `!` to refresh local cache \" :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" shortcuts map <Space> <leader> nmap <leader>t :TagbarToggle<CR> nnoremap <leader>n :NERDTreeToggle<CR> nnoremap <silent> <leader>fc :FuzzyColors<CR> nnoremap <silent> <leader>ff :FuzzyFiles<CR> \" airline let g:airline#extensions#tabline#enabled = 1 \" GitGutter let g:gitgutter_enabled = 1 set updatetime=100 \" DoxygenToolkit let g:DoxygenToolkit_briefTag_pre=\"@brief \" let g:DoxygenToolkit_paramTag_pre=\"@param \" let g:DoxygenToolkit_returnTag=\"@returns \" let g:DoxygenToolkit_authorName=\"Minkeun Park\" \" cscope if filereadable(\"./cscope.out\") cs add cscope.out endif \" coc.nvim \" CocInstall coc-clangd \" Use tab for trigger completion with characters ahead and navigate \" NOTE: There's always complete item selected by default, you may want to enable \" no select by `\"suggest.noselect\": true` in your configuration file \" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by \" other plugin before putting this into your config inoremap <silent><expr> <TAB> \\ coc#pum#visible() ? coc#pum#next(1) : \\ CheckBackspace() ? \"\\<Tab>\" : \\ coc#refresh() inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : \"\\<C-h>\" set pumwidth=5 \" Make <CR> to accept selected completion item or notify coc.nvim to format \" <C-g>u breaks current undo, please make your own choice inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() \\: \"\\<C-g>u\\<CR>\\<c-r>=coc#on_enter()\\<CR>\" function! CheckBackspace() abort let col = col('.') - 1 return !col || getline('.')[col - 1] =~# '\\s' endfunction \" Use <c-space> to trigger completion if has('nvim') inoremap <silent><expr> <c-space> coc#refresh() else inoremap <silent><expr> <c-@> coc#refresh() endif \" Use `[g` and `]g` to navigate diagnostics \" Use `:CocDiagnostics` to get all diagnostics of current buffer in location list \" nmap <silent> [g <Plug>(coc-diagnostic-prev) \" nmap <silent> ]g <Plug>(coc-diagnostic-next) \" GoTo code navigation nmap <silent> gd <Plug>(coc-definition) nmap <silent> gy <Plug>(coc-type-definition) nmap <silent> gi <Plug>(coc-implementation) nmap <silent> gr <Plug>(coc-references) function! ShowDocumentation() if CocAction('hasProvider', 'hover') call CocActionAsync('doHover') else call feedkeys('K', 'in') endif endfunction \" Use K to show documentation in preview window nnoremap <silent>K :call ShowDocumentation()<CR> \" Highlight the symbol and its references when holding the cursor autocmd CursorHold * silent call CocActionAsync('highlight') \" Symbol renaming nmap <leader>rn <Plug>(coc-rename) \" Formatting selected code xmap <leader>f <Plug>(coc-format-selected) nmap <leader>f <Plug>(coc-format-selected) augroup mygroup autocmd! \" Setup formatexpr specified filetype(s) autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected') \" Update signature help on jump placeholder autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp') augroup end \" Applying code actions to the selected code block \" Example: `<leader>aap` for current paragraph xmap <leader>a <Plug>(coc-codeaction-selected) nmap <leader>a <Plug>(coc-codeaction-selected) \" Remap keys for applying code actions at the cursor position nmap <leader>ac <Plug>(coc-codeaction-cursor) \" Remap keys for apply code actions affect whole buffer nmap <leader>as <Plug>(coc-codeaction-source) \" Apply the most preferred quickfix action to fix diagnostic on the current line nmap <leader>qf <Plug>(coc-fix-current) \" Remap keys for applying refactor code actions nmap <silent> <leader>re <Plug>(coc-codeaction-refactor) xmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) nmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) \" Run the Code Lens action on the current line nmap <leader>cl <Plug>(coc-codelens-action) \" Map function and class text objects \" NOTE: Requires 'textDocument.documentSymbol' support from the language server xmap if <Plug>(coc-funcobj-i) omap if <Plug>(coc-funcobj-i) xmap af <Plug>(coc-funcobj-a) omap af <Plug>(coc-funcobj-a) xmap ic <Plug>(coc-classobj-i) omap ic <Plug>(coc-classobj-i) xmap ac <Plug>(coc-classobj-a) omap ac <Plug>(coc-classobj-a) \" Remap <C-f> and <C-b> to scroll float windows/popups if has('nvim-0.4.0') || has('patch-8.2.0750') nnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" nnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" inoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(1)\\<cr>\" : \"\\<Right>\" inoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(0)\\<cr>\" : \"\\<Left>\" vnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" vnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" endif \" Use CTRL-S for selections ranges \" Requires 'textDocument/selectionRange' support of language server nmap <silent> <C-s> <Plug>(coc-range-select) xmap <silent> <C-s> <Plug>(coc-range-select) \" Add `:Format` command to format current buffer command! -nargs=0 Format :call CocActionAsync('format') \" Add `:Fold` command to fold current buffer command! -nargs=? Fold :call CocAction('fold', <f-args>) \" Add `:OR` command for organize imports of the current buffer command! -nargs=0 OR :call CocActionAsync('runCommand', 'editor.action.organizeImport') \" Add (Neo)Vim's native statusline support \" NOTE: Please see `:h coc-status` for integrations with external plugins that \" provide custom statusline: lightline.vim, vim-airline \" set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')} \" Mappings for CoCList \" Show all diagnostics nnoremap <silent><nowait> <space>a :<C-u>CocList diagnostics<cr> \" Manage extensions nnoremap <silent><nowait> <space>e :<C-u>CocList extensions<cr> \" Show commands nnoremap <silent><nowait> <space>c :<C-u>CocList commands<cr> \" Find symbol of current document nnoremap <silent><nowait> <space>o :<C-u>CocList outline<cr> \" Search workspace symbols nnoremap <silent><nowait> <space>s :<C-u>CocList -I symbols<cr> \" Do default action for next item nnoremap <silent><nowait> <space>j :<C-u>CocNext<CR> \" Do default action for previous item nnoremap <silent><nowait> <space>k :<C-u>CocPrev<CR> \" Resume latest coc list nnoremap <silent><nowait> <space>p :<C-u>CocListResume<CR> \" vim-clang-format let g:clang_format#style_options = { \\ 'BasedOnStyle': 'Google', \\ 'IndentWidth': 2, \\ } colorscheme koehler hi ColorColumn guibg=#555555 set signcolumn=yes hi SignColumn guibg=#555555 references","title":"\uac1c\ubc1c\ud658\uacbd"},{"location":"cprogramming/devenv/#c","text":"Linux(Ubuntu) + vim + cscope + ctags","title":"C \uac1c\ubc1c\ud658\uacbd \uc124\uc815"},{"location":"cprogramming/devenv/#python3-clipboard-vim-91","text":"commit hash - 35699f17497dcdcfdd747fedaef28f208ac6eb5f branch - master Ubuntu 22.04 \uae30\uc900 python3-distutils python3 python3-dev libncurses-dev \ub4f1\uc758 dependency \uc124\uce58 clipboard, python3\uc744 \uc9c0\uc6d0\ud558\ub294 vim\uc744 \ube4c\ub4dc\ud558\uae30 \uc704\ud574 configure \ud30c\uc77c \uc2e4\ud589 sudo apt-get update sudo apt-get install -y python3-distutils python3-dev python3 \\ libx11-dev libxt-dev libgtk2.0-dev git clone --depth=1 https://github.com/vim/vim.git cd vim/src ./configure --with-features=huge \\ --enable-python3interp \\ --enable-gui=gtk2 \\ --enable-fail-if-missing \\ --with-python3-command=/usr/bin/python3 \\ --with-python3-config-dir=/usr/lib/python3.10/config-3.10-x86_64-linux-gnu make sudo make install","title":"python3, clipboard\ub97c \uc9c0\uc6d0\ud558\ub294 vim 9.1 \ube4c\ub4dc"},{"location":"cprogramming/devenv/#cscope-ctags-db","text":"#!/bin/bash rm -rf tags cscope.out find . \\( -name '*.c' -o -name '*.cpp' -o -name '*.cc' -o -name '*.h' -o -name '*.s' -o -name '*S' \\) -print > cscope.files ctags -R . cscope -i cscope.files rm cscope.files","title":"cscope, ctags DB \uc0dd\uc131 \uc2a4\ud06c\ub9bd\ud2b8"},{"location":"cprogramming/devenv/#vimrc","text":"set ruler syntax on filetype plugin indent on set nocompatible set cindent set termguicolors set ts=4 sw=4 set clipboard=unnamedplus set showmatch set incsearch set hlsearch set formatoptions=cro \" c: Auto-wrap comments, \" r: Auto insert the current comment leader after 'Enter' \" o: Auto insert the current comment leader after 'o' or 'O' set colorcolumn=80 \" coloring on the N'th column set cursorline set nowrap set foldmethod=manual set backspace=indent,eol,start \" Google style guide \" C++ \ud30c\uc77c\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc124\uc815 autocmd FileType cpp setlocal expandtab shiftwidth=2 softtabstop=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30, \uad04\ud638 \uc2a4\ud0c0\uc77c, \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 set tabstop=2 \" \ud0ed\uc744 \uc2a4\ud398\uc774\uc2a4 2\uac1c\ub85c \uc124\uc815 set shiftwidth=2 \" \uc790\ub3d9 \ub4e4\uc5ec\uc4f0\uae30 \uc2dc \uc2a4\ud398\uc774\uc2a4 2\uce78 \uc0ac\uc6a9 set expandtab \" \ud0ed \ub300\uc2e0 \uc2a4\ud398\uc774\uc2a4 \uc0ac\uc6a9 \" \uacf5\ubc31 \uc81c\uac70, \ud2b8\ub808\uc77c\ub9c1 \uacf5\ubc31 \uc790\ub3d9 \uc81c\uac70 autocmd BufWritePre *.cpp,*.h :%s/\\s\\+$//e \" \uad04\ud638 \uc790\ub3d9 \ub9de\ucd94\uae30 set smartindent set autoindent \" \uc790\ub3d9 \uc904\ubc14\uafc8 \" set textwidth=80 set colorcolumn=80 \" 80\ubc88\uc9f8 \uc5f4\uc5d0 \uceec\ub7fc \uac00\uc774\ub4dc \ud45c\uc2dc highlight ColorColumn ctermbg=lightgrey \" \uceec\ub7fc \uac00\uc774\ub4dc \uc0c9\uc0c1 \uc124\uc815 map <leader>1 :b!1<CR> map <leader>2 :b!2<CR> map <leader>3 :b!3<CR> map <leader>4 :b!4<CR> map <leader>5 :b!5<CR> map <leader>6 :b!6<CR> map <leader>7 :b!7<CR> map <leader>8 :b!8<CR> map <leader>9 :b!9<CR> map <leader>0 :b!0<CR> map <Tab>h :bp<CR> map <Tab>l :bn<CR> inoremap {<CR> {<CR>}<Esc>O inoremap { {}<left> inoremap {} {}<left> inoremap ( ()<left> inoremap () ()<left> inoremap [ []<left> inoremap [] []<left> inoremap \" \"\"<left> inoremap ' ''<left> inoremap ` ``<left> \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" plugins set rtp+=$HOME/.vim/bundle/Vundle.vim call vundle#begin() \" let Vundle manage Vundle, required Plugin 'VundleVim/Vundle.vim' Plugin 'vim-airline/vim-airline' Plugin 'preservim/nerdtree' Plugin 'preservim/tagbar' Plugin 'Donaldttt/fuzzyy' Plugin 'tpope/vim-fugitive' Plugin 'airblade/vim-gitgutter' Plugin 'neoclide/coc.nvim' Plugin 'rhysd/vim-clang-format' call vundle#end() \" Brief help \" :PluginList - lists configured plugins \" :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate \" :PluginSearch foo - searches for foo; append `!` to refresh local cache \" :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" shortcuts map <Space> <leader> nmap <leader>t :TagbarToggle<CR> nnoremap <leader>n :NERDTreeToggle<CR> nnoremap <silent> <leader>fc :FuzzyColors<CR> nnoremap <silent> <leader>ff :FuzzyFiles<CR> \" airline let g:airline#extensions#tabline#enabled = 1 \" GitGutter let g:gitgutter_enabled = 1 set updatetime=100 \" DoxygenToolkit let g:DoxygenToolkit_briefTag_pre=\"@brief \" let g:DoxygenToolkit_paramTag_pre=\"@param \" let g:DoxygenToolkit_returnTag=\"@returns \" let g:DoxygenToolkit_authorName=\"Minkeun Park\" \" cscope if filereadable(\"./cscope.out\") cs add cscope.out endif \" coc.nvim \" CocInstall coc-clangd \" Use tab for trigger completion with characters ahead and navigate \" NOTE: There's always complete item selected by default, you may want to enable \" no select by `\"suggest.noselect\": true` in your configuration file \" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by \" other plugin before putting this into your config inoremap <silent><expr> <TAB> \\ coc#pum#visible() ? coc#pum#next(1) : \\ CheckBackspace() ? \"\\<Tab>\" : \\ coc#refresh() inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : \"\\<C-h>\" set pumwidth=5 \" Make <CR> to accept selected completion item or notify coc.nvim to format \" <C-g>u breaks current undo, please make your own choice inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() \\: \"\\<C-g>u\\<CR>\\<c-r>=coc#on_enter()\\<CR>\" function! CheckBackspace() abort let col = col('.') - 1 return !col || getline('.')[col - 1] =~# '\\s' endfunction \" Use <c-space> to trigger completion if has('nvim') inoremap <silent><expr> <c-space> coc#refresh() else inoremap <silent><expr> <c-@> coc#refresh() endif \" Use `[g` and `]g` to navigate diagnostics \" Use `:CocDiagnostics` to get all diagnostics of current buffer in location list \" nmap <silent> [g <Plug>(coc-diagnostic-prev) \" nmap <silent> ]g <Plug>(coc-diagnostic-next) \" GoTo code navigation nmap <silent> gd <Plug>(coc-definition) nmap <silent> gy <Plug>(coc-type-definition) nmap <silent> gi <Plug>(coc-implementation) nmap <silent> gr <Plug>(coc-references) function! ShowDocumentation() if CocAction('hasProvider', 'hover') call CocActionAsync('doHover') else call feedkeys('K', 'in') endif endfunction \" Use K to show documentation in preview window nnoremap <silent>K :call ShowDocumentation()<CR> \" Highlight the symbol and its references when holding the cursor autocmd CursorHold * silent call CocActionAsync('highlight') \" Symbol renaming nmap <leader>rn <Plug>(coc-rename) \" Formatting selected code xmap <leader>f <Plug>(coc-format-selected) nmap <leader>f <Plug>(coc-format-selected) augroup mygroup autocmd! \" Setup formatexpr specified filetype(s) autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected') \" Update signature help on jump placeholder autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp') augroup end \" Applying code actions to the selected code block \" Example: `<leader>aap` for current paragraph xmap <leader>a <Plug>(coc-codeaction-selected) nmap <leader>a <Plug>(coc-codeaction-selected) \" Remap keys for applying code actions at the cursor position nmap <leader>ac <Plug>(coc-codeaction-cursor) \" Remap keys for apply code actions affect whole buffer nmap <leader>as <Plug>(coc-codeaction-source) \" Apply the most preferred quickfix action to fix diagnostic on the current line nmap <leader>qf <Plug>(coc-fix-current) \" Remap keys for applying refactor code actions nmap <silent> <leader>re <Plug>(coc-codeaction-refactor) xmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) nmap <silent> <leader>r <Plug>(coc-codeaction-refactor-selected) \" Run the Code Lens action on the current line nmap <leader>cl <Plug>(coc-codelens-action) \" Map function and class text objects \" NOTE: Requires 'textDocument.documentSymbol' support from the language server xmap if <Plug>(coc-funcobj-i) omap if <Plug>(coc-funcobj-i) xmap af <Plug>(coc-funcobj-a) omap af <Plug>(coc-funcobj-a) xmap ic <Plug>(coc-classobj-i) omap ic <Plug>(coc-classobj-i) xmap ac <Plug>(coc-classobj-a) omap ac <Plug>(coc-classobj-a) \" Remap <C-f> and <C-b> to scroll float windows/popups if has('nvim-0.4.0') || has('patch-8.2.0750') nnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" nnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" inoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(1)\\<cr>\" : \"\\<Right>\" inoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? \"\\<c-r>=coc#float#scroll(0)\\<cr>\" : \"\\<Left>\" vnoremap <silent><nowait><expr> <C-j> coc#float#has_scroll() ? coc#float#scroll(1) : \"\\<C-f>\" vnoremap <silent><nowait><expr> <C-k> coc#float#has_scroll() ? coc#float#scroll(0) : \"\\<C-b>\" endif \" Use CTRL-S for selections ranges \" Requires 'textDocument/selectionRange' support of language server nmap <silent> <C-s> <Plug>(coc-range-select) xmap <silent> <C-s> <Plug>(coc-range-select) \" Add `:Format` command to format current buffer command! -nargs=0 Format :call CocActionAsync('format') \" Add `:Fold` command to fold current buffer command! -nargs=? Fold :call CocAction('fold', <f-args>) \" Add `:OR` command for organize imports of the current buffer command! -nargs=0 OR :call CocActionAsync('runCommand', 'editor.action.organizeImport') \" Add (Neo)Vim's native statusline support \" NOTE: Please see `:h coc-status` for integrations with external plugins that \" provide custom statusline: lightline.vim, vim-airline \" set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')} \" Mappings for CoCList \" Show all diagnostics nnoremap <silent><nowait> <space>a :<C-u>CocList diagnostics<cr> \" Manage extensions nnoremap <silent><nowait> <space>e :<C-u>CocList extensions<cr> \" Show commands nnoremap <silent><nowait> <space>c :<C-u>CocList commands<cr> \" Find symbol of current document nnoremap <silent><nowait> <space>o :<C-u>CocList outline<cr> \" Search workspace symbols nnoremap <silent><nowait> <space>s :<C-u>CocList -I symbols<cr> \" Do default action for next item nnoremap <silent><nowait> <space>j :<C-u>CocNext<CR> \" Do default action for previous item nnoremap <silent><nowait> <space>k :<C-u>CocPrev<CR> \" Resume latest coc list nnoremap <silent><nowait> <space>p :<C-u>CocListResume<CR> \" vim-clang-format let g:clang_format#style_options = { \\ 'BasedOnStyle': 'Google', \\ 'IndentWidth': 2, \\ } colorscheme koehler hi ColorColumn guibg=#555555 set signcolumn=yes hi SignColumn guibg=#555555","title":"vimrc"},{"location":"cprogramming/devenv/#references","text":"","title":"references"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/","text":"OpenSSL PKC12S API OpenSSL\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc591\ud55c \uc778\uc99d\uc11c\ub97c \uc548\uc804\ud558\uac8c \ud558\ub098\uc758 \ud30c\uc77c\ub85c \ubcf4\uad00\ud560 \uc218 \uc788\ub2e4 PKCS#12 Public Key Cryptography Standards RSA Security\uc5d0\uc11c \uc81c\uc815\ud55c public-key cryptography \ud45c\uc900\ub4e4\uc758 \ubb36\uc74c\uc744 PKCS\ub77c\uace0 \ud55c\ub2e4 \uadf8 \uc911\uc5d0\uc11c\ub3c4 PKCS#12\ub294 \uc5ec\ub7ec \uac1c\uc758 cryptography object\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud558\ub294 \ud30c\uc77c\uc758 \ud3ec\ub9f7\uc744 \uc815\uc758\ud55c\ub2e4 \ubcf4\ud1b5 private key\uc640 X.509 certificate \ub97c \ubb36\uac70\ub098(bundle) \ubaa8\ub4e0 chain of trust(\uc77c\ub828\uc758 \uc778\uc99d\uc11c\ub4e4)\ub97c \ubb36\ub294\ub370 \uc0ac\uc6a9\ud55c\ub2e4 X.509 - public key certificate(\uc778\uc99d\uc11c) \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 chain of trust - root certificate(CA\uc5d0\uc11c \ubc1c\uae09\ud55c \uc778\uc99d\uc11c)\uc5d0\uc11c\ubd80\ud130 end entity(\uc560\ud50c\ub9ac\ucf00\uc774\uc158, \uc0ac\uc6a9\uc790, \uc7a5\uce58 \ub4f1)\uae4c\uc9c0 \uc774\uc5b4\uc9c0\ub294 \uac80\uc99d CA(Certificate Authority) - \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc778\uc99d\uae30\uad00. \ub514\uc9c0\ud138 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud558\uace0 \uad00\ub9ac\ud55c\ub2e4 OpenSSL\uc758 pkcs12 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77d\uc744 \uc218 \uc788\ub2e4 \uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c(Public Key Certificate) \uacf5\uac1c\ud0a4\uc758 \uc9c4\uc704 \uc5ec\ubd80 \ub97c \ubcf4\uc99d\ud558\uae30 \uc704\ud55c \ubb38\uc11c\ub85c \uacf5\uac1c\ud0a4 \uc790\uccb4\uc640 \uadf8\uc640 \uad00\ub828\ub41c \uc815\ubcf4\ub97c \ud3ec\ud568\ud55c\ub2e4 public key \uacf5\uac1c\ud0a4\ub97c \uc18c\uc720\ud55c subject\uc758 \uc2e0\uc6d0\uc5d0 \uad00\ud55c \uc815\ubcf4 \uc774 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud55c CA\uc758 \uc804\uc790\uc11c\uba85 \ub2e8\ub9d0 A\uc640 \uc11c\ubc84 B\uac00 \ud1b5\uc2e0\ud560\ub54c \uc11c\ubc84 B\ub294 \uc790\uc2e0\uc758 \uc778\uc99d\uc11c\ub97c A\uc5d0\uac8c \ubcf4\ub0b8\ub2e4. A\ub294 \uc774 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uc5ec B\uac00 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 entity\uc784\uc744 \ud655\uc2e0\ud55c\ub2e4 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 CA\uc758 \uc804\uc790\uc11c\uba85\uc774 \uc720\ud6a8\ud55c\uc9c0\ub97c \uac80\uc0ac\ud574\uc57c \ud558\ub294\ub370 \uadf8\ub7ec\ub824\uba74 CA\uc758 \uacf5\uac1c\ud0a4\ub97c \uc54c\uc544\uc57c\ud55c\ub2e4. CA\uc758 \uacf5\uac1c\ud0a4\ub294 \ub2e8\ub9d0A(e.g. web browser)\uc758 root certificate\uc5d0 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4 E1\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc0c1\uc704 \uc8fc\uccb4\uc778 E2\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 E2\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\ub824\uba74 \uc0c1\uc704 \uc8fc\uccb4\uc778 E3\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 ... \uc774\ub7f0 \uccb4\uc778\uc758 \uac00\uc7a5 \uc704\uc5d0 \uc788\ub294 \uc778\uc99d\uc11c\uac00 root certificate\uc774\ub2e4 \uc774\ub7f0 \ub8e8\ud2b8 \uc778\uc99d\uc11c\ub294 \ud558\ub4dc\uc6e8\uc5b4 \uc81c\uc870\uc0ac\uc5d0\uc11c \ubc30\ud3ec\ud55c\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85(Digital Signature) electronic signature(\uc804\uc790 \uc11c\uba85)\uc774\ub77c\uace0\ub3c4 \ud55c\ub2e4 \ub514\uc9c0\ud138 \uc815\ubcf4\uac00 \uc9c4\ubcf8\uc784\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc218\ud559\uc801 \ubc29\ubc95(scheme)\uc774\ub2e4 A\uac00 B\uc5d0\uac8c \uba54\uc138\uc9c0\uc640 \uc790\uc2e0\uc758 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac19\uc774 \ubcf4\ub0b8\ub2e4 --> B\ub294 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac80\uc99d \ud558\uc5ec \uba54\uc138\uc9c0\uac00 A\ub85c\ubd80\ud130 \uc628\uac83\uc784\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 A\ub294 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\uac00 \ud3ec\ud568\ub41c \uc778\uc99d\uc11c\ub97c B\uc5d0\uac8c \uc81c\uacf5\ud55c\ub2e4 A\uc758 \uacf5\uac1c\ud0a4\ub85c \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ubcf5\ud638\ud654\ud558\uba74 \uba54\uc138\uc9c0\uc758 \ud574\uc2dc\uac12\uc774 \ub098\uc628\ub2e4. \ub9e4\uc138\uc9c0\ub97c \ud574\uc2f1\ud55c \uac12\uacfc \uc774 \uac12\uc744 \ube44\uad50\ud574\uc11c \uba54\uc138\uc9c0\uac00 \ubcc0\uc870\ub418\uc9c0 \uc54a\uc558\uc74c\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc740 \ub300\ubd80\ubd84\uc758 \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c\uc5d0 \ud3ec\ud568\ub418\ub294 \uc694\uc18c\uc774\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ud1b5\ud574 \ub370\uc774\ud130\uac00 \uc704\uc870\ub418\uc5c8\uac70\ub098 \ubd80 \ubcc0\uacbd(tampering)\ub418\uc5c8\uc74c\uc744 \ud0d0\uc9c0\ud560 \uc218 \uc788\ub2e4 By FlippyFlink - Combined changed the image https://en.wikipedia.org/wiki/File:Public_key_encryption.svg from encryption to signing., CC BY-SA 4.0 , Link Alice\uc758 \uacf5\uac1c\ud0a4\uac00 \uc9c4\uc9dc\uc784\uc744 \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 Alice\uac00 CA\ub85c\ubd80\ud130 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\ub97c \ud3ec\ud568\ud558\ub294 CA\ub97c \ubc1c\uae09\ubc1b\uc544\uc11c Bob\uc5d0\uac8c \uc804\ub2ec\ud558\ub294 \uac83\uc774\ub2e4 \ub2e8, B\uc758 \ub8e8\ud2b8 \uc778\uc99d\uc11c\uc5d0 CA\uc758 \uacf5\uac1c\ud0a4\uac00 \uc800\uc7a5\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4 ASN1(Abstract Syntax Notation 1) \ub370\uc774\ud130\uc758 \uad6c\uc870(\ud30c\uc77c\uc758 \ud3ec\ub9f7\uacfc \ub3d9\uce58)\ub97c \uc815\uc758\ud558\ub294 \ud45c\uc900 \uc5b8\uc5b4 \uc8fc\ub85c \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0, \uc778\uc99d\uc11c, \ubcf4\uc548 \ud504\ub85c\ud1a0\ucf5c \ub4f1\uc5d0\uc11c \ub370\uc774\ud130\uc758 \ud45c\ud604 \ubc29\uc2dd\uacfc \uc778\ucf54\ub529\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9 ASN.1\uc740 \ud2b9\ud788 \ubcf4\uc548 \uad00\ub828 \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \ub110\ub9ac \uc0ac\uc6a9\ub428 ASN.1\uc758 \uc8fc\uc694 \uc9c1\ub82c\ud654 \ud3ec\ub9f7\uc740 DER(Distinguished Encoding Rules) \uc774\ub2e4 struct point { int x, y; char label[10]; }; Point ::= SEQUENCE { x INTEGER, y INTEGER, label UTF8String } OpenSSL API EVP_PKEY - \uacf5\uac1c\ud0a4\uc640 \ube44\ubc00\ud0a4\ub97c \uc800\uc7a5\ud558\ub294 \uad6c\uc870\uccb4 X509 - X.509\uc778\uc99d\uc11c\ub97c \ud45c\ud604\ud558\ub294 \uad6c\uc870\uccb4 X.509\ub294 \uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 PKCS12 *PKCS12_create(const char *pass, const char *name, EVP_PKEY *pkey, X509 *cert, STACK_OF(X509) *ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype); pass - \uc778\uc99d\uc11c\ub97c \ubcf4\ud638\ud560 \ube44\ubc00\ubc88\ud638 name - \uc778\uc99d\uc11c\ub97c \uac00\ub9ac\ud0a4\ub294 \uc774\ub984\uc744 \uc9c0\uc815 pkey - \uac1c\uc778 \ud0a4\uac00 \uc800\uc7a5\ub41c \uacf5\uac04 cert - pkey\ub97c \ubcf4\uc99d\ud558\ub294 \uc778\uc99d\uc11c ca - NULL \uc804\ub2ec \uac00\ub2a5. CA\uac00 \ubc1c\uae09\ud55c \uc778\uc99d\uc11c. cert\ub97c \uac80\uc99d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4 int i2d_TYPE_fp(FILE *fp, TYPE *a); TYPE \uc778\uc2a4\ud134\uc2a4\ub97c DER \ud3ec\ub9f7\uc73c\ub85c \uc778\ucf54\ub529 \ud558\uc5ec fp\uc5d0 \uc4f4\ub2e4 PKCS#12 \uc0dd\uc131 \ud504\ub85c\uadf8\ub7a8 usage: ./pkwrite <X.509\ud30c\uc77c> <\ube44\ubc00\ubc88\ud638> <name> <p12file> \uc778\uc99d\uc11c(X.509\ud30c\uc77c)\ub97c \uc800\uc7a5\ud558\ub294 p12\ud30c\uc77c\uc744 \uc0c8\ub85c \uc0dd\uc131\ud55c\ub2e4 p12file \ub0b4\ubd80\uc5d0\uc11c \uc774 \uc778\uc99d\uc11c\uc758 \uc774\ub984\uc740 name\uc73c\ub85c \uc124\uc815\ud558\uace0 \ube44\ubc00\ubc88\ud638\ub85c \ubcf4\ud638\ud55c\ub2e4 /* * Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file creator */ int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey; X509 *cert; PKCS12 *p12; if (argc != 5) { fprintf(stderr, \"Usage: pkwrite infile password name p12file\\n\"); exit(1); } OpenSSL_add_all_algorithms(); ERR_load_crypto_strings(); if ((fp = fopen(argv[1], \"r\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(1); } cert = PEM_read_X509(fp, NULL, NULL, NULL); rewind(fp); pkey = PEM_read_PrivateKey(fp, NULL, NULL, NULL); fclose(fp); p12 = PKCS12_create(argv[2], argv[3], pkey, cert, NULL, 0, 0, 0, 0, 0); if (!p12) { fprintf(stderr, \"Error creating PKCS#12 structure\\n\"); ERR_print_errors_fp(stderr); exit(1); } if ((fp = fopen(argv[4], \"wb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); ERR_print_errors_fp(stderr); exit(1); } i2d_PKCS12_fp(fp, p12); PKCS12_free(p12); fclose(fp); return 0; } PKCS#12 \uc77d\uae30 \ud504\ub85c\uadf8\ub7a8 /* * Copyright 2000-2019 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file reader */ static char *find_friendly_name(PKCS12 *p12) { STACK_OF(PKCS7) *safes; int n, m; char *name = NULL; PKCS7 *safe; STACK_OF(PKCS12_SAFEBAG) *bags; PKCS12_SAFEBAG *bag; if ((safes = PKCS12_unpack_authsafes(p12)) == NULL) return NULL; for (n = 0; n < sk_PKCS7_num(safes) && name == NULL; n++) { safe = sk_PKCS7_value(safes, n); if (OBJ_obj2nid(safe->type) != NID_pkcs7_data || (bags = PKCS12_unpack_p7data(safe)) == NULL) continue; for (m = 0; m < sk_PKCS12_SAFEBAG_num(bags) && name == NULL; m++) { bag = sk_PKCS12_SAFEBAG_value(bags, m); name = PKCS12_get_friendlyname(bag); } sk_PKCS12_SAFEBAG_pop_free(bags, PKCS12_SAFEBAG_free); } sk_PKCS7_pop_free(safes, PKCS7_free); return name; } int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey = NULL; X509 *cert = NULL; STACK_OF(X509) *ca = NULL; PKCS12 *p12 = NULL; char *name = NULL; int i, ret = EXIT_FAILURE; if (argc != 4) { fprintf(stderr, \"Usage: pkread p12file password opfile\\n\"); exit(EXIT_FAILURE); } if ((fp = fopen(argv[1], \"rb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(EXIT_FAILURE); } p12 = d2i_PKCS12_fp(fp, NULL); fclose(fp); if (p12 == NULL) { fprintf(stderr, \"Error reading PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } if (!PKCS12_parse(p12, argv[2], &pkey, &cert, &ca)) { fprintf(stderr, \"Error parsing PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } name = find_friendly_name(p12); PKCS12_free(p12); if ((fp = fopen(argv[3], \"w\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); goto err; } if (name != NULL) fprintf(fp, \"***Friendly Name***\\n%s\\n\", name); if (pkey != NULL) { fprintf(fp, \"***Private Key***\\n\"); PEM_write_PrivateKey(fp, pkey, NULL, NULL, 0, NULL, NULL); } if (cert != NULL) { fprintf(fp, \"***User Certificate***\\n\"); PEM_write_X509_AUX(fp, cert); } if (ca != NULL && sk_X509_num(ca) > 0) { fprintf(fp, \"***Other Certificates***\\n\"); for (i = 0; i < sk_X509_num(ca); i++) PEM_write_X509_AUX(fp, sk_X509_value(ca, i)); } fclose(fp); ret = EXIT_SUCCESS; err: OPENSSL_free(name); X509_free(cert); EVP_PKEY_free(pkey); sk_X509_pop_free(ca, X509_free); return ret; } references [WIKIPEDIA]PCKS [University of Toronto] OpenSSL Tutorial [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkread.c [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkwrite.c [OpenSSL Documentation 1.1.1] [OpenSSL Documentation 3.0] migration_guide [WIKIPEDIA] ASN1 A Warm Welcome to ASN.1 and DER","title":"OpenSSL PKCS API"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#openssl-pkc12s-api","text":"OpenSSL\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc591\ud55c \uc778\uc99d\uc11c\ub97c \uc548\uc804\ud558\uac8c \ud558\ub098\uc758 \ud30c\uc77c\ub85c \ubcf4\uad00\ud560 \uc218 \uc788\ub2e4","title":"OpenSSL PKC12S API"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#pkcs12","text":"Public Key Cryptography Standards RSA Security\uc5d0\uc11c \uc81c\uc815\ud55c public-key cryptography \ud45c\uc900\ub4e4\uc758 \ubb36\uc74c\uc744 PKCS\ub77c\uace0 \ud55c\ub2e4 \uadf8 \uc911\uc5d0\uc11c\ub3c4 PKCS#12\ub294 \uc5ec\ub7ec \uac1c\uc758 cryptography object\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud558\ub294 \ud30c\uc77c\uc758 \ud3ec\ub9f7\uc744 \uc815\uc758\ud55c\ub2e4 \ubcf4\ud1b5 private key\uc640 X.509 certificate \ub97c \ubb36\uac70\ub098(bundle) \ubaa8\ub4e0 chain of trust(\uc77c\ub828\uc758 \uc778\uc99d\uc11c\ub4e4)\ub97c \ubb36\ub294\ub370 \uc0ac\uc6a9\ud55c\ub2e4 X.509 - public key certificate(\uc778\uc99d\uc11c) \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 chain of trust - root certificate(CA\uc5d0\uc11c \ubc1c\uae09\ud55c \uc778\uc99d\uc11c)\uc5d0\uc11c\ubd80\ud130 end entity(\uc560\ud50c\ub9ac\ucf00\uc774\uc158, \uc0ac\uc6a9\uc790, \uc7a5\uce58 \ub4f1)\uae4c\uc9c0 \uc774\uc5b4\uc9c0\ub294 \uac80\uc99d CA(Certificate Authority) - \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc778\uc99d\uae30\uad00. \ub514\uc9c0\ud138 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud558\uace0 \uad00\ub9ac\ud55c\ub2e4 OpenSSL\uc758 pkcs12 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc77d\uc744 \uc218 \uc788\ub2e4","title":"PKCS#12"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#public-key-certificate","text":"\uacf5\uac1c\ud0a4\uc758 \uc9c4\uc704 \uc5ec\ubd80 \ub97c \ubcf4\uc99d\ud558\uae30 \uc704\ud55c \ubb38\uc11c\ub85c \uacf5\uac1c\ud0a4 \uc790\uccb4\uc640 \uadf8\uc640 \uad00\ub828\ub41c \uc815\ubcf4\ub97c \ud3ec\ud568\ud55c\ub2e4 public key \uacf5\uac1c\ud0a4\ub97c \uc18c\uc720\ud55c subject\uc758 \uc2e0\uc6d0\uc5d0 \uad00\ud55c \uc815\ubcf4 \uc774 \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud55c CA\uc758 \uc804\uc790\uc11c\uba85 \ub2e8\ub9d0 A\uc640 \uc11c\ubc84 B\uac00 \ud1b5\uc2e0\ud560\ub54c \uc11c\ubc84 B\ub294 \uc790\uc2e0\uc758 \uc778\uc99d\uc11c\ub97c A\uc5d0\uac8c \ubcf4\ub0b8\ub2e4. A\ub294 \uc774 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uc5ec B\uac00 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 entity\uc784\uc744 \ud655\uc2e0\ud55c\ub2e4 \uc778\uc99d\uc11c\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 CA\uc758 \uc804\uc790\uc11c\uba85\uc774 \uc720\ud6a8\ud55c\uc9c0\ub97c \uac80\uc0ac\ud574\uc57c \ud558\ub294\ub370 \uadf8\ub7ec\ub824\uba74 CA\uc758 \uacf5\uac1c\ud0a4\ub97c \uc54c\uc544\uc57c\ud55c\ub2e4. CA\uc758 \uacf5\uac1c\ud0a4\ub294 \ub2e8\ub9d0A(e.g. web browser)\uc758 root certificate\uc5d0 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4 E1\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc0c1\uc704 \uc8fc\uccb4\uc778 E2\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 E2\uc758 \uacf5\uac1c\ud0a4\ub97c \uac80\uc99d\ud558\ub824\uba74 \uc0c1\uc704 \uc8fc\uccb4\uc778 E3\uc758 \uacf5\uac1c\ud0a4\uac00 \ud544\uc694\ud558\uace0 ... \uc774\ub7f0 \uccb4\uc778\uc758 \uac00\uc7a5 \uc704\uc5d0 \uc788\ub294 \uc778\uc99d\uc11c\uac00 root certificate\uc774\ub2e4 \uc774\ub7f0 \ub8e8\ud2b8 \uc778\uc99d\uc11c\ub294 \ud558\ub4dc\uc6e8\uc5b4 \uc81c\uc870\uc0ac\uc5d0\uc11c \ubc30\ud3ec\ud55c\ub2e4","title":"\uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c(Public Key Certificate)"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#digital-signature","text":"electronic signature(\uc804\uc790 \uc11c\uba85)\uc774\ub77c\uace0\ub3c4 \ud55c\ub2e4 \ub514\uc9c0\ud138 \uc815\ubcf4\uac00 \uc9c4\ubcf8\uc784\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc218\ud559\uc801 \ubc29\ubc95(scheme)\uc774\ub2e4 A\uac00 B\uc5d0\uac8c \uba54\uc138\uc9c0\uc640 \uc790\uc2e0\uc758 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac19\uc774 \ubcf4\ub0b8\ub2e4 --> B\ub294 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \uac80\uc99d \ud558\uc5ec \uba54\uc138\uc9c0\uac00 A\ub85c\ubd80\ud130 \uc628\uac83\uc784\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 A\ub294 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\uac00 \ud3ec\ud568\ub41c \uc778\uc99d\uc11c\ub97c B\uc5d0\uac8c \uc81c\uacf5\ud55c\ub2e4 A\uc758 \uacf5\uac1c\ud0a4\ub85c \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ubcf5\ud638\ud654\ud558\uba74 \uba54\uc138\uc9c0\uc758 \ud574\uc2dc\uac12\uc774 \ub098\uc628\ub2e4. \ub9e4\uc138\uc9c0\ub97c \ud574\uc2f1\ud55c \uac12\uacfc \uc774 \uac12\uc744 \ube44\uad50\ud574\uc11c \uba54\uc138\uc9c0\uac00 \ubcc0\uc870\ub418\uc9c0 \uc54a\uc558\uc74c\uc744 \ud655\uc2e0\ud560 \uc218 \uc788\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc740 \ub300\ubd80\ubd84\uc758 \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c\uc5d0 \ud3ec\ud568\ub418\ub294 \uc694\uc18c\uc774\ub2e4 \ub514\uc9c0\ud138 \uc11c\uba85\uc744 \ud1b5\ud574 \ub370\uc774\ud130\uac00 \uc704\uc870\ub418\uc5c8\uac70\ub098 \ubd80 \ubcc0\uacbd(tampering)\ub418\uc5c8\uc74c\uc744 \ud0d0\uc9c0\ud560 \uc218 \uc788\ub2e4 By FlippyFlink - Combined changed the image https://en.wikipedia.org/wiki/File:Public_key_encryption.svg from encryption to signing., CC BY-SA 4.0 , Link Alice\uc758 \uacf5\uac1c\ud0a4\uac00 \uc9c4\uc9dc\uc784\uc744 \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc740 Alice\uac00 CA\ub85c\ubd80\ud130 \uc790\uc2e0\uc758 \uacf5\uac1c\ud0a4\ub97c \ud3ec\ud568\ud558\ub294 CA\ub97c \ubc1c\uae09\ubc1b\uc544\uc11c Bob\uc5d0\uac8c \uc804\ub2ec\ud558\ub294 \uac83\uc774\ub2e4 \ub2e8, B\uc758 \ub8e8\ud2b8 \uc778\uc99d\uc11c\uc5d0 CA\uc758 \uacf5\uac1c\ud0a4\uac00 \uc800\uc7a5\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4","title":"\ub514\uc9c0\ud138 \uc11c\uba85(Digital Signature)"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#asn1abstract-syntax-notation-1","text":"\ub370\uc774\ud130\uc758 \uad6c\uc870(\ud30c\uc77c\uc758 \ud3ec\ub9f7\uacfc \ub3d9\uce58)\ub97c \uc815\uc758\ud558\ub294 \ud45c\uc900 \uc5b8\uc5b4 \uc8fc\ub85c \ub124\ud2b8\uc6cc\ud06c \ud1b5\uc2e0, \uc778\uc99d\uc11c, \ubcf4\uc548 \ud504\ub85c\ud1a0\ucf5c \ub4f1\uc5d0\uc11c \ub370\uc774\ud130\uc758 \ud45c\ud604 \ubc29\uc2dd\uacfc \uc778\ucf54\ub529\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9 ASN.1\uc740 \ud2b9\ud788 \ubcf4\uc548 \uad00\ub828 \ud504\ub85c\ud1a0\ucf5c\uc5d0\uc11c \ub110\ub9ac \uc0ac\uc6a9\ub428 ASN.1\uc758 \uc8fc\uc694 \uc9c1\ub82c\ud654 \ud3ec\ub9f7\uc740 DER(Distinguished Encoding Rules) \uc774\ub2e4 struct point { int x, y; char label[10]; }; Point ::= SEQUENCE { x INTEGER, y INTEGER, label UTF8String }","title":"ASN1(Abstract Syntax Notation 1)"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#openssl-api","text":"EVP_PKEY - \uacf5\uac1c\ud0a4\uc640 \ube44\ubc00\ud0a4\ub97c \uc800\uc7a5\ud558\ub294 \uad6c\uc870\uccb4 X509 - X.509\uc778\uc99d\uc11c\ub97c \ud45c\ud604\ud558\ub294 \uad6c\uc870\uccb4 X.509\ub294 \uacf5\uac1c\ud0a4 \uc778\uc99d\uc11c \ud3ec\ub9f7\uc5d0 \ub300\ud55c \uad6d\uc81c \ud45c\uc900 PKCS12 *PKCS12_create(const char *pass, const char *name, EVP_PKEY *pkey, X509 *cert, STACK_OF(X509) *ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype); pass - \uc778\uc99d\uc11c\ub97c \ubcf4\ud638\ud560 \ube44\ubc00\ubc88\ud638 name - \uc778\uc99d\uc11c\ub97c \uac00\ub9ac\ud0a4\ub294 \uc774\ub984\uc744 \uc9c0\uc815 pkey - \uac1c\uc778 \ud0a4\uac00 \uc800\uc7a5\ub41c \uacf5\uac04 cert - pkey\ub97c \ubcf4\uc99d\ud558\ub294 \uc778\uc99d\uc11c ca - NULL \uc804\ub2ec \uac00\ub2a5. CA\uac00 \ubc1c\uae09\ud55c \uc778\uc99d\uc11c. cert\ub97c \uac80\uc99d\ud558\ub294\ub370 \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4 int i2d_TYPE_fp(FILE *fp, TYPE *a); TYPE \uc778\uc2a4\ud134\uc2a4\ub97c DER \ud3ec\ub9f7\uc73c\ub85c \uc778\ucf54\ub529 \ud558\uc5ec fp\uc5d0 \uc4f4\ub2e4","title":"OpenSSL API"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#pkcs12_1","text":"usage: ./pkwrite <X.509\ud30c\uc77c> <\ube44\ubc00\ubc88\ud638> <name> <p12file> \uc778\uc99d\uc11c(X.509\ud30c\uc77c)\ub97c \uc800\uc7a5\ud558\ub294 p12\ud30c\uc77c\uc744 \uc0c8\ub85c \uc0dd\uc131\ud55c\ub2e4 p12file \ub0b4\ubd80\uc5d0\uc11c \uc774 \uc778\uc99d\uc11c\uc758 \uc774\ub984\uc740 name\uc73c\ub85c \uc124\uc815\ud558\uace0 \ube44\ubc00\ubc88\ud638\ub85c \ubcf4\ud638\ud55c\ub2e4 /* * Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file creator */ int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey; X509 *cert; PKCS12 *p12; if (argc != 5) { fprintf(stderr, \"Usage: pkwrite infile password name p12file\\n\"); exit(1); } OpenSSL_add_all_algorithms(); ERR_load_crypto_strings(); if ((fp = fopen(argv[1], \"r\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(1); } cert = PEM_read_X509(fp, NULL, NULL, NULL); rewind(fp); pkey = PEM_read_PrivateKey(fp, NULL, NULL, NULL); fclose(fp); p12 = PKCS12_create(argv[2], argv[3], pkey, cert, NULL, 0, 0, 0, 0, 0); if (!p12) { fprintf(stderr, \"Error creating PKCS#12 structure\\n\"); ERR_print_errors_fp(stderr); exit(1); } if ((fp = fopen(argv[4], \"wb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); ERR_print_errors_fp(stderr); exit(1); } i2d_PKCS12_fp(fp, p12); PKCS12_free(p12); fclose(fp); return 0; }","title":"PKCS#12 \uc0dd\uc131 \ud504\ub85c\uadf8\ub7a8"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#pkcs12_2","text":"/* * Copyright 2000-2019 The OpenSSL Project Authors. All Rights Reserved. * * Licensed under the OpenSSL license (the \"License\"). You may not use * this file except in compliance with the License. You can obtain a copy * in the file LICENSE in the source distribution or at * https://www.openssl.org/source/license.html */ #include <stdio.h> #include <stdlib.h> #include <openssl/pem.h> #include <openssl/err.h> #include <openssl/pkcs12.h> /* Simple PKCS#12 file reader */ static char *find_friendly_name(PKCS12 *p12) { STACK_OF(PKCS7) *safes; int n, m; char *name = NULL; PKCS7 *safe; STACK_OF(PKCS12_SAFEBAG) *bags; PKCS12_SAFEBAG *bag; if ((safes = PKCS12_unpack_authsafes(p12)) == NULL) return NULL; for (n = 0; n < sk_PKCS7_num(safes) && name == NULL; n++) { safe = sk_PKCS7_value(safes, n); if (OBJ_obj2nid(safe->type) != NID_pkcs7_data || (bags = PKCS12_unpack_p7data(safe)) == NULL) continue; for (m = 0; m < sk_PKCS12_SAFEBAG_num(bags) && name == NULL; m++) { bag = sk_PKCS12_SAFEBAG_value(bags, m); name = PKCS12_get_friendlyname(bag); } sk_PKCS12_SAFEBAG_pop_free(bags, PKCS12_SAFEBAG_free); } sk_PKCS7_pop_free(safes, PKCS7_free); return name; } int main(int argc, char **argv) { FILE *fp; EVP_PKEY *pkey = NULL; X509 *cert = NULL; STACK_OF(X509) *ca = NULL; PKCS12 *p12 = NULL; char *name = NULL; int i, ret = EXIT_FAILURE; if (argc != 4) { fprintf(stderr, \"Usage: pkread p12file password opfile\\n\"); exit(EXIT_FAILURE); } if ((fp = fopen(argv[1], \"rb\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); exit(EXIT_FAILURE); } p12 = d2i_PKCS12_fp(fp, NULL); fclose(fp); if (p12 == NULL) { fprintf(stderr, \"Error reading PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } if (!PKCS12_parse(p12, argv[2], &pkey, &cert, &ca)) { fprintf(stderr, \"Error parsing PKCS#12 file\\n\"); ERR_print_errors_fp(stderr); goto err; } name = find_friendly_name(p12); PKCS12_free(p12); if ((fp = fopen(argv[3], \"w\")) == NULL) { fprintf(stderr, \"Error opening file %s\\n\", argv[1]); goto err; } if (name != NULL) fprintf(fp, \"***Friendly Name***\\n%s\\n\", name); if (pkey != NULL) { fprintf(fp, \"***Private Key***\\n\"); PEM_write_PrivateKey(fp, pkey, NULL, NULL, 0, NULL, NULL); } if (cert != NULL) { fprintf(fp, \"***User Certificate***\\n\"); PEM_write_X509_AUX(fp, cert); } if (ca != NULL && sk_X509_num(ca) > 0) { fprintf(fp, \"***Other Certificates***\\n\"); for (i = 0; i < sk_X509_num(ca); i++) PEM_write_X509_AUX(fp, sk_X509_value(ca, i)); } fclose(fp); ret = EXIT_SUCCESS; err: OPENSSL_free(name); X509_free(cert); EVP_PKEY_free(pkey); sk_X509_pop_free(ca, X509_free); return ret; }","title":"PKCS#12 \uc77d\uae30 \ud504\ub85c\uadf8\ub7a8"},{"location":"cprogramming/how-to-use-openssl-pkcs-api/#references","text":"[WIKIPEDIA]PCKS [University of Toronto] OpenSSL Tutorial [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkread.c [OpenSSL_1_1_1-stable] openssl/demos/pkcs12/pkwrite.c [OpenSSL Documentation 1.1.1] [OpenSSL Documentation 3.0] migration_guide [WIKIPEDIA] ASN1 A Warm Welcome to ASN.1 and DER","title":"references"},{"location":"cprogramming/memory-layout/","text":"C program memory layout C \ud504\ub85c\uadf8\ub7a8\uc774 \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ub418\ub294 \ud615\ud0dc logical diagram c \uc2e4\ud589\ud30c\uc77c\uc774 \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ub418\ub294 \ud615\ud0dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4 \uc2a4\ud0dd \ud504\ub808\uc784 \uc5ec\ub7ec \uac1c\ub97c \ubb36\uc5b4\uc11c \uc2a4\ud0dd\uc774\ub77c\uace0 \ud55c\ub2e4 \ud568\uc218\uac00 \ud638\ucd9c\ub420\ub54c\ub9c8\ub2e4 \uc2a4\ud0dd \ud504\ub808\uc784 \ud55c \uac1c\uac00 \uc0dd\uc131\ub41c\ub2e4. \uc2a4\ud0dd \ud504\ub808\uc784\uc740 \ud568\uc218\uc758 \uc2e4\ud589 \ud658\uacbd\uc744 \uc81c\uacf5\ud55c\ub2e4 registers rbp(base pointer) : \ud604\uc7ac \uc2a4\ud0dd \ud504\ub808\uc784\uc758 \uac00\uc7a5 \ub0ae\uc740 \uc8fc\uc18c example1 \uc544\ub798\uc758 \uba85\ub839\uc5b4\ub85c c code\ub97c assembly code\ub85c \ucef4\ud30c\uc77c (x86_64 cpu) gcc -S scratch.c -o scratch.o \ubcc0\uc218\uc758 \uc120\uc5b8\ub9cc \ud55c \uacbd\uc6b0 \uc2a4\ud0dd\uc744 \ud560\ub2f9\ud558\uc9c0\ub9cc \ucd08\uae30\ud654\uae4c\uc9c0 \ud558\ub294 \uacbd\uc6b0 immediate value\ub97c \ub808\uc9c0\uc2a4\ud130\uc5d0 \uc800\uc7a5\ud558\ub294 instruction\uc774 \ucd94\uac00\ub41c\ub2e4 x86 instructions & registers $0 , $1 - immediate value(\uc8fc\uc18c\uac12\uc774 \uc544\ub2cc \ub9ac\ud130\ub7f4) mov - memory\uc640 processor register \uc0ac\uc774\uc758 \uac12 \uc774\ub3d9(\ubcf5\uc0ac). \ubc18\ub4dc\uc2dc operand \ud558\ub098\ub294 register\uc774\ub2e4. \ub098\uba38\uc9c0 \ud558\ub098\ub294 immediate value\uc77c \uc218\ub3c4 \uc788\uace0 \uba54\ubaa8\ub9ac \uc8fc\uc18c\uc77c \uc218\ub3c4 \uc788\ub2e4. movq - 64\ube44\ud2b8 \uac12 \uc774\ub3d9 (\uc8fc\ub85c \uba54\ubaa8\ub9ac \uc8fc\uc18c\uac12) movl - 32\ube44\ud2b8 \uac12 \uc774\ub3d9 lea - load effective address \uc8fc\uc18c\uac12\uc744 \uacc4\uc0b0\ud574\uc11c dst\uc5d0 \uc800\uc7a5\ud55c\ub2e4 (\uba54\ubaa8\ub9ac\uc5d0\uc11c \uac12\uc744 \ub85c\ub4dc\ud558\uc9c0 \uc54a\ub294\ub2e4) lea 80(%rdx,%rcx,2),$rax - $rax=80+%rdx+2*%rcx rip - instruction pointer %rdi %rsi %rdx %rcx %r8 %r9 - callee function\uc758 argument \uc800\uc7a5 x86_64 calling conventions \ucc38\uace0 function prologue \ud568\uc218 \uc2e4\ud589\uc5d0 \ud544\uc694\ud55c register, stack\uc744 \uc900\ube44\ud55c\ub2e4 Pushes current base pointer onto the stack, so it can be restored later. pushq %rbp - %rbp\uc758 \uac12\uc744 %rsp\uac00 \uac00\ub9ac\ud0a4\ub294 \uacf5\uac04\uc5d0 \uc800\uc7a5 Value of base pointer is set to the address of stack pointer (which is pointed to the top of the stack) so that the base pointer will point to the top of the stack. moveq %rsp, %rbp - %rbp\uc5d0 %rsp\uc758 \uac12\uc744 \uc800\uc7a5(\uc0c8\ub85c\uc6b4 \uc2a4\ud0dd\uc758 base \uc8fc\uc18c(%rbp)\ub97c \uc774\uc804 \uc2a4\ud0dd\uc758 \uac00\uc7a5 \ub192\uc740 \uc8fc\uc18c(%rsp)\ub85c \uc124\uc815) Moves the stack pointer further by decreasing or increasing its value, depending on whether the stack grows down or up. On x86, the stack pointer is decreased to make room for the function's local variables. subq $16, %rsp - \uc9c0\uc5ed\ubcc0\uc218\ub97c \uc800\uc7a5\ud560 \uacf5\uac04\uc744 \ud560\ub2f9 function epilogue function prologue\uc758 \ubc18\ub300 \uacfc\uc815. (Function epilogue reverses the actions of the function prologue and returns control to the calling function.) control - cpu\uc5d0 \ub300\ud55c \uc8fc\ub3c4\uad8c. \ub808\uc9c0\uc2a4\ud130\uc5d0 f1\ud568\uc218\uc5d0 \ub300\ud55c \uac12\uc774 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4\uba74 control\uc740 f1\uc5d0\uac8c \uc788\ub2e4 Drop the stack pointer to the current base pointer, so room reserved in the prologue for local variables is freed. leave - mov %rbp, %rsp \uc640 pop %rbp \uba85\ub839\uc5b4\ub97c \uacb0\ud569\ud55c \uba85\ub839\uc5b4 Pops the base pointer off the stack, so it is restored to its value before the prologue. Returns to the calling function, by popping the previous frame's program counter off the stack and jumping to it. example2 \ucd08\uae30\ud654\ud558\uc9c0 \uc54a\uc740 \ubcc0\uc218\uc5d0 \ub300\ud55c \ucd5c\uc801\ud654 %eax - return value int b = b; - \uc758\ub3c4\uc801\uc73c\ub85c \ucd08\uae30\ud654\ud558\uc9c0 \uc54a\uc74c\uc744 \ucef4\ud30c\uc77c\ub7ec\uc5d0\uac8c \uc54c\ub824\uc900\ub2e4. \uc774\ub7f0 \ucf54\ub4dc \uc5c6\uc774 \ucd08\uae30\ud654 \ud558\uc9c0 \uc54a\uc73c\uba74 \ucef4\ud30c\uc77c\ud560\ub54c \uacbd\uace0 \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub41c\ub2e4. \uadf8\ub807\ub2e4\uace0 int b =0; \uacfc \uac19\uc774 \ucd08\uae30\ud654\ud560 \uacbd\uc6b0 movl $0, -16(%rbp) \ub77c\ub294 instruction\uc774 \ucd94\uac00\ub41c\ub2e4. \uc774\ub7f0 instruction\uc740 \ud504\ub85c\uc138\uc11c\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub85c \uac12\uc744 \ubcf5\uc0ac\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5c6\uc560\uba74 \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub41c\ub2e4 references geeksforgeeks.org/memory-layout-of-cprogram function prologue and epilogue x86 Instruction Set x86 calling convention","title":"C program memory layout"},{"location":"cprogramming/memory-layout/#c-program-memory-layout","text":"C \ud504\ub85c\uadf8\ub7a8\uc774 \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ub418\ub294 \ud615\ud0dc","title":"C program memory layout"},{"location":"cprogramming/memory-layout/#logical-diagram","text":"c \uc2e4\ud589\ud30c\uc77c\uc774 \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ub418\ub294 \ud615\ud0dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4 \uc2a4\ud0dd \ud504\ub808\uc784 \uc5ec\ub7ec \uac1c\ub97c \ubb36\uc5b4\uc11c \uc2a4\ud0dd\uc774\ub77c\uace0 \ud55c\ub2e4 \ud568\uc218\uac00 \ud638\ucd9c\ub420\ub54c\ub9c8\ub2e4 \uc2a4\ud0dd \ud504\ub808\uc784 \ud55c \uac1c\uac00 \uc0dd\uc131\ub41c\ub2e4. \uc2a4\ud0dd \ud504\ub808\uc784\uc740 \ud568\uc218\uc758 \uc2e4\ud589 \ud658\uacbd\uc744 \uc81c\uacf5\ud55c\ub2e4","title":"logical diagram"},{"location":"cprogramming/memory-layout/#registers","text":"rbp(base pointer) : \ud604\uc7ac \uc2a4\ud0dd \ud504\ub808\uc784\uc758 \uac00\uc7a5 \ub0ae\uc740 \uc8fc\uc18c","title":"registers"},{"location":"cprogramming/memory-layout/#example1","text":"\uc544\ub798\uc758 \uba85\ub839\uc5b4\ub85c c code\ub97c assembly code\ub85c \ucef4\ud30c\uc77c (x86_64 cpu) gcc -S scratch.c -o scratch.o \ubcc0\uc218\uc758 \uc120\uc5b8\ub9cc \ud55c \uacbd\uc6b0 \uc2a4\ud0dd\uc744 \ud560\ub2f9\ud558\uc9c0\ub9cc \ucd08\uae30\ud654\uae4c\uc9c0 \ud558\ub294 \uacbd\uc6b0 immediate value\ub97c \ub808\uc9c0\uc2a4\ud130\uc5d0 \uc800\uc7a5\ud558\ub294 instruction\uc774 \ucd94\uac00\ub41c\ub2e4","title":"example1"},{"location":"cprogramming/memory-layout/#x86-instructions-registers","text":"$0 , $1 - immediate value(\uc8fc\uc18c\uac12\uc774 \uc544\ub2cc \ub9ac\ud130\ub7f4) mov - memory\uc640 processor register \uc0ac\uc774\uc758 \uac12 \uc774\ub3d9(\ubcf5\uc0ac). \ubc18\ub4dc\uc2dc operand \ud558\ub098\ub294 register\uc774\ub2e4. \ub098\uba38\uc9c0 \ud558\ub098\ub294 immediate value\uc77c \uc218\ub3c4 \uc788\uace0 \uba54\ubaa8\ub9ac \uc8fc\uc18c\uc77c \uc218\ub3c4 \uc788\ub2e4. movq - 64\ube44\ud2b8 \uac12 \uc774\ub3d9 (\uc8fc\ub85c \uba54\ubaa8\ub9ac \uc8fc\uc18c\uac12) movl - 32\ube44\ud2b8 \uac12 \uc774\ub3d9 lea - load effective address \uc8fc\uc18c\uac12\uc744 \uacc4\uc0b0\ud574\uc11c dst\uc5d0 \uc800\uc7a5\ud55c\ub2e4 (\uba54\ubaa8\ub9ac\uc5d0\uc11c \uac12\uc744 \ub85c\ub4dc\ud558\uc9c0 \uc54a\ub294\ub2e4) lea 80(%rdx,%rcx,2),$rax - $rax=80+%rdx+2*%rcx rip - instruction pointer %rdi %rsi %rdx %rcx %r8 %r9 - callee function\uc758 argument \uc800\uc7a5 x86_64 calling conventions \ucc38\uace0","title":"x86 instructions &amp; registers"},{"location":"cprogramming/memory-layout/#function-prologue","text":"\ud568\uc218 \uc2e4\ud589\uc5d0 \ud544\uc694\ud55c register, stack\uc744 \uc900\ube44\ud55c\ub2e4 Pushes current base pointer onto the stack, so it can be restored later. pushq %rbp - %rbp\uc758 \uac12\uc744 %rsp\uac00 \uac00\ub9ac\ud0a4\ub294 \uacf5\uac04\uc5d0 \uc800\uc7a5 Value of base pointer is set to the address of stack pointer (which is pointed to the top of the stack) so that the base pointer will point to the top of the stack. moveq %rsp, %rbp - %rbp\uc5d0 %rsp\uc758 \uac12\uc744 \uc800\uc7a5(\uc0c8\ub85c\uc6b4 \uc2a4\ud0dd\uc758 base \uc8fc\uc18c(%rbp)\ub97c \uc774\uc804 \uc2a4\ud0dd\uc758 \uac00\uc7a5 \ub192\uc740 \uc8fc\uc18c(%rsp)\ub85c \uc124\uc815) Moves the stack pointer further by decreasing or increasing its value, depending on whether the stack grows down or up. On x86, the stack pointer is decreased to make room for the function's local variables. subq $16, %rsp - \uc9c0\uc5ed\ubcc0\uc218\ub97c \uc800\uc7a5\ud560 \uacf5\uac04\uc744 \ud560\ub2f9","title":"function prologue"},{"location":"cprogramming/memory-layout/#function-epilogue","text":"function prologue\uc758 \ubc18\ub300 \uacfc\uc815. (Function epilogue reverses the actions of the function prologue and returns control to the calling function.) control - cpu\uc5d0 \ub300\ud55c \uc8fc\ub3c4\uad8c. \ub808\uc9c0\uc2a4\ud130\uc5d0 f1\ud568\uc218\uc5d0 \ub300\ud55c \uac12\uc774 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4\uba74 control\uc740 f1\uc5d0\uac8c \uc788\ub2e4 Drop the stack pointer to the current base pointer, so room reserved in the prologue for local variables is freed. leave - mov %rbp, %rsp \uc640 pop %rbp \uba85\ub839\uc5b4\ub97c \uacb0\ud569\ud55c \uba85\ub839\uc5b4 Pops the base pointer off the stack, so it is restored to its value before the prologue. Returns to the calling function, by popping the previous frame's program counter off the stack and jumping to it.","title":"function epilogue"},{"location":"cprogramming/memory-layout/#example2","text":"\ucd08\uae30\ud654\ud558\uc9c0 \uc54a\uc740 \ubcc0\uc218\uc5d0 \ub300\ud55c \ucd5c\uc801\ud654 %eax - return value int b = b; - \uc758\ub3c4\uc801\uc73c\ub85c \ucd08\uae30\ud654\ud558\uc9c0 \uc54a\uc74c\uc744 \ucef4\ud30c\uc77c\ub7ec\uc5d0\uac8c \uc54c\ub824\uc900\ub2e4. \uc774\ub7f0 \ucf54\ub4dc \uc5c6\uc774 \ucd08\uae30\ud654 \ud558\uc9c0 \uc54a\uc73c\uba74 \ucef4\ud30c\uc77c\ud560\ub54c \uacbd\uace0 \uba54\uc138\uc9c0\uac00 \ucd9c\ub825\ub41c\ub2e4. \uadf8\ub807\ub2e4\uace0 int b =0; \uacfc \uac19\uc774 \ucd08\uae30\ud654\ud560 \uacbd\uc6b0 movl $0, -16(%rbp) \ub77c\ub294 instruction\uc774 \ucd94\uac00\ub41c\ub2e4. \uc774\ub7f0 instruction\uc740 \ud504\ub85c\uc138\uc11c\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub85c \uac12\uc744 \ubcf5\uc0ac\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5c6\uc560\uba74 \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub41c\ub2e4","title":"example2"},{"location":"cprogramming/memory-layout/#references","text":"geeksforgeeks.org/memory-layout-of-cprogram function prologue and epilogue x86 Instruction Set x86 calling convention","title":"references"},{"location":"cprogramming/zombie-process/","text":"\uc880\ube44 \ud504\ub85c\uc138\uc2a4 \uc0dd\uc131\uacfc \uc18c\uba78 \uc880\ube44 \ud504\ub85c\uc138\uc2a4\ub294 \uaecd\ub370\uae30\ub9cc \ub0a8\uc544\uc788\ub294 \uc0c1\ud0dc\uc774\ub2e4 \uc880\ube44 \ud504\ub85c\uc138\uc2a4\ub780? zombie process, defunct process\ub77c\uace0\ub3c4 \ud55c\ub2e4 \uc2e4\ud589\uc774 \uc885\ub8cc\ub418\uc5c8\uc9c0\ub9cc os\uc758 process table\uc744 \uc810\uc720\ud558\uace0 \uc788\ub294 \ud504\ub85c\uc138\uc2a4 os\uac00 \uad00\ub9ac\ud558\ub294 process table\uc758 \ud06c\uae30\uc5d0\ub294 \uc81c\ud55c\uc774 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc880\ube44 \ud504\ub85c\uc138\uc2a4\uac00 \uacc4\uc18d \uc0dd\uc131\ub418\uba74 \ub354 \uc774\uc0c1 \ud504\ub85c\uc138\uc2a4 \uc0dd\uc131\uc774 \ubd88\uac00\ub2a5\ud560 \uc218 \uc788\ub2e4 parent\uac00 \uc790\uc2e0\uc758 exit status\ub97c \ud655\uc778\ud558\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\ub294 \uc0c1\ud0dc \uc774\ub2e4 child\uc758 exit status\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\ub2e4 example code child process\ub294 defunct process\uac00 \ub418\ub294 \uc608\uc81c #include <unistd.h> #include <sys/wait.h> int main(int argc, const char *argv[]) { pid_t p; if ((p = fork()) == 0) // child return 0; else // parent while (1) { sleep(10); } return 0; } ps -ef | grep <\ud504\ub85c\uc138\uc2a4 \uc774\ub984> \uc2e4\ud589 --> [\ud504\ub85c\uc138\uc2a4 \uc774\ub984] \\<defunct> \ucd9c\ub825 \uc880\ube44 \ud504\ub85c\uc138\uc2a4 \ubc1c\uc0dd\uc744 \ub9c9\ub294 \ubc29\ubc95 wait \ub958 \ud568\uc218 \ud638\ucd9c signal handler \ub4f1\ub85d wait wait\ub97c \ud638\ucd9c\ud558\uba74 child process\uc758 main \ud568\uc218\uac00 \ubc18\ud658\ud55c \uac12\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4 #include <unistd.h> #include <sys/wait.h> #include <stdio.h> int main(int argc, const char *argv[]) { pid_t p; int estatus; if ((p = fork()) == 0) // child return 99; else { // parent wait(&estatus); printf(\"child(%d) exit status: %d\\n\", p, estatus); while (1) sleep(10); } return 0; } signal child\uc758 main \ud568\uc218\uac00 \ubc18\ud658\ud558\uba74 parent\uc5d0\uac8c SIGHLD signal\uc774 \uc804\ub2ec\ub418\ub294\ub370 \uc774 \uc2dc\uadf8\ub110\uc744 \ubc1b\uc558\uc744\ub54c waitpid\ub85c \uc885\ub8cc\ub41c child\uc758 exit status\ub97c \uc77d\uc744 \uc218 \uc788\ub2e4 sigaction \uc744 \uc0ac\uc6a9\ud558\uba74 signal\uc5d0 \ub300\ud574 signal \ud568\uc218\ubcf4\ub2e4 \uc12c\uc138\ud55c \uc81c\uc5b4\uac00 \uac00\ub2a5\ud558\ub2e4. signal\ubcf4\ub2e4\ub294 sigaction \uc0ac\uc6a9\uc774 \uad8c\uc7a5 \ub41c\ub2e4 signal \ud568\uc218\ub294 \ud578\ub4e4\ub7ec\uac00 \uc2e4\ud589\ub418\ub294 \ub3d9\uc548 \uc0c8\ub85c\uc6b4 \uc2dc\uadf8\ub110\uc774 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc804\ub2ec\ub418\ub294 \uac83\uc744 \ub9c9\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc sigaction \uc740 \uc2dc\uadf8\ub110 \ud578\ub4e4\ub7ec\uac00 \ubc18\ud658\ud558\uae30 \uc804\uae4c\uc9c0 \ub2e4\ub978 \uc2dc\uadf8\ub110\uc744 \ub9c9\ub294\ub2e4(block) signal \ud568\uc218\ub294 \ubcf4\ud1b5 \uc2dc\uadf8\ub110 \ud578\ub4e4\ub7ec\uac00 \ud55c \ubc88 \ud638\ucd9c\ub418\uace0 \ub098\uba74 \ud574\ub2f9 \uc2dc\uadf8\ub110\uc5d0 \ub300\ud55c \ud578\ub4e4\ub7ec\ub97c SIG_DFL \ub85c \ucd08\uae30\ud654\ud55c\ub2e4 \uadfc\ub370 \ub0b4 \ud658\uacbd(6.8.0-48-generic #48~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC x86_64)\uc5d0\uc11c\ub294 \uc2dc\uadf8\ub110 \ud578\ub4e4\ub7ec\uac00 \uc720\uc9c0\ub410\ub2e4 signal \ud568\uc218\uc758 \uc704\uc640 \uac19\uc740 \ub3d9\uc791\uc740 UNIX \uad6c\ud604\uccb4\ub9c8\ub2e4 \ub2e4\ub974\ub2e4. \ud45c\uc900\uc774 \uc774\ub97c \ud5c8\uc6a9\ud558\uace0 \uc788\ub2e4 #include <unistd.h> #include <stdio.h> #include <signal.h> #include <sys/wait.h> #define DO_USEFUL_TASKS do { sleep(10); } while(1); void sigchld_handler(int signo) { pid_t p; int estatus; int opt = 0; waitpid(-1, &estatus, opt); printf(\"child(%d) exit status: %d\\n\", p, estatus); } int main(int argc, const char *argv[]) { pid_t p; int estatus; if ((p = fork()) == 0) {// child1 printf(\"child(%d) exit\\n\", getpid()); return 1; } else { // parent signal(SIGCHLD, sigchld_handler); // signal(SIGCHLD, SIG_DFL); // \uc880\ube44 \uc0dd\uc131 // signal(SIGCHLD, SIG_IGN); // \uc880\ube44 \uc0dd\uc131 \uc548\ub428 } if ((p = fork()) == 0) {// child2 printf(\"child(%d) exit\\n\", getpid()); return 2; } DO_USEFUL_TASKS return 0; } references [WIKIPEDIA] Zombie process [Quora] signal \ud568\uc218\ubcf4\ub2e4 sigaction \ud568\uc218\ub97c \uc368\uc57c\ud558\ub294 \uc774\uc720 [Stackoverflow] signal vs sigaction","title":"zombie process"},{"location":"cprogramming/zombie-process/#_1","text":"\uc880\ube44 \ud504\ub85c\uc138\uc2a4\ub294 \uaecd\ub370\uae30\ub9cc \ub0a8\uc544\uc788\ub294 \uc0c1\ud0dc\uc774\ub2e4","title":"\uc880\ube44 \ud504\ub85c\uc138\uc2a4 \uc0dd\uc131\uacfc \uc18c\uba78"},{"location":"cprogramming/zombie-process/#_2","text":"zombie process, defunct process\ub77c\uace0\ub3c4 \ud55c\ub2e4 \uc2e4\ud589\uc774 \uc885\ub8cc\ub418\uc5c8\uc9c0\ub9cc os\uc758 process table\uc744 \uc810\uc720\ud558\uace0 \uc788\ub294 \ud504\ub85c\uc138\uc2a4 os\uac00 \uad00\ub9ac\ud558\ub294 process table\uc758 \ud06c\uae30\uc5d0\ub294 \uc81c\ud55c\uc774 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc880\ube44 \ud504\ub85c\uc138\uc2a4\uac00 \uacc4\uc18d \uc0dd\uc131\ub418\uba74 \ub354 \uc774\uc0c1 \ud504\ub85c\uc138\uc2a4 \uc0dd\uc131\uc774 \ubd88\uac00\ub2a5\ud560 \uc218 \uc788\ub2e4 parent\uac00 \uc790\uc2e0\uc758 exit status\ub97c \ud655\uc778\ud558\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\ub294 \uc0c1\ud0dc \uc774\ub2e4 child\uc758 exit status\ub97c \ud655\uc778\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\ub2e4","title":"\uc880\ube44 \ud504\ub85c\uc138\uc2a4\ub780?"},{"location":"cprogramming/zombie-process/#example-code","text":"child process\ub294 defunct process\uac00 \ub418\ub294 \uc608\uc81c #include <unistd.h> #include <sys/wait.h> int main(int argc, const char *argv[]) { pid_t p; if ((p = fork()) == 0) // child return 0; else // parent while (1) { sleep(10); } return 0; } ps -ef | grep <\ud504\ub85c\uc138\uc2a4 \uc774\ub984> \uc2e4\ud589 --> [\ud504\ub85c\uc138\uc2a4 \uc774\ub984] \\<defunct> \ucd9c\ub825","title":"example code"},{"location":"cprogramming/zombie-process/#_3","text":"wait \ub958 \ud568\uc218 \ud638\ucd9c signal handler \ub4f1\ub85d","title":"\uc880\ube44 \ud504\ub85c\uc138\uc2a4 \ubc1c\uc0dd\uc744 \ub9c9\ub294 \ubc29\ubc95"},{"location":"cprogramming/zombie-process/#wait","text":"wait\ub97c \ud638\ucd9c\ud558\uba74 child process\uc758 main \ud568\uc218\uac00 \ubc18\ud658\ud55c \uac12\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4 #include <unistd.h> #include <sys/wait.h> #include <stdio.h> int main(int argc, const char *argv[]) { pid_t p; int estatus; if ((p = fork()) == 0) // child return 99; else { // parent wait(&estatus); printf(\"child(%d) exit status: %d\\n\", p, estatus); while (1) sleep(10); } return 0; }","title":"wait"},{"location":"cprogramming/zombie-process/#signal","text":"child\uc758 main \ud568\uc218\uac00 \ubc18\ud658\ud558\uba74 parent\uc5d0\uac8c SIGHLD signal\uc774 \uc804\ub2ec\ub418\ub294\ub370 \uc774 \uc2dc\uadf8\ub110\uc744 \ubc1b\uc558\uc744\ub54c waitpid\ub85c \uc885\ub8cc\ub41c child\uc758 exit status\ub97c \uc77d\uc744 \uc218 \uc788\ub2e4 sigaction \uc744 \uc0ac\uc6a9\ud558\uba74 signal\uc5d0 \ub300\ud574 signal \ud568\uc218\ubcf4\ub2e4 \uc12c\uc138\ud55c \uc81c\uc5b4\uac00 \uac00\ub2a5\ud558\ub2e4. signal\ubcf4\ub2e4\ub294 sigaction \uc0ac\uc6a9\uc774 \uad8c\uc7a5 \ub41c\ub2e4 signal \ud568\uc218\ub294 \ud578\ub4e4\ub7ec\uac00 \uc2e4\ud589\ub418\ub294 \ub3d9\uc548 \uc0c8\ub85c\uc6b4 \uc2dc\uadf8\ub110\uc774 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc804\ub2ec\ub418\ub294 \uac83\uc744 \ub9c9\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc sigaction \uc740 \uc2dc\uadf8\ub110 \ud578\ub4e4\ub7ec\uac00 \ubc18\ud658\ud558\uae30 \uc804\uae4c\uc9c0 \ub2e4\ub978 \uc2dc\uadf8\ub110\uc744 \ub9c9\ub294\ub2e4(block) signal \ud568\uc218\ub294 \ubcf4\ud1b5 \uc2dc\uadf8\ub110 \ud578\ub4e4\ub7ec\uac00 \ud55c \ubc88 \ud638\ucd9c\ub418\uace0 \ub098\uba74 \ud574\ub2f9 \uc2dc\uadf8\ub110\uc5d0 \ub300\ud55c \ud578\ub4e4\ub7ec\ub97c SIG_DFL \ub85c \ucd08\uae30\ud654\ud55c\ub2e4 \uadfc\ub370 \ub0b4 \ud658\uacbd(6.8.0-48-generic #48~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC x86_64)\uc5d0\uc11c\ub294 \uc2dc\uadf8\ub110 \ud578\ub4e4\ub7ec\uac00 \uc720\uc9c0\ub410\ub2e4 signal \ud568\uc218\uc758 \uc704\uc640 \uac19\uc740 \ub3d9\uc791\uc740 UNIX \uad6c\ud604\uccb4\ub9c8\ub2e4 \ub2e4\ub974\ub2e4. \ud45c\uc900\uc774 \uc774\ub97c \ud5c8\uc6a9\ud558\uace0 \uc788\ub2e4 #include <unistd.h> #include <stdio.h> #include <signal.h> #include <sys/wait.h> #define DO_USEFUL_TASKS do { sleep(10); } while(1); void sigchld_handler(int signo) { pid_t p; int estatus; int opt = 0; waitpid(-1, &estatus, opt); printf(\"child(%d) exit status: %d\\n\", p, estatus); } int main(int argc, const char *argv[]) { pid_t p; int estatus; if ((p = fork()) == 0) {// child1 printf(\"child(%d) exit\\n\", getpid()); return 1; } else { // parent signal(SIGCHLD, sigchld_handler); // signal(SIGCHLD, SIG_DFL); // \uc880\ube44 \uc0dd\uc131 // signal(SIGCHLD, SIG_IGN); // \uc880\ube44 \uc0dd\uc131 \uc548\ub428 } if ((p = fork()) == 0) {// child2 printf(\"child(%d) exit\\n\", getpid()); return 2; } DO_USEFUL_TASKS return 0; }","title":"signal"},{"location":"cprogramming/zombie-process/#references","text":"[WIKIPEDIA] Zombie process [Quora] signal \ud568\uc218\ubcf4\ub2e4 sigaction \ud568\uc218\ub97c \uc368\uc57c\ud558\ub294 \uc774\uc720 [Stackoverflow] signal vs sigaction","title":"references"},{"location":"diy/raspberrypi-communication/","text":"\ub77c\uc988\ubca0\ub9ac GPIO \ub77c\uc988\ubca0\ub9ac \ud30c\uc774\uac00 \ub2e4\ub978 \uc7a5\uce58\ub4e4\uacfc \ub370\uc774\ud130\ub97c \uc8fc\uace0 \ubc1b\ub294 \ubc29\uc2dd GPIO pin General Purpose Input/Output single-board computer(or microprocessor)\uc640 \ub2e4\ub978 component \uc0ac\uc774\uc758 \ud45c\uc900 \uc778\ud130\ud398\uc774\uc2a4 Rapsberry Pi 3B+\uc5d0\ub294 40-pin header\uac00 \uc788\ub294\ub370 \uadf8 \uc911 28\uac1c\uac00 GPIO pin\ub4e4\uc774\uace0 \ub098\uba38\uc9c0\ub294 power \ub610\ub294 ground pin\uc774\ub2e4 Pin Numbering - Raspberry Pi 3B+ \uac01 pin\ub4e4\uc5d0\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud1b5\uc2e0 \ubc29\ubc95(SPI, I2C, UART \ub4f1)\uc774 \ud560\ub2f9\ub418\uc5b4 \uc788\ub2e4 pinmap \ud655\uc778 SPI Serial Peripheral Interface (\uc9c1\ub82c \uc8fc\ubcc0\uae30\uae30 \uc778\ud130\ud398\uc774\uc2a4) \uc9c1\ub82c \ub3d9\uae30 \ud1b5\uc2e0(synchronous serial communication)\uc758 \uc0ac\uc2e4\uc0c1(de facto) \ud45c\uc900 serial(\uc9c1\ub82c) : \ub370\uc774\ud130\ub97c \ud55c \ubc88\uc5d0 1bit\uc529 \uc21c\ucc28\uc801\uc73c\ub85c \uc804\uc1a1\ud558\ub294 \ubc29\uc2dd (e.g. USB, RS-232) parallel(\ubcd1\ub82c) : \ud55c \ubc88\uc5d0 \uc5ec\ub7ec \ube44\ud2b8\ub97c \ub3d9\uc2dc\uc5d0 \uc804\uc1a1 (e.g. PCI, DDR) \uc8fc\ub85c microprocessor \uc0ac\uc774\uc758 \ub2e8\uac70\ub9ac \uc720\uc120 \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4 master-slave(main-sub) \uad6c\uc870\ub97c \ub530\ub978\ub2e4. \ud558\ub098\uc758 main device\uc5d0 \uc5ec\ub7ec \uac1c\uc758 sub(peripheral) device\ub4e4\uc774 \uc5f0\uacb0\ud574\uc11c chip select signal \uc744 \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc8fc\uace0 \ubc1b\ub294\ub2e4 Motorola\uac00 1980\ub144\ub300\uc5d0 \ucc98\uc74c \uac1c\ubc1c\ud588\ub2e4 \uc8fc\ub85c microcontroller\uc640 SD card, LCD, ADC(Analog-Digital Converter) \ub4f1\uc758 \uc8fc\ubcc0\uae30\uae30 \uc0ac\uc774\uc758 \ub370\uc774\ud130 \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4 \uc77c\ubc18\uc801\uc73c\ub85c \ub124 \uac1c\uc758 \ub17c\ub9ac \uc2e0\ud638(pin)\ub4e4\uc744 \uc774\uc6a9\ud55c\ub2e4 !(CS) (Chip Select) - \ud1b5\uc2e0\ud560 \uc7a5\uce58\ub97c \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 main\uc5d0\uc11c \uc804\uc1a1\ud558\ub294 \uc2e0\ud638 negative\ub97c \uc758\ubbf8\ud558\ub294 ! \ub610\ub294 bar\ub294 \ud574\ub2f9 \uc2e0\ud638\uac00 LOW(0)\uac00 \ud65c\uc131\ud654\ub97c \uc758\ubbf8\ud558\ub294 active low\uc784\uc744 \ub098\ud0c0\ub0b8\ub2e4 SCLK (Serial Clock) - main\uc5d0\uc11c \ubcf4\ub0b4\ub294 clock signal MOSI (Master Out Slave In) - master\uc5d0\uc11c slave\ub85c \uc804\uc1a1\ud558\ub294 \uc2e0\ud638(pin) MISO (Master In Slave Out) - slave\uc5d0\uc11c master\ub85c \uc804\uc1a1\ud558\ub294 \uc2e0\ud638(pin) sudo raspi-config --> Interfacing Options --> SPI Enable \uc120\ud0dd I2C 1982\ub144 Philips Semiconductors\uc5d0\uc11c \uac1c\ubc1c\ud55c Serial Communication Bus\uc774\ub2e4 SPI\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c synchronous serial communication(\ub3d9\uae30\uc2dd \uc9c1\ub82c \ud1b5\uc2e0)\uc774\ub2e4 \ube44\uad50\uc801 \ub290\ub9b0 \uc8fc\ubcc0\uae30\uae30(IC)\uc640 microcontroller(\ub610\ub294 processor) \uc0ac\uc774\uc758 \ub2e8\uac70\ub9ac \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4. \uc18d\ub3c4\ubcf4\ub2e4\ub294 \ub2e8\uc21c\ud568\uacfc \ub0ae\uc740 \ube44\uc6a9\uc774 \uc694\uad6c\ub418\ub294 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud558\ub2e4 Display \uc124\uc815(e.g. backlight, contrast, hue)\uc744 \uc81c\uc5b4\ud558\ub294 \ub4f1\uc758 \uac04\ub2e8\ud55c \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4 UART Universal Asynchronous Receiver-Transmitter (\ubc94\uc6a9 \ube44\ub3d9\uae30\ud654 \uc1a1\uc218\uc2e0\uae30) \ube44\ub3d9\uae30 \uc9c1\ub82c \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c \uc7a5\uce58 UART\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc218\uc2e0\uce21\uacfc \uc1a1\uc2e0\uce21\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \uc124\uc815\uc744 \ub3d9\uc77c\ud558\uac8c \ub9de\ucdb0\uc57c \ud55c\ub2e4 Voltage level Baud Rate Parity bit Data bits size Stop bits size Flow Control RS-232, raw TTL references Raspberry Pi and General-Purpose Input/Output [WIKIPEDIA] Serial Peripheral Interface [WIKIPEDIA] I2C [WIKIPEDIA] UART","title":"Raspberry Pi GPIO"},{"location":"diy/raspberrypi-communication/#gpio","text":"\ub77c\uc988\ubca0\ub9ac \ud30c\uc774\uac00 \ub2e4\ub978 \uc7a5\uce58\ub4e4\uacfc \ub370\uc774\ud130\ub97c \uc8fc\uace0 \ubc1b\ub294 \ubc29\uc2dd","title":"\ub77c\uc988\ubca0\ub9ac GPIO"},{"location":"diy/raspberrypi-communication/#gpio-pin","text":"General Purpose Input/Output single-board computer(or microprocessor)\uc640 \ub2e4\ub978 component \uc0ac\uc774\uc758 \ud45c\uc900 \uc778\ud130\ud398\uc774\uc2a4 Rapsberry Pi 3B+\uc5d0\ub294 40-pin header\uac00 \uc788\ub294\ub370 \uadf8 \uc911 28\uac1c\uac00 GPIO pin\ub4e4\uc774\uace0 \ub098\uba38\uc9c0\ub294 power \ub610\ub294 ground pin\uc774\ub2e4 Pin Numbering - Raspberry Pi 3B+ \uac01 pin\ub4e4\uc5d0\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud1b5\uc2e0 \ubc29\ubc95(SPI, I2C, UART \ub4f1)\uc774 \ud560\ub2f9\ub418\uc5b4 \uc788\ub2e4 pinmap \ud655\uc778","title":"GPIO pin"},{"location":"diy/raspberrypi-communication/#spi","text":"Serial Peripheral Interface (\uc9c1\ub82c \uc8fc\ubcc0\uae30\uae30 \uc778\ud130\ud398\uc774\uc2a4) \uc9c1\ub82c \ub3d9\uae30 \ud1b5\uc2e0(synchronous serial communication)\uc758 \uc0ac\uc2e4\uc0c1(de facto) \ud45c\uc900 serial(\uc9c1\ub82c) : \ub370\uc774\ud130\ub97c \ud55c \ubc88\uc5d0 1bit\uc529 \uc21c\ucc28\uc801\uc73c\ub85c \uc804\uc1a1\ud558\ub294 \ubc29\uc2dd (e.g. USB, RS-232) parallel(\ubcd1\ub82c) : \ud55c \ubc88\uc5d0 \uc5ec\ub7ec \ube44\ud2b8\ub97c \ub3d9\uc2dc\uc5d0 \uc804\uc1a1 (e.g. PCI, DDR) \uc8fc\ub85c microprocessor \uc0ac\uc774\uc758 \ub2e8\uac70\ub9ac \uc720\uc120 \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4 master-slave(main-sub) \uad6c\uc870\ub97c \ub530\ub978\ub2e4. \ud558\ub098\uc758 main device\uc5d0 \uc5ec\ub7ec \uac1c\uc758 sub(peripheral) device\ub4e4\uc774 \uc5f0\uacb0\ud574\uc11c chip select signal \uc744 \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uc8fc\uace0 \ubc1b\ub294\ub2e4 Motorola\uac00 1980\ub144\ub300\uc5d0 \ucc98\uc74c \uac1c\ubc1c\ud588\ub2e4 \uc8fc\ub85c microcontroller\uc640 SD card, LCD, ADC(Analog-Digital Converter) \ub4f1\uc758 \uc8fc\ubcc0\uae30\uae30 \uc0ac\uc774\uc758 \ub370\uc774\ud130 \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4 \uc77c\ubc18\uc801\uc73c\ub85c \ub124 \uac1c\uc758 \ub17c\ub9ac \uc2e0\ud638(pin)\ub4e4\uc744 \uc774\uc6a9\ud55c\ub2e4 !(CS) (Chip Select) - \ud1b5\uc2e0\ud560 \uc7a5\uce58\ub97c \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 main\uc5d0\uc11c \uc804\uc1a1\ud558\ub294 \uc2e0\ud638 negative\ub97c \uc758\ubbf8\ud558\ub294 ! \ub610\ub294 bar\ub294 \ud574\ub2f9 \uc2e0\ud638\uac00 LOW(0)\uac00 \ud65c\uc131\ud654\ub97c \uc758\ubbf8\ud558\ub294 active low\uc784\uc744 \ub098\ud0c0\ub0b8\ub2e4 SCLK (Serial Clock) - main\uc5d0\uc11c \ubcf4\ub0b4\ub294 clock signal MOSI (Master Out Slave In) - master\uc5d0\uc11c slave\ub85c \uc804\uc1a1\ud558\ub294 \uc2e0\ud638(pin) MISO (Master In Slave Out) - slave\uc5d0\uc11c master\ub85c \uc804\uc1a1\ud558\ub294 \uc2e0\ud638(pin) sudo raspi-config --> Interfacing Options --> SPI Enable \uc120\ud0dd","title":"SPI"},{"location":"diy/raspberrypi-communication/#i2c","text":"1982\ub144 Philips Semiconductors\uc5d0\uc11c \uac1c\ubc1c\ud55c Serial Communication Bus\uc774\ub2e4 SPI\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c synchronous serial communication(\ub3d9\uae30\uc2dd \uc9c1\ub82c \ud1b5\uc2e0)\uc774\ub2e4 \ube44\uad50\uc801 \ub290\ub9b0 \uc8fc\ubcc0\uae30\uae30(IC)\uc640 microcontroller(\ub610\ub294 processor) \uc0ac\uc774\uc758 \ub2e8\uac70\ub9ac \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4. \uc18d\ub3c4\ubcf4\ub2e4\ub294 \ub2e8\uc21c\ud568\uacfc \ub0ae\uc740 \ube44\uc6a9\uc774 \uc694\uad6c\ub418\ub294 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud558\ub2e4 Display \uc124\uc815(e.g. backlight, contrast, hue)\uc744 \uc81c\uc5b4\ud558\ub294 \ub4f1\uc758 \uac04\ub2e8\ud55c \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4","title":"I2C"},{"location":"diy/raspberrypi-communication/#uart","text":"Universal Asynchronous Receiver-Transmitter (\ubc94\uc6a9 \ube44\ub3d9\uae30\ud654 \uc1a1\uc218\uc2e0\uae30) \ube44\ub3d9\uae30 \uc9c1\ub82c \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub41c \uc7a5\uce58 UART\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc218\uc2e0\uce21\uacfc \uc1a1\uc2e0\uce21\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \uc124\uc815\uc744 \ub3d9\uc77c\ud558\uac8c \ub9de\ucdb0\uc57c \ud55c\ub2e4 Voltage level Baud Rate Parity bit Data bits size Stop bits size Flow Control RS-232, raw TTL","title":"UART"},{"location":"diy/raspberrypi-communication/#references","text":"Raspberry Pi and General-Purpose Input/Output [WIKIPEDIA] Serial Peripheral Interface [WIKIPEDIA] I2C [WIKIPEDIA] UART","title":"references"},{"location":"firefox/building-firefox-on-linux/","text":"Building Firefox on Linux \ub9ac\ub205\uc2a4(Ubuntu) PC\uc5d0\uc11c Firefox\ub97c \ube4c\ub4dc\ud558\ub294 \ubc29\ubc95 Depedencies python 3.8 \uc774\uc0c1 \uc124\uce58 - sudo apt-get install curl python3 python3-pip mercurial \uc124\uce58 - python3 -m pip install --user mercurial Mozilla\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub294 Mercurial \uc800\uc7a5\uc18c\uc5d0 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4 \uc18c\uc2a4\ucf54\ub4dc \ub2e4\uc6b4\ub85c\ub4dc 15\ubd84\uc815\ub3c4 \uac78\ub9b0\ub2e4 mkdir mozilla && cd mozilla \\ && curl https://hg.mozilla.org/mozilla-central/raw-file/default/python/mozboot/bin/bootstrap.py -O \\ && python3 bootstrap.py --vcs=git \\ && python3 bootstrap.py Build cd mozilla-unified && git pull origin bookmarks/central && ./mach build \ud55c \ubc88 \ube4c\ub4dc\ud55c \uc774\ud6c4\ubd80\ud130\ub294 \uadf8\ub0e5 ./mach build \uba85\ub839\uc5b4\ub85c \ube4c\ub4dc\ud560 \uc218 \uc788\ub2e4 \ube4c\ub4dc\uc5d0 \uc2e4\ud328\ud560 \uacbd\uc6b0 Troubleshooting section \ucc38\uace0 Artifact mode\ub85c \ube4c\ub4dc\ud558\uba74 \ube4c\ub4dc \uacb0\uacfc\ubb3c \uc77c\ubd80\ub97c \uc800\uc7a5\uc18c\uc5d0\uc11c \ubc1b\uc544\uc640 \ube4c\ub4dc \uc2dc\uac04\uc744 \ub2e8\ucd95\ud55c\ub2e4. \uc0c1\uc704 \ub808\ubca8\uc758 \ucf54\ub4dc(UI, JavaScript \ub4f1)\ub9cc \ube4c\ub4dc\ud55c\ub2e4 hg - Mercurial \uba85\ub839\uc5b4\ub97c \ud638\ucd9c\ud558\ub294 \uba85\ub839\uc5b4 up - \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\ub97c \ud2b9\uc815 \ube0c\ub79c\uce58(\ub610\ub294 \ub9ac\ube44\uc804)\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4 -C - \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\uc758 \ubaa8\ub4e0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uac15\uc81c\ub85c \ucd08\uae30\ud654\ud55c\ub2e4 central - \ube0c\ub79c\uce58 \uc774\ub984 references Building Firefox On Linux How To Contribute Code To Firefox","title":"Linux\uc5d0\uc11c Firefox \ube4c\ub4dc"},{"location":"firefox/building-firefox-on-linux/#building-firefox-on-linux","text":"\ub9ac\ub205\uc2a4(Ubuntu) PC\uc5d0\uc11c Firefox\ub97c \ube4c\ub4dc\ud558\ub294 \ubc29\ubc95","title":"Building Firefox on Linux"},{"location":"firefox/building-firefox-on-linux/#depedencies","text":"python 3.8 \uc774\uc0c1 \uc124\uce58 - sudo apt-get install curl python3 python3-pip mercurial \uc124\uce58 - python3 -m pip install --user mercurial Mozilla\uc758 \uc18c\uc2a4 \ucf54\ub4dc\ub294 Mercurial \uc800\uc7a5\uc18c\uc5d0 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4","title":"Depedencies"},{"location":"firefox/building-firefox-on-linux/#_1","text":"15\ubd84\uc815\ub3c4 \uac78\ub9b0\ub2e4 mkdir mozilla && cd mozilla \\ && curl https://hg.mozilla.org/mozilla-central/raw-file/default/python/mozboot/bin/bootstrap.py -O \\ && python3 bootstrap.py --vcs=git \\ && python3 bootstrap.py","title":"\uc18c\uc2a4\ucf54\ub4dc \ub2e4\uc6b4\ub85c\ub4dc"},{"location":"firefox/building-firefox-on-linux/#build","text":"cd mozilla-unified && git pull origin bookmarks/central && ./mach build \ud55c \ubc88 \ube4c\ub4dc\ud55c \uc774\ud6c4\ubd80\ud130\ub294 \uadf8\ub0e5 ./mach build \uba85\ub839\uc5b4\ub85c \ube4c\ub4dc\ud560 \uc218 \uc788\ub2e4 \ube4c\ub4dc\uc5d0 \uc2e4\ud328\ud560 \uacbd\uc6b0 Troubleshooting section \ucc38\uace0 Artifact mode\ub85c \ube4c\ub4dc\ud558\uba74 \ube4c\ub4dc \uacb0\uacfc\ubb3c \uc77c\ubd80\ub97c \uc800\uc7a5\uc18c\uc5d0\uc11c \ubc1b\uc544\uc640 \ube4c\ub4dc \uc2dc\uac04\uc744 \ub2e8\ucd95\ud55c\ub2e4. \uc0c1\uc704 \ub808\ubca8\uc758 \ucf54\ub4dc(UI, JavaScript \ub4f1)\ub9cc \ube4c\ub4dc\ud55c\ub2e4 hg - Mercurial \uba85\ub839\uc5b4\ub97c \ud638\ucd9c\ud558\ub294 \uba85\ub839\uc5b4 up - \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\ub97c \ud2b9\uc815 \ube0c\ub79c\uce58(\ub610\ub294 \ub9ac\ube44\uc804)\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4 -C - \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\uc758 \ubaa8\ub4e0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uac15\uc81c\ub85c \ucd08\uae30\ud654\ud55c\ub2e4 central - \ube0c\ub79c\uce58 \uc774\ub984","title":"Build"},{"location":"firefox/building-firefox-on-linux/#references","text":"Building Firefox On Linux How To Contribute Code To Firefox","title":"references"},{"location":"mariadb/likely-unlikely-api/","text":"compiler-level if\ubb38 \ucd5c\uc801\ud654 MariaDB \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 likely , unlikely api\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd84\uae30\ub97c \ucd5c\uc801\ud654\ud55c\ub2e4. __builtin_expect long __builtin_expect (long expression, long value); \ucef4\ud30c\uc77c\ub7ec\uc5d0\uac8c \ud45c\ud604\uc2dd\uc774 \uc5b4\ub5a4 \uac12\uc77c \ud655\ub960\uc774 \ub192\ub2e4\ub294 \uc815\ubcf4\ub97c \uc8fc\ub294 \ubc29\ubc95\uc774\ub2e4. \ucef4\ud30c\uc77c\ub7ec\ub294 \uc774 \ud78c\ud2b8\ub97c \uc774\uc6a9\ud574 \ucd5c\uc801\ud654\ub97c \uc9c4\ud589\ud55c\ub2e4 cpu\ub294 instruction \uc2e4\ud589\uc758 \ubcd1\ub82c\uc131(parallelism)\uc744 \ub192\uc774\uae30 \uc704\ud574 branch prediction\uc744 \uc9c4\ud589\ud55c\ub2e4 instruction\uc758 \ubcd1\ub82c\uc131\uc740 instruction pipelining \uc744 \ud1b5\ud574 \uad6c\ud604\ub41c\ub2e4 value \uc5d0\ub294 constant literal\uc774 \uc804\ub2ec\ub418\uc5b4\uc57c \ud55c\ub2e4 expression \uc758 \uacb0\uacfc\uac00 value \uc77c \uacbd\uc6b0 \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub418\uc9c0\ub9cc \uadf8\ub807\uc9c0 \ubabb\ud560 \uacbd\uc6b0\uc5d0 \ub300\uac00\ub97c \uce58\ub974\uae30 \ub54c\ubb38\uc5d0 \uc2e0\uc911\ud558\uac8c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4 switch\ubb38\uc5d0 \ub300\ud574\uc11c\ub3c4 \ucd5c\uc801\ud654\uac00 \uac00\ub2a5 \ud558\ub2e4 likely unlikely /* Add checking if we are using likely/unlikely wrong */ #ifdef CHECK_UNLIKELY C_MODE_START extern void init_my_likely(), end_my_likely(FILE *); extern int my_likely_ok(const char *file_name, uint line); extern int my_likely_fail(const char *file_name, uint line); C_MODE_END #define likely(A) ((A) ? (my_likely_ok(__FILE__, __LINE__),1) : (my_likely_fail(__FILE__, __LINE__), 0)) #define unlikely(A) ((A) ? (my_likely_fail(__FILE__, __LINE__),1) : (my_likely_ok(__FILE__, __LINE__), 0)) /* These macros should be used when the check fails often when running benchmarks but we know for sure that the check is correct in a production environment */ #define checked_likely(A) (A) #define checked_unlikely(A) (A) #else /** The semantics of builtin_expect() are that 1) its two arguments are long 2) it's likely that they are == Those of our likely(x) are that x can be bool/int/longlong/pointer. */ #define likely(x) __builtin_expect(((x) != 0),1) #define unlikely(x) __builtin_expect(((x) != 0),0) #define checked_likely(x) likely(x) #define checked_unlikely(x) unlikely(x) #endif /* CHECK_UNLIKELY */ MariaDB \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \ucd5c\uc801\ud654\ub97c \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 __builtin_expect \ub97c \uac10\uc2fc api CHECK_UNLIKELY \ub9e4\ud06c\ub85c\ub97c \ucf1c\uc11c \ubd84\uae30 \uc608\uce21\uc758 hit, miss \uc5ec\ubd80\uc5d0 \uad00\ud55c \ud1b5\uacc4\ub97c \uc218\uc9d1\ud574\uc11c unlikely, likely \uc0ac\uc6a9 \uc5ec\ubd80\ub97c \uacb0\uc815\ud558\ub294 \ubc29\uc2dd\uc774\ub2e4 references [IBM Documentation] __builtin_expect Make __builtin_expect effective in switch statements (PR middle-end/PR59521). [WIKIPEDIA] Instruction Pipelining","title":"compiler-level \ubd84\uae30 \ucd5c\uc801\ud654"},{"location":"mariadb/likely-unlikely-api/#compiler-level-if","text":"MariaDB \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 likely , unlikely api\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd84\uae30\ub97c \ucd5c\uc801\ud654\ud55c\ub2e4.","title":"compiler-level if\ubb38 \ucd5c\uc801\ud654"},{"location":"mariadb/likely-unlikely-api/#__builtin_expect","text":"long __builtin_expect (long expression, long value); \ucef4\ud30c\uc77c\ub7ec\uc5d0\uac8c \ud45c\ud604\uc2dd\uc774 \uc5b4\ub5a4 \uac12\uc77c \ud655\ub960\uc774 \ub192\ub2e4\ub294 \uc815\ubcf4\ub97c \uc8fc\ub294 \ubc29\ubc95\uc774\ub2e4. \ucef4\ud30c\uc77c\ub7ec\ub294 \uc774 \ud78c\ud2b8\ub97c \uc774\uc6a9\ud574 \ucd5c\uc801\ud654\ub97c \uc9c4\ud589\ud55c\ub2e4 cpu\ub294 instruction \uc2e4\ud589\uc758 \ubcd1\ub82c\uc131(parallelism)\uc744 \ub192\uc774\uae30 \uc704\ud574 branch prediction\uc744 \uc9c4\ud589\ud55c\ub2e4 instruction\uc758 \ubcd1\ub82c\uc131\uc740 instruction pipelining \uc744 \ud1b5\ud574 \uad6c\ud604\ub41c\ub2e4 value \uc5d0\ub294 constant literal\uc774 \uc804\ub2ec\ub418\uc5b4\uc57c \ud55c\ub2e4 expression \uc758 \uacb0\uacfc\uac00 value \uc77c \uacbd\uc6b0 \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub418\uc9c0\ub9cc \uadf8\ub807\uc9c0 \ubabb\ud560 \uacbd\uc6b0\uc5d0 \ub300\uac00\ub97c \uce58\ub974\uae30 \ub54c\ubb38\uc5d0 \uc2e0\uc911\ud558\uac8c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4 switch\ubb38\uc5d0 \ub300\ud574\uc11c\ub3c4 \ucd5c\uc801\ud654\uac00 \uac00\ub2a5 \ud558\ub2e4","title":"__builtin_expect"},{"location":"mariadb/likely-unlikely-api/#likely-unlikely","text":"/* Add checking if we are using likely/unlikely wrong */ #ifdef CHECK_UNLIKELY C_MODE_START extern void init_my_likely(), end_my_likely(FILE *); extern int my_likely_ok(const char *file_name, uint line); extern int my_likely_fail(const char *file_name, uint line); C_MODE_END #define likely(A) ((A) ? (my_likely_ok(__FILE__, __LINE__),1) : (my_likely_fail(__FILE__, __LINE__), 0)) #define unlikely(A) ((A) ? (my_likely_fail(__FILE__, __LINE__),1) : (my_likely_ok(__FILE__, __LINE__), 0)) /* These macros should be used when the check fails often when running benchmarks but we know for sure that the check is correct in a production environment */ #define checked_likely(A) (A) #define checked_unlikely(A) (A) #else /** The semantics of builtin_expect() are that 1) its two arguments are long 2) it's likely that they are == Those of our likely(x) are that x can be bool/int/longlong/pointer. */ #define likely(x) __builtin_expect(((x) != 0),1) #define unlikely(x) __builtin_expect(((x) != 0),0) #define checked_likely(x) likely(x) #define checked_unlikely(x) unlikely(x) #endif /* CHECK_UNLIKELY */ MariaDB \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \ucd5c\uc801\ud654\ub97c \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 __builtin_expect \ub97c \uac10\uc2fc api CHECK_UNLIKELY \ub9e4\ud06c\ub85c\ub97c \ucf1c\uc11c \ubd84\uae30 \uc608\uce21\uc758 hit, miss \uc5ec\ubd80\uc5d0 \uad00\ud55c \ud1b5\uacc4\ub97c \uc218\uc9d1\ud574\uc11c unlikely, likely \uc0ac\uc6a9 \uc5ec\ubd80\ub97c \uacb0\uc815\ud558\ub294 \ubc29\uc2dd\uc774\ub2e4","title":"likely unlikely"},{"location":"mariadb/likely-unlikely-api/#references","text":"[IBM Documentation] __builtin_expect Make __builtin_expect effective in switch statements (PR middle-end/PR59521). [WIKIPEDIA] Instruction Pipelining","title":"references"},{"location":"mariadb/tap-api/","text":"MyTAP \ucf54\ub4dc\ubd84\uc11d MyTAP\uc740 MySQL \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uad6c\ud604\ud558\uace0 \uc0ac\uc6a9\ud558\ub294 TAP \uad6c\ud604\uccb4\uc774\ub2e4 TAP (Test Anything Protocol) TAP producer\uc640 TAP consumer \uc0ac\uc774\uc758 \ud504\ub85c\ud1a0\ucf5c TAP producer - \ud14c\uc2a4\ud2b8 \ub85c\uc9c1. \ud2b9\uc815 \uae30\ub2a5\uc744 \uc704\ud574 \uc791\uc131\ub41c \ud14c\uc2a4\ud2b8\ub97c \uc758\ubbf8\ud55c\ub2e4 TAP consumer - \ud14c\uc2a4\ud2b8 \uacb0\uacfc\ub97c \ud30c\uc2f1\ud558\uc5ec \ud1b5\uacc4 \uc790\ub8cc \ub4f1\uc5d0 \ud65c\uc6a9. TAP harness\ub77c\uace0\ub3c4 \ud45c\ud604\ud55c\ub2e4 YAPC\uc5d0\uc11c 2008\ub144\ubd80\ud130 TAP\uc744 \uc704\ud55c IETF \ud45c\uc900\uc744 \ub9cc\ub4dc\ub294 \ud504\ub85c\uc81d\ud2b8\ub97c \uc9c4\ud589\uc911\uc774\ub2e4 TAP format TAP Producer\ub294 \uc544\ub798\uc640 \uac19\uc740 \ud615\ud0dc\ub85c \ud14c\uc2a4\ud2b8 \uacb0\uacfc\ub97c \ucd9c\ub825\ud55c\ub2e4 1..48 ok 1 Description # Directive # Diagnostic .... ok 47 Description ok 48 Description 1..4 ok 1 - Input file opened not ok 2 - First line of the input valid. More output from test 2. There can be arbitrary number of lines for any output so long as there is at least some kind of whitespace at beginning of line. ok 3 - Read the rest of the file #TAP meta information not ok 4 - Summarized correctly MyTAP Testing C and C++ using MyTAP \ubc88\uc5ed/\uc758\uc5ed\uacfc \ubcf4\ucda9\uc124\uba85 italic style text\ub294 \uc544\uc9c1 \uc774\ud574\ud558\uc9c0 \ubabb\ud55c \ub0b4\uc6a9 Introduction Unit test - \uc2dc\uc2a4\ud15c\uc758 \uac1c\ubcc4\uc801\uc778 \uad6c\uc131 \uc694\uc18c(component)\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 \uc77c\ubc18\uc801\uc73c\ub85c \ud568\uc218, \ud074\ub798\uc2a4 \ub610\ub294 \uc791\uc740 \ub2e8\uc704\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \ucf54\ub4dc Functional test - \uc804\uccb4 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\uc758 \ud544\uc694\uc131 functional test\ub9cc \uc791\uc131\ud558\ub294 \uac83\ubcf4\ub2e4 \ube48\ud2c8\uc5c6\ub294 \ud14c\uc2a4\ud2b8\uac00 \uac00\ub2a5\ud558\ub2e4. \uac1c\ubc1c\uc790\uc758 \uc758\ub3c4\ub97c \ubc97\uc5b4\ub09c API \ud638\ucd9c\uc560 \ub300\ud574\uc11c\ub3c4 \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. \uc774\ub294 \uc804\uccb4 \uc2dc\uc2a4\ud15c\uc758 robustness\ub97c \ud5a5\uc0c1\uc2dc\ucf1c \uc720\uc9c0\ud558\uae30 \uc27d\uac8c \ub9cc\ub4e0\ub2e4 \uc2dc\uc2a4\ud15c\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc744\ub54c \uc6d0\uc778\uc774 \ub418\ub294 component\ub97c \uc27d\uac8c \ucc3e\uc744\uc218 \uc788\ub2e4. \uc774\ub294 \ucef4\ud30c\uc77c-\uc2e4\ud589-\ucf54\ub4dc \uc218\uc815\uc758 \uc8fc\uae30\ub97c \ub2e8\ucd95\ud55c\ub2e4 component\ub4e4\uc740 \ub450 \uac00\uc9c0 \uacbd\uc6b0\uc5d0 \ub300\ud574 \uc9c0\uc6d0\ud574\uc57c \ud55c\ub2e4. \uc2dc\uc2a4\ud15c\uc5d0 API\ub85c\uc11c \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0\uc640 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\uc774\ub2e4. \uc774\ub294 component\uac00 \uc77c\ubc18\uc801(generic)\uc774\uace0 \uacac\uace0\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uac00\uc9c0\ub3c4\ub85d \uc720\ub3c4\ud55c\ub2e4. \ub610\ud55c \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c component\ub97c \uac1c\ubc1c\ud558\ub3c4\ub85d \uc720\ub3c4\ud55c\ub2e4 \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \ucd94\uac00, api \uad6c\ud604 \ubcc0\uacbd \ub4f1\uc5d0 \ub300\ud55c \uc791\uc5c5 \ub09c\uc774\ub3c4\uc640 \ube44\uc6a9\uc744 \uc904\uc778\ub2e4. \ubaa8\ub4c8 A\uc5d0 \ub300\ud574 \ucf54\ub4dc\ub97c \uc218\uc815\ud560\ub54c\ub9c8\ub2e4 \ub2e4\ub978 \ubaa8\ub4c8\uc5d0 \ub300\ud55c side effect\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc740 \uc2dc\uac04\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc5b4\ub835\ub2e4. \ud558\uc9c0\ub9cc \ub2e8\uc704 \ud14c\uc2a4\ud2b8\uac00 \uc788\ub2e4\uba74 \ub2e8\uc21c\ud788 \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\uace0 \uacb0\uacfc\ub97c \ud655\uc778\ud558\ub294 \uac83\ub9cc\uc73c\ub85c \ubb38\uc81c\uac00 \uc5c6\uc74c\uc744 \ubcf4\uc7a5\ud560 \uc218 \uc788\ub2e4 functional test \uc608\uc2dc \ud2b8\ub79c\uc7ad\uc158\uc774 spec\uc744 \uc900\uc218\ud558\ub294\uac00? \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud558\uc5ec statement\ub97c \uc218\ud589\ud560\uc218 \uc788\ub294\uac00? unit test \uc608\uc2dc String \ud074\ub798\uc2a4\uac00 spec\uc5d0 \uba85\uc2dc\ub41c character set\ub4e4\uc744 \ucc98\ub9ac\ud560\uc218 \uc788\ub294\uac00? my_bitmap \uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc5f0\uc0b0\uc758 \uacb0\uacfc\uac00 \uc815\ud655\ud55c\uac00? Writing unit test \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\ub294 \uc774\uc720\ub294 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud558\ub294 \uc194\ub8e8\uc158\uc73c\ub85c \ucef4\ud3ec\ub10c\ud2b8 \uac1c\ubc1c\uc744 \uc9c4\ud589\ud558\uae30 \uc704\ud568\uc774\ub2e4. \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub294 \uc644\ubcbd( \ubaa8\ub4e0 \ucf00\uc774\uc2a4\ub97c \uace0\ub824 )\ud574\uc57c \ud558\uba70 \ucd5c\uc18c\ud55c \ub2e4\uc74c\uc758 \ub0b4\uc6a9\uc744 \ud3ec\ud568\ud574\uc57c \ud55c\ub2e4 Normal input Borderline cases Faulty input - \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \uc785\ub825\uac12\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 \uc608\ub97c \ub4e4\uc5b4 int foo(int *n) \ub77c\ub294 \ud568\uc218\ub97c \uad6c\ud604\ud588\uace0 \uc774 \ud568\uc218\uc5d0\ub294 NULL \uc774 \uc804\ub2ec\ub418\uba74 \uc548\ub420\ub54c, \uc774 \ud568\uc218\uc5d0 NULL \uc774 \uc804\ub2ec\ub418\uc5c8\ub354\ub77c\ub3c4 \ud504\ub85c\uadf8\ub7a8(\uc2dc\uc2a4\ud15c)\uc774 \ub2e4\uc6b4\ub418\ub294 \uac83\ubcf4\ub2e4 \uc801\uc808\ud55c \uc5d0\ub7ec\ub97c \ubc18\ud658\ud558\ub294\uac8c \ubc14\ub78c\uc9c1\ud558\ub2e4 \uadf8\ub807\ub2e4\uace0 \uc774 \ud568\uc218\uac00 \uc2e4\ud589\ub420\ub54c\ub9c8\ub2e4 \uc785\ub825\uac12\uc774 NULL \uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc740 \ucd94\uac00\uc801\uc778 cycle\uc744 \uc18c\ubaa8\ud558\uace0 \uc774 \ube44\uc6a9\uc774 \uc5bb\ub294 \uc774\ub4dd\ubcf4\ub2e4 \ud074 \uc218 \uc788\ub2e4 debug build\uc2dc\uc5d0\ub9cc \uc785\ub825\uac12\uc774 NULL \uc778 \uacbd\uc6b0 assert \uac00 \ud638\ucd9c\ub418\ub3c4\ub85d \uad6c\ud604\ud558\uc790 Error handling - \uba85\uc2dc\uc801\uc778 \uc5d0\ub7ec \uc0c1\ud669\uc5d0 \uc758\ub3c4\ub300\ub85c \ub3d9\uc791\ud558\ub294\uc9c0 \ud655\uc778 Bad environment - API\uac00 \uc2e4\ud589\ub418\ub294 \ud658\uacbd(e.g. OS, system call)\uc744 \uace0\ub824\ud55c \ud14c\uc2a4\ud2b8 system call\uc774 \uc2e4\ud328\ud558\ub354\ub77c\ub3c4 api\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub3d9\uc801 \uba54\ubaa8\ub9ac \uacf5\uac04\uc774 \ubd80\uc871\ud558\uac70\ub098 disk\uc758 \uacf5\uac04\uc774 \ubd80\uc871\ud55c \uacbd\uc6b0\uc774\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0\ub294 malloc \uacfc \uac19\uc740 \ud568\uc218\ub97c \ubc18\ub4dc\uc2dc \uc2e4\ud328\ud558\ub294 \ubc84\uc804\uc73c\ub85c \ub300\uccb4\ud558\uc5ec \uc9c4\ud589\ud560 \uc218 \uc788\ub2e4. \uc774 \ub54c \ub2e4\uc74c\uc758 \ub450 \uac00\uc9c0\ub97c \uba85\uc2ec\ud558\uc790 \ub300\uccb4 \ud568\uc218\ub294 \ubc18\ubcf5\uc801\uc73c\ub85c bad environment\ub97c \uc7ac\ud604\ud560 \uc218 \uc788\ub3c4\ub85d(deterministically) \uad6c\ud604\ud558\uc790 Make sure that it doesn't just fail immediately. The unit might have checks for the first case, but might actually fail some time in the near future. The basic structure of a test \uc720\ub2db \ud14c\uc2a4\ud2b8\ub294 plan, test, report \uad6c\uc870\uc774\ub2e4 Plan - \ud14c\uc2a4\ud2b8\uac00 \uba87 \uac1c \uc2e4\ud589\ub420\uc9c0 \ubbf8\ub9ac \uc54c\ub824\uc900\ub2e4. plan \ud568\uc218\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uc73c\uba74 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uac00 \uc885\ub8cc\ub41c \ud6c4\uc5d0 \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\uac00 \uc2e4\ud589\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 unit\uc744 \uac1c\ubc1c\ud558\ub294 \ub3d9\uc548 \ud14c\uc2a4\ud2b8\uac00 \uacc4\uc18d \ub354\ud574\uc9c8 \uacbd\uc6b0\uc5d0 \ub300\ud574\uc11c \uc758\ub3c4\ub41c \uac83\uc774\uba70 \ud574\ub2f9 unit\uc774 \ubc30\ud3ec\ub418\ub294 \uc2dc\uc810\uc5d0\ub294 plan \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc804\uc81c\ub85c \uad6c\ud604\ub418\uc5c8\ub2e4 Test - ok \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8\uc758 \uacb0\uacfc\ub97c \uc804\ub2ec\ud55c\ub2e4. \ud14c\uc2a4\ud2b8 \uacb0\uacfc\uac00 \ud45c\uc900 \ucd9c\ub825\uc73c\ub85c \ucd9c\ub825\ub418\uace0 \ucd9c\ub825\ub418\ub294 \ubb38\uc790\uc5f4\uc740 TAP format\uc744 \ub530\ub974\uae30 \ub54c\ubb38\uc5d0 TAP handling framework\uac00 \ud574\uc11d(parse)\ud560 \uc218 \uc788\ub2e4 Report - exit_status \ud568\uc218\ub294 main \ud568\uc218\uc5d0 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uc758 \uacb0\uacfc\ub97c (TAP producer)\ub85c \ubc18\ud658\ud55c\ub2e4. \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uac00 \uc131\uacf5\ud55c \uacbd\uc6b0 EXIT_SUCCESS , \ud558\ub098\ub77c\ub3c4 \uc2e4\ud328\ud55c \uacbd\uc6b0 \ub2e4\ub978 \uac12\uc744 \ubc18\ud658\ud55c\ub2e4 example code MariaDB \ud504\ub85c\uc81d\ud2b8\uc758 unittest \ub514\ub809\ud1a0\ub9ac\uc5d0 \uac01 \ubaa8\ub4c8\ubcc4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub4e4\uc774 \uc788\ub2e4 unittest/mysys/my_malloc-t.c mysys/my_malloc \ubaa8\ub4c8\uc5d0 \ub300\ud55c \ub2e8\uc704 \ud14c\uc2a4\ud2b8 /* Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved. This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; version 2 of the License. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1335 USA */ #include <my_global.h> #include <my_sys.h> #include \"tap.h\" int main(int argc __attribute__((unused)),char *argv[]) { void *p; MY_INIT(argv[0]); plan(4); /* * Borderline case\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 * \uc694\uccad\ud55c \uba54\ubaa8\ub9ac \ud06c\uae30\uac00 0\uc778 \uacbd\uc6b0\uc5d0\ub3c4 */ p= my_malloc(PSI_NOT_INSTRUMENTED, 0, MYF(0)); ok(p != NULL, \"Zero-sized block allocation.\"); /* Normal inpu test */ p= my_realloc(PSI_NOT_INSTRUMENTED, p, 32, MYF(0)); ok(p != NULL, \"Reallocated zero-sized block.\"); /* Normal inpu test */ p= my_realloc(PSI_NOT_INSTRUMENTED, p, 16, MYF(0)); ok(p != NULL, \"Trimmed block.\"); my_free(p); p= NULL; /* * my_free\uc5d0 NULL\uc774 \uc804\ub2ec\ub418\uba74 \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub2e4 * stdlib\uc758 free\ud568\uc218\ub3c4 NULL\uc774 \uc804\ub2ec\ub420 \uacbd\uc6b0 \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub2e4\uace0 \uba85\uc2dc\ud558\uace0 \uc788\ub2e4 */ ok((my_free(p), 1), \"Free NULL pointer.\"); my_end(0); return exit_status(); } my_malloc \ud568\uc218\ub294 \uc774\ub807\uac8c \uc0dd\uacbc\ub2e4 \uc694\uccad\ud55c \uba54\ubaa8\ub9ac\uc758 \ud06c\uae30\uac00 0\uc778 \uacbd\uc6b0 1\ub85c \uc124\uc815\ub41c\ub2e4 /** Allocate a sized block of memory. @param key Key to register instrumented memory @param size The size of the memory block in bytes. @param flags Failure action modifiers (bitmasks). @return A pointer to the allocated memory block, or NULL on failure. */ ATTRIBUTE_MALLOC void *my_malloc(PSI_memory_key key, size_t size, myf my_flags) { my_memory_header *mh; void *point; DBUG_ENTER(\"my_malloc\"); DBUG_PRINT(\"my\",(\"size: %zu flags: %lu\", size, my_flags)); compile_time_assert(sizeof(my_memory_header) <= HEADER_SIZE); if (!(my_flags & (MY_WME | MY_FAE))) my_flags|= my_global_flags; /* Safety */ if (!size) size=1; if (size > SIZE_T_MAX - 1024L*1024L*16L) /* Wrong call */ DBUG_RETURN(0); /* We have to align size as we store MY_THREAD_SPECIFIC flag in the LSB */ size= ALIGN_SIZE(size); if (DBUG_IF(\"simulate_out_of_memory\")) mh= NULL; else mh= (my_memory_header*) sf_malloc(size + HEADER_SIZE, my_flags); if (mh == NULL) { my_errno=errno; if (my_flags & MY_FAE) error_handler_hook=fatal_error_handler_hook; if (my_flags & (MY_FAE+MY_WME)) my_error(EE_OUTOFMEMORY, MYF(ME_BELL+ME_ERROR_LOG+ME_FATAL),size); if (my_flags & MY_FAE) abort(); point= NULL; } else { int flag= MY_TEST(my_flags & MY_THREAD_SPECIFIC); mh->m_size= size | flag; mh->m_key= PSI_CALL_memory_alloc(key, size, & mh->m_owner); if (update_malloc_size) { mh->m_size|=2; update_malloc_size(size + HEADER_SIZE, flag); } point= HEADER_TO_USER(mh); if (my_flags & MY_ZEROFILL) bzero(point, size); else TRASH_ALLOC(point, size); } DBUG_PRINT(\"exit\",(\"ptr: %p\", point)); DBUG_RETURN(point); } references [WIKIPEDIA] Test Anything Protocol TAP specification Testing C and C++ using MyTAP","title":"MyTAP"},{"location":"mariadb/tap-api/#mytap","text":"MyTAP\uc740 MySQL \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uad6c\ud604\ud558\uace0 \uc0ac\uc6a9\ud558\ub294 TAP \uad6c\ud604\uccb4\uc774\ub2e4","title":"MyTAP \ucf54\ub4dc\ubd84\uc11d"},{"location":"mariadb/tap-api/#tap-test-anything-protocol","text":"TAP producer\uc640 TAP consumer \uc0ac\uc774\uc758 \ud504\ub85c\ud1a0\ucf5c TAP producer - \ud14c\uc2a4\ud2b8 \ub85c\uc9c1. \ud2b9\uc815 \uae30\ub2a5\uc744 \uc704\ud574 \uc791\uc131\ub41c \ud14c\uc2a4\ud2b8\ub97c \uc758\ubbf8\ud55c\ub2e4 TAP consumer - \ud14c\uc2a4\ud2b8 \uacb0\uacfc\ub97c \ud30c\uc2f1\ud558\uc5ec \ud1b5\uacc4 \uc790\ub8cc \ub4f1\uc5d0 \ud65c\uc6a9. TAP harness\ub77c\uace0\ub3c4 \ud45c\ud604\ud55c\ub2e4 YAPC\uc5d0\uc11c 2008\ub144\ubd80\ud130 TAP\uc744 \uc704\ud55c IETF \ud45c\uc900\uc744 \ub9cc\ub4dc\ub294 \ud504\ub85c\uc81d\ud2b8\ub97c \uc9c4\ud589\uc911\uc774\ub2e4","title":"TAP (Test Anything Protocol)"},{"location":"mariadb/tap-api/#tap-format","text":"TAP Producer\ub294 \uc544\ub798\uc640 \uac19\uc740 \ud615\ud0dc\ub85c \ud14c\uc2a4\ud2b8 \uacb0\uacfc\ub97c \ucd9c\ub825\ud55c\ub2e4 1..48 ok 1 Description # Directive # Diagnostic .... ok 47 Description ok 48 Description 1..4 ok 1 - Input file opened not ok 2 - First line of the input valid. More output from test 2. There can be arbitrary number of lines for any output so long as there is at least some kind of whitespace at beginning of line. ok 3 - Read the rest of the file #TAP meta information not ok 4 - Summarized correctly","title":"TAP format"},{"location":"mariadb/tap-api/#mytap_1","text":"Testing C and C++ using MyTAP \ubc88\uc5ed/\uc758\uc5ed\uacfc \ubcf4\ucda9\uc124\uba85 italic style text\ub294 \uc544\uc9c1 \uc774\ud574\ud558\uc9c0 \ubabb\ud55c \ub0b4\uc6a9","title":"MyTAP"},{"location":"mariadb/tap-api/#introduction","text":"Unit test - \uc2dc\uc2a4\ud15c\uc758 \uac1c\ubcc4\uc801\uc778 \uad6c\uc131 \uc694\uc18c(component)\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 \uc77c\ubc18\uc801\uc73c\ub85c \ud568\uc218, \ud074\ub798\uc2a4 \ub610\ub294 \uc791\uc740 \ub2e8\uc704\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \ucf54\ub4dc Functional test - \uc804\uccb4 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\uc758 \ud544\uc694\uc131 functional test\ub9cc \uc791\uc131\ud558\ub294 \uac83\ubcf4\ub2e4 \ube48\ud2c8\uc5c6\ub294 \ud14c\uc2a4\ud2b8\uac00 \uac00\ub2a5\ud558\ub2e4. \uac1c\ubc1c\uc790\uc758 \uc758\ub3c4\ub97c \ubc97\uc5b4\ub09c API \ud638\ucd9c\uc560 \ub300\ud574\uc11c\ub3c4 \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. \uc774\ub294 \uc804\uccb4 \uc2dc\uc2a4\ud15c\uc758 robustness\ub97c \ud5a5\uc0c1\uc2dc\ucf1c \uc720\uc9c0\ud558\uae30 \uc27d\uac8c \ub9cc\ub4e0\ub2e4 \uc2dc\uc2a4\ud15c\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc744\ub54c \uc6d0\uc778\uc774 \ub418\ub294 component\ub97c \uc27d\uac8c \ucc3e\uc744\uc218 \uc788\ub2e4. \uc774\ub294 \ucef4\ud30c\uc77c-\uc2e4\ud589-\ucf54\ub4dc \uc218\uc815\uc758 \uc8fc\uae30\ub97c \ub2e8\ucd95\ud55c\ub2e4 component\ub4e4\uc740 \ub450 \uac00\uc9c0 \uacbd\uc6b0\uc5d0 \ub300\ud574 \uc9c0\uc6d0\ud574\uc57c \ud55c\ub2e4. \uc2dc\uc2a4\ud15c\uc5d0 API\ub85c\uc11c \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0\uc640 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\uc774\ub2e4. \uc774\ub294 component\uac00 \uc77c\ubc18\uc801(generic)\uc774\uace0 \uacac\uace0\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uac00\uc9c0\ub3c4\ub85d \uc720\ub3c4\ud55c\ub2e4. \ub610\ud55c \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c component\ub97c \uac1c\ubc1c\ud558\ub3c4\ub85d \uc720\ub3c4\ud55c\ub2e4 \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \ucd94\uac00, api \uad6c\ud604 \ubcc0\uacbd \ub4f1\uc5d0 \ub300\ud55c \uc791\uc5c5 \ub09c\uc774\ub3c4\uc640 \ube44\uc6a9\uc744 \uc904\uc778\ub2e4. \ubaa8\ub4c8 A\uc5d0 \ub300\ud574 \ucf54\ub4dc\ub97c \uc218\uc815\ud560\ub54c\ub9c8\ub2e4 \ub2e4\ub978 \ubaa8\ub4c8\uc5d0 \ub300\ud55c side effect\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc740 \uc2dc\uac04\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc5b4\ub835\ub2e4. \ud558\uc9c0\ub9cc \ub2e8\uc704 \ud14c\uc2a4\ud2b8\uac00 \uc788\ub2e4\uba74 \ub2e8\uc21c\ud788 \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\uace0 \uacb0\uacfc\ub97c \ud655\uc778\ud558\ub294 \uac83\ub9cc\uc73c\ub85c \ubb38\uc81c\uac00 \uc5c6\uc74c\uc744 \ubcf4\uc7a5\ud560 \uc218 \uc788\ub2e4 functional test \uc608\uc2dc \ud2b8\ub79c\uc7ad\uc158\uc774 spec\uc744 \uc900\uc218\ud558\ub294\uac00? \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud558\uc5ec statement\ub97c \uc218\ud589\ud560\uc218 \uc788\ub294\uac00? unit test \uc608\uc2dc String \ud074\ub798\uc2a4\uac00 spec\uc5d0 \uba85\uc2dc\ub41c character set\ub4e4\uc744 \ucc98\ub9ac\ud560\uc218 \uc788\ub294\uac00? my_bitmap \uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc5f0\uc0b0\uc758 \uacb0\uacfc\uac00 \uc815\ud655\ud55c\uac00?","title":"Introduction"},{"location":"mariadb/tap-api/#writing-unit-test","text":"\ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\ub294 \uc774\uc720\ub294 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud558\ub294 \uc194\ub8e8\uc158\uc73c\ub85c \ucef4\ud3ec\ub10c\ud2b8 \uac1c\ubc1c\uc744 \uc9c4\ud589\ud558\uae30 \uc704\ud568\uc774\ub2e4. \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub294 \uc644\ubcbd( \ubaa8\ub4e0 \ucf00\uc774\uc2a4\ub97c \uace0\ub824 )\ud574\uc57c \ud558\uba70 \ucd5c\uc18c\ud55c \ub2e4\uc74c\uc758 \ub0b4\uc6a9\uc744 \ud3ec\ud568\ud574\uc57c \ud55c\ub2e4 Normal input Borderline cases Faulty input - \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \uc785\ub825\uac12\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 \uc608\ub97c \ub4e4\uc5b4 int foo(int *n) \ub77c\ub294 \ud568\uc218\ub97c \uad6c\ud604\ud588\uace0 \uc774 \ud568\uc218\uc5d0\ub294 NULL \uc774 \uc804\ub2ec\ub418\uba74 \uc548\ub420\ub54c, \uc774 \ud568\uc218\uc5d0 NULL \uc774 \uc804\ub2ec\ub418\uc5c8\ub354\ub77c\ub3c4 \ud504\ub85c\uadf8\ub7a8(\uc2dc\uc2a4\ud15c)\uc774 \ub2e4\uc6b4\ub418\ub294 \uac83\ubcf4\ub2e4 \uc801\uc808\ud55c \uc5d0\ub7ec\ub97c \ubc18\ud658\ud558\ub294\uac8c \ubc14\ub78c\uc9c1\ud558\ub2e4 \uadf8\ub807\ub2e4\uace0 \uc774 \ud568\uc218\uac00 \uc2e4\ud589\ub420\ub54c\ub9c8\ub2e4 \uc785\ub825\uac12\uc774 NULL \uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc740 \ucd94\uac00\uc801\uc778 cycle\uc744 \uc18c\ubaa8\ud558\uace0 \uc774 \ube44\uc6a9\uc774 \uc5bb\ub294 \uc774\ub4dd\ubcf4\ub2e4 \ud074 \uc218 \uc788\ub2e4 debug build\uc2dc\uc5d0\ub9cc \uc785\ub825\uac12\uc774 NULL \uc778 \uacbd\uc6b0 assert \uac00 \ud638\ucd9c\ub418\ub3c4\ub85d \uad6c\ud604\ud558\uc790 Error handling - \uba85\uc2dc\uc801\uc778 \uc5d0\ub7ec \uc0c1\ud669\uc5d0 \uc758\ub3c4\ub300\ub85c \ub3d9\uc791\ud558\ub294\uc9c0 \ud655\uc778 Bad environment - API\uac00 \uc2e4\ud589\ub418\ub294 \ud658\uacbd(e.g. OS, system call)\uc744 \uace0\ub824\ud55c \ud14c\uc2a4\ud2b8 system call\uc774 \uc2e4\ud328\ud558\ub354\ub77c\ub3c4 api\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub3d9\uc801 \uba54\ubaa8\ub9ac \uacf5\uac04\uc774 \ubd80\uc871\ud558\uac70\ub098 disk\uc758 \uacf5\uac04\uc774 \ubd80\uc871\ud55c \uacbd\uc6b0\uc774\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0\ub294 malloc \uacfc \uac19\uc740 \ud568\uc218\ub97c \ubc18\ub4dc\uc2dc \uc2e4\ud328\ud558\ub294 \ubc84\uc804\uc73c\ub85c \ub300\uccb4\ud558\uc5ec \uc9c4\ud589\ud560 \uc218 \uc788\ub2e4. \uc774 \ub54c \ub2e4\uc74c\uc758 \ub450 \uac00\uc9c0\ub97c \uba85\uc2ec\ud558\uc790 \ub300\uccb4 \ud568\uc218\ub294 \ubc18\ubcf5\uc801\uc73c\ub85c bad environment\ub97c \uc7ac\ud604\ud560 \uc218 \uc788\ub3c4\ub85d(deterministically) \uad6c\ud604\ud558\uc790 Make sure that it doesn't just fail immediately. The unit might have checks for the first case, but might actually fail some time in the near future.","title":"Writing unit test"},{"location":"mariadb/tap-api/#the-basic-structure-of-a-test","text":"\uc720\ub2db \ud14c\uc2a4\ud2b8\ub294 plan, test, report \uad6c\uc870\uc774\ub2e4 Plan - \ud14c\uc2a4\ud2b8\uac00 \uba87 \uac1c \uc2e4\ud589\ub420\uc9c0 \ubbf8\ub9ac \uc54c\ub824\uc900\ub2e4. plan \ud568\uc218\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uc73c\uba74 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uac00 \uc885\ub8cc\ub41c \ud6c4\uc5d0 \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\uac00 \uc2e4\ud589\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 unit\uc744 \uac1c\ubc1c\ud558\ub294 \ub3d9\uc548 \ud14c\uc2a4\ud2b8\uac00 \uacc4\uc18d \ub354\ud574\uc9c8 \uacbd\uc6b0\uc5d0 \ub300\ud574\uc11c \uc758\ub3c4\ub41c \uac83\uc774\uba70 \ud574\ub2f9 unit\uc774 \ubc30\ud3ec\ub418\ub294 \uc2dc\uc810\uc5d0\ub294 plan \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc804\uc81c\ub85c \uad6c\ud604\ub418\uc5c8\ub2e4 Test - ok \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8\uc758 \uacb0\uacfc\ub97c \uc804\ub2ec\ud55c\ub2e4. \ud14c\uc2a4\ud2b8 \uacb0\uacfc\uac00 \ud45c\uc900 \ucd9c\ub825\uc73c\ub85c \ucd9c\ub825\ub418\uace0 \ucd9c\ub825\ub418\ub294 \ubb38\uc790\uc5f4\uc740 TAP format\uc744 \ub530\ub974\uae30 \ub54c\ubb38\uc5d0 TAP handling framework\uac00 \ud574\uc11d(parse)\ud560 \uc218 \uc788\ub2e4 Report - exit_status \ud568\uc218\ub294 main \ud568\uc218\uc5d0 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uc758 \uacb0\uacfc\ub97c (TAP producer)\ub85c \ubc18\ud658\ud55c\ub2e4. \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\uac00 \uc131\uacf5\ud55c \uacbd\uc6b0 EXIT_SUCCESS , \ud558\ub098\ub77c\ub3c4 \uc2e4\ud328\ud55c \uacbd\uc6b0 \ub2e4\ub978 \uac12\uc744 \ubc18\ud658\ud55c\ub2e4","title":"The basic structure of a test"},{"location":"mariadb/tap-api/#example-code","text":"MariaDB \ud504\ub85c\uc81d\ud2b8\uc758 unittest \ub514\ub809\ud1a0\ub9ac\uc5d0 \uac01 \ubaa8\ub4c8\ubcc4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub4e4\uc774 \uc788\ub2e4","title":"example code"},{"location":"mariadb/tap-api/#unittestmysysmy_malloc-tc","text":"mysys/my_malloc \ubaa8\ub4c8\uc5d0 \ub300\ud55c \ub2e8\uc704 \ud14c\uc2a4\ud2b8 /* Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved. This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; version 2 of the License. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1335 USA */ #include <my_global.h> #include <my_sys.h> #include \"tap.h\" int main(int argc __attribute__((unused)),char *argv[]) { void *p; MY_INIT(argv[0]); plan(4); /* * Borderline case\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8 * \uc694\uccad\ud55c \uba54\ubaa8\ub9ac \ud06c\uae30\uac00 0\uc778 \uacbd\uc6b0\uc5d0\ub3c4 */ p= my_malloc(PSI_NOT_INSTRUMENTED, 0, MYF(0)); ok(p != NULL, \"Zero-sized block allocation.\"); /* Normal inpu test */ p= my_realloc(PSI_NOT_INSTRUMENTED, p, 32, MYF(0)); ok(p != NULL, \"Reallocated zero-sized block.\"); /* Normal inpu test */ p= my_realloc(PSI_NOT_INSTRUMENTED, p, 16, MYF(0)); ok(p != NULL, \"Trimmed block.\"); my_free(p); p= NULL; /* * my_free\uc5d0 NULL\uc774 \uc804\ub2ec\ub418\uba74 \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub2e4 * stdlib\uc758 free\ud568\uc218\ub3c4 NULL\uc774 \uc804\ub2ec\ub420 \uacbd\uc6b0 \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub2e4\uace0 \uba85\uc2dc\ud558\uace0 \uc788\ub2e4 */ ok((my_free(p), 1), \"Free NULL pointer.\"); my_end(0); return exit_status(); } my_malloc \ud568\uc218\ub294 \uc774\ub807\uac8c \uc0dd\uacbc\ub2e4 \uc694\uccad\ud55c \uba54\ubaa8\ub9ac\uc758 \ud06c\uae30\uac00 0\uc778 \uacbd\uc6b0 1\ub85c \uc124\uc815\ub41c\ub2e4 /** Allocate a sized block of memory. @param key Key to register instrumented memory @param size The size of the memory block in bytes. @param flags Failure action modifiers (bitmasks). @return A pointer to the allocated memory block, or NULL on failure. */ ATTRIBUTE_MALLOC void *my_malloc(PSI_memory_key key, size_t size, myf my_flags) { my_memory_header *mh; void *point; DBUG_ENTER(\"my_malloc\"); DBUG_PRINT(\"my\",(\"size: %zu flags: %lu\", size, my_flags)); compile_time_assert(sizeof(my_memory_header) <= HEADER_SIZE); if (!(my_flags & (MY_WME | MY_FAE))) my_flags|= my_global_flags; /* Safety */ if (!size) size=1; if (size > SIZE_T_MAX - 1024L*1024L*16L) /* Wrong call */ DBUG_RETURN(0); /* We have to align size as we store MY_THREAD_SPECIFIC flag in the LSB */ size= ALIGN_SIZE(size); if (DBUG_IF(\"simulate_out_of_memory\")) mh= NULL; else mh= (my_memory_header*) sf_malloc(size + HEADER_SIZE, my_flags); if (mh == NULL) { my_errno=errno; if (my_flags & MY_FAE) error_handler_hook=fatal_error_handler_hook; if (my_flags & (MY_FAE+MY_WME)) my_error(EE_OUTOFMEMORY, MYF(ME_BELL+ME_ERROR_LOG+ME_FATAL),size); if (my_flags & MY_FAE) abort(); point= NULL; } else { int flag= MY_TEST(my_flags & MY_THREAD_SPECIFIC); mh->m_size= size | flag; mh->m_key= PSI_CALL_memory_alloc(key, size, & mh->m_owner); if (update_malloc_size) { mh->m_size|=2; update_malloc_size(size + HEADER_SIZE, flag); } point= HEADER_TO_USER(mh); if (my_flags & MY_ZEROFILL) bzero(point, size); else TRASH_ALLOC(point, size); } DBUG_PRINT(\"exit\",(\"ptr: %p\", point)); DBUG_RETURN(point); }","title":"unittest/mysys/my_malloc-t.c"},{"location":"mariadb/tap-api/#references","text":"[WIKIPEDIA] Test Anything Protocol TAP specification Testing C and C++ using MyTAP","title":"references"},{"location":"mariadb/test-framework/","text":"[MariaDB] \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c mariadb \ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\ub294 \uacfc\uc815 \ubd84\uc11d \ube4c\ub4dc mkdir build && cd build && cmake .. && cmake --build . --parallel 5 \ube4c\ub4dc \uacb0\uacfc\uac00 \uc800\uc7a5\ub420 \ub514\ub809\ud1a0\ub9ac build \uc0dd\uc131&\uc774\ub3d9 \ub530\ub85c \uc635\uc158\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ube4c\ub4dc\ub41c\ub2e4 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c ctest \uba85\ub839\uc5b4 \uc2e4\ud589 \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build/unittest/mysys/my_malloc-t \uc2e4\ud589 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c MariaDB\uc758 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ctest, cmake\ub97c \uac10\uc2f8\ub294 cmake \ub9e4\ud06c\ub85c\uc640 \ud568\uc218\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4 MY_ADD_TESTS(dynarray LINK_LIBRARYS mysys) cmake/ctest.cmake \uc5d0 \uc815\uc758\ub41c cmake \ub9e4\ud06c\ub85c dynarray-t.c \ud30c\uc77c\uc5d0 mytap \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9c1\ud06c\ud558\uc5ec dynarray-t \uc2e4\ud589\ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud55c\ub2e4 mytap : MariaDB\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud14c\uc2a4\ud2b8 \uc791\uc131\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5 unittest/examples/simple-t.c \uc5d0\uc11c \uc0ac\uc6a9\ubc95\uc744 \uc775\ud790 \uc218 \uc788\ub2e4 plan \ud568\uc218 : \uc774 \ud30c\uc77c\uc5d0\uc11c \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560\uc9c0 \ubbf8\ub9ac \uc120\uc5b8\ud55c\ub2e4 ok \ud568\uc218 : \uccab \ubc88\uc9f8 \uc778\uc790\ub85c 0\uc774 \uc804\ub2ec\ub418\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud328\ub97c \uc758\ubbf8\ud55c\ub2e4 \uc2e4\uc2b5 cmake\uc5d0\uac8c \ud14c\uc2a4\ud2b8 \ube4c\ub4dc \ubc29\ubc95 \uc804\ub2ec unittest/mysys/CMakeLists.txt \ud30c\uc77c \ud3b8\uc9d1 MY_ADD_TESTS \ub9e4\ud06c\ub85c\uc5d0 dynarray \ucd94\uac00 unittest/mysys/dynarray-t.c \ud30c\uc77c \uc0dd\uc131 #include <tap.h> #include <my_global.h> #include <my_sys.h> #include <stdio.h> struct _foo { int num; char str[64]; }; static unsigned int test_dynamic_increase(int size) { /* @given * \ucd08\uae30 \ud06c\uae30\uac00 size\uc774\uace0 element32\uac1c\ub9cc\ud07c\uc758 \uacf5\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub3d9\uc801 \ubc30\uc5f4 \uc0dd\uc131 */ unsigned int inc = 32; DYNAMIC_ARRAY array; // my_init_dynamic_array \ud568\uc218\ub294 \ud56d\uc0c1 FALSE\ub97c \ubc18\ud658\ud55c\ub2e4 my_init_dynamic_array(PSI_NOT_INSTRUMENTED, &array, sizeof(struct _foo), size, inc, MYF(0)); /* @when * size + 1\uac1c\uc758 \uc6d0\uc18c\ub97c \ubc30\uc5f4\uc5d0 \ucd94\uac00 */ unsigned int i; struct _foo foo; for (i = 0; i <= size; ++i) { foo.num = i; snprintf(foo.str, 64, \"sample string-%u\", i); /* @then * \uc6d0\uc18c \ucd94\uac00\uc5d0 \uc131\uacf5 */ if (insert_dynamic(&array, (const void *)&foo)) { diag(\"insert_dynamic failed\"); return TRUE; } } /* @then * capacity\uac00 size\uc5d0\uc11c inc\ub9cc\ud07c \uc99d\uac00\ud568 */ if (size + array.alloc_increment != array.max_element) { diag(\"actual: %u expected: %u\", array.max_element, size+array.alloc_increment); return TRUE; } /* * C/C++ \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \ud568\uc218\uac00 \uc131\uacf5\ud560 \uacbd\uc6b0 0\uc744 \ubc18\ud658\ud558\ub294 \uad00\ub840\ub97c \ub530\ub984 */ return FALSE; } int main() { unsigned int a,b; unsigned int failed; plan(1); diag(\"Testing DYNAMIC_ARRAY\"); failed = 0; for (a = 1 ; a < 200 ; ++a) if (test_dynamic_increase(a)) { ++failed; diag(\"Failed for test_dynamic_increase(%3u)\", a); } ok(failed == 0, \"test_dynamic_increase\"); return exit_status(); } \ube4c\ub4dc\ud55c \ub4a4 \uc804\uccb4 \uc2e4\ud589 \ub610\ub294 build/unittest/mysys/dynarray-t \uc2e4\ud589 \ucd9c\ucc98 Get the code, build it, test it Writing Good Test Cases for MariaDB Server","title":"\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#mariadb","text":"mariadb \ud504\ub85c\uc81d\ud2b8\uc758 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc2e4\ud589\ub418\ub294 \uacfc\uc815 \ubd84\uc11d","title":"[MariaDB] \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#_1","text":"mkdir build && cd build && cmake .. && cmake --build . --parallel 5 \ube4c\ub4dc \uacb0\uacfc\uac00 \uc800\uc7a5\ub420 \ub514\ub809\ud1a0\ub9ac build \uc0dd\uc131&\uc774\ub3d9 \ub530\ub85c \uc635\uc158\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub4e4\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ube4c\ub4dc\ub41c\ub2e4","title":"\ube4c\ub4dc"},{"location":"mariadb/test-framework/#_2","text":"\ubaa8\ub4e0 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c ctest \uba85\ub839\uc5b4 \uc2e4\ud589 \ud2b9\uc815 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 build/unittest/mysys/my_malloc-t \uc2e4\ud589","title":"\ud14c\uc2a4\ud2b8 \uc2e4\ud589"},{"location":"mariadb/test-framework/#_3","text":"MariaDB\uc758 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ctest, cmake\ub97c \uac10\uc2f8\ub294 cmake \ub9e4\ud06c\ub85c\uc640 \ud568\uc218\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4 MY_ADD_TESTS(dynarray LINK_LIBRARYS mysys) cmake/ctest.cmake \uc5d0 \uc815\uc758\ub41c cmake \ub9e4\ud06c\ub85c dynarray-t.c \ud30c\uc77c\uc5d0 mytap \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9c1\ud06c\ud558\uc5ec dynarray-t \uc2e4\ud589\ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \uaddc\uce59\uc744 \uc0dd\uc131\ud55c\ub2e4 mytap : MariaDB\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud14c\uc2a4\ud2b8 \uc791\uc131\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub4e4\uc744 \uc81c\uacf5 unittest/examples/simple-t.c \uc5d0\uc11c \uc0ac\uc6a9\ubc95\uc744 \uc775\ud790 \uc218 \uc788\ub2e4 plan \ud568\uc218 : \uc774 \ud30c\uc77c\uc5d0\uc11c \uba87 \uac1c\uc758 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560\uc9c0 \ubbf8\ub9ac \uc120\uc5b8\ud55c\ub2e4 ok \ud568\uc218 : \uccab \ubc88\uc9f8 \uc778\uc790\ub85c 0\uc774 \uc804\ub2ec\ub418\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud328\ub97c \uc758\ubbf8\ud55c\ub2e4","title":"\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"},{"location":"mariadb/test-framework/#_4","text":"cmake\uc5d0\uac8c \ud14c\uc2a4\ud2b8 \ube4c\ub4dc \ubc29\ubc95 \uc804\ub2ec unittest/mysys/CMakeLists.txt \ud30c\uc77c \ud3b8\uc9d1 MY_ADD_TESTS \ub9e4\ud06c\ub85c\uc5d0 dynarray \ucd94\uac00 unittest/mysys/dynarray-t.c \ud30c\uc77c \uc0dd\uc131 #include <tap.h> #include <my_global.h> #include <my_sys.h> #include <stdio.h> struct _foo { int num; char str[64]; }; static unsigned int test_dynamic_increase(int size) { /* @given * \ucd08\uae30 \ud06c\uae30\uac00 size\uc774\uace0 element32\uac1c\ub9cc\ud07c\uc758 \uacf5\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub3d9\uc801 \ubc30\uc5f4 \uc0dd\uc131 */ unsigned int inc = 32; DYNAMIC_ARRAY array; // my_init_dynamic_array \ud568\uc218\ub294 \ud56d\uc0c1 FALSE\ub97c \ubc18\ud658\ud55c\ub2e4 my_init_dynamic_array(PSI_NOT_INSTRUMENTED, &array, sizeof(struct _foo), size, inc, MYF(0)); /* @when * size + 1\uac1c\uc758 \uc6d0\uc18c\ub97c \ubc30\uc5f4\uc5d0 \ucd94\uac00 */ unsigned int i; struct _foo foo; for (i = 0; i <= size; ++i) { foo.num = i; snprintf(foo.str, 64, \"sample string-%u\", i); /* @then * \uc6d0\uc18c \ucd94\uac00\uc5d0 \uc131\uacf5 */ if (insert_dynamic(&array, (const void *)&foo)) { diag(\"insert_dynamic failed\"); return TRUE; } } /* @then * capacity\uac00 size\uc5d0\uc11c inc\ub9cc\ud07c \uc99d\uac00\ud568 */ if (size + array.alloc_increment != array.max_element) { diag(\"actual: %u expected: %u\", array.max_element, size+array.alloc_increment); return TRUE; } /* * C/C++ \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \ud568\uc218\uac00 \uc131\uacf5\ud560 \uacbd\uc6b0 0\uc744 \ubc18\ud658\ud558\ub294 \uad00\ub840\ub97c \ub530\ub984 */ return FALSE; } int main() { unsigned int a,b; unsigned int failed; plan(1); diag(\"Testing DYNAMIC_ARRAY\"); failed = 0; for (a = 1 ; a < 200 ; ++a) if (test_dynamic_increase(a)) { ++failed; diag(\"Failed for test_dynamic_increase(%3u)\", a); } ok(failed == 0, \"test_dynamic_increase\"); return exit_status(); } \ube4c\ub4dc\ud55c \ub4a4 \uc804\uccb4 \uc2e4\ud589 \ub610\ub294 build/unittest/mysys/dynarray-t \uc2e4\ud589","title":"\uc2e4\uc2b5"},{"location":"mariadb/test-framework/#_5","text":"Get the code, build it, test it Writing Good Test Cases for MariaDB Server","title":"\ucd9c\ucc98"},{"location":"note/memo/","text":"memo document.addEventListener(\"DOMContentLoaded\", function() { var toc = document.querySelector('div#toc-collapse'); if (toc) { toc.remove(); } });","title":"memo"},{"location":"note/memo/#memo","text":"document.addEventListener(\"DOMContentLoaded\", function() { var toc = document.querySelector('div#toc-collapse'); if (toc) { toc.remove(); } });","title":"memo"},{"location":"note/programming-principle/","text":"\ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59 \ubc18\uba74\uad50\uc0ac\ub97c \ud1b5\ud574 \ubc30\uc6b4 \ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59 \uc804\uc81c \ubd88\ud655\uc2e4\uc131(\uac1c\ubc1c\uc790\uac00 \uace0\ub824\ud558\uc9c0 \ubabb\ud55c \uc0c1\ud669)\uc740 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \uc2dc\uc2a4\ud15c\uc774 \uc544\ub2cc \uac1c\uc778\uc758 \ub2a5\ub825\uc5d0 \uc758\uc874\ud558\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc758 \uacbd\uc7c1\ub825\uc740 \uc624\ub798\uac00\uc9c0 \ubabb\ud55c\ub2e4 encapsulation \ud2b9\uc815 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 API\ub97c \uad6c\ud604\ud560 \ub54c\uc5d0\ub294 \uad6c\uccb4\uc801\uc778 \uc790\ub8cc\uad6c\uc870\ub294 \uc228\uaca8 \uc624\uc9c1 \ud568\uc218\ub85c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\ub3c4\ub85d \uc720\ub3c4\ud558\uc790 \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \ub0b4\ubd80 \ub370\uc774\ud130(\uad6c\uc870\uccb4 \ud544\ub4dc)\uc5d0 \uc811\uadfc\ud558\uba74 \uac1c\ubc1c\uc790\uc758 \uc758\ub3c4\uc640 \ub2e4\ub974\uac8c \uc0ac\uc6a9\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \ud568\uc218\ub97c \ud1b5\ud574\uc11c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\uba74 \ubd88\ud655\uc2e4\uc131\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \ud568\uc218(\uba54\ub274\uc5bc \ud3ec\ud568)\uc640 \uad6c\uc870\uccb4 \uc774\ub984\ub9cc \uc81c\uacf5\ud558\uc790 API \uc0ac\uc6a9\uc790\ub294 \uadf8 \uc774\uc0c1(\ud568\uc218\uc758 \uad6c\ud604)\uc740 \uc54c \ud544\uc694\ub3c4 \uc5c6\uace0 \ubd84\uc11d\ud558\ub294 \uac83\uc740 \uc2dc\uac04\ub0ad\ube44\ub2e4 \uacc4\uce35\ud654 \ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\ub97c \uacc4\uce35\ud654 \ud558\uc5ec \ubaa8\ub4e0 \uacc4\uce35\uc740 \ud55c \ub2e8\uacc4 \uc544\ub798 \uacc4\uce35\uc758 API\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \ucd94\uc0c1\ud654\ud558\uc790 \uae54\ub054\ud558\uac8c \ubaa8\ub4c8\ud654\uac00 \uac00\ub2a5\ud558\ub2e4 --> \ud14c\uc2a4\ud2b8 \uc791\uc131\uc774 \ud3b8\ud558\ub2e4 \uc790\uc8fc \uc0ac\uc6a9\ub420 \ubaa8\ub4c8(list, hashmap\uacfc \uac19\uc740 \uc790\ub8cc\uad6c\uc870)\uc744 \ud558\uc704 \uacc4\uce35\uc73c\ub85c \ubd84\ub9ac\ud558\uba74 \uc7ac\ud65c\uc6a9\uc131\uc774 \uc62c\ub77c\uac04\ub2e4 \uc2dc\uc2a4\ud15c(\ud558\ub4dc\uc6e8\uc5b4 \ub610\ub294 \uc6b4\uc601\uccb4\uc81c) \uc758\uc874\uc801\uc778 \ub9e4\ud06c\ub85c\ub294 \ud558\ub098\uc758 \uacc4\uce35\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc790 \ub9e4\ud06c\ub85c \ubd84\uae30\ub294 \ucf54\ub4dc \ubd84\uc11d\uc744 \uc5b4\ub835\uac8c \ub9cc\ub4e0\ub2e4 \uc2dc\uc2a4\ud15c \uc758\uc874\uc801\uc778 \ucf54\ub4dc\ub97c \ud55c \ubc88 \uac10\uc2f8\uba74 \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ud55c \ubc88 \uac10\uc2f8\uc11c \uc81c\uacf5\ud558\uc790 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uad6c\ud604\uc774 \ubc14\ub00c\uc5c8\uc744\ub54c \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \ud14c\uc2a4\ud2b8 \ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uc790 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uad6c\ud604\uc774 \ubcc0\uacbd\ub420 \uacbd\uc6b0 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud589\ub9cc\uc73c\ub85c \ubb38\uc81c\uac00 \uc5c6\uc74c\uc744 \ubcf4\uc7a5\ubc1b\uc744 \uc218 \uc788\ub2e4 \ucf54\ub4dc\ub97c \uc218\uc815\ud560\ub54c\ub9c8\ub2e4 side effect\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud558\ub2e4 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \ubcf4\uba74 \uac01 \ud568\uc218\uac00 \uc5b4\ub5a4 \uc77c\uc744 \ud558\ub294\uc9c0 \uc27d\uac8c \ud30c\uc545 \uac00\ub2a5\ud558\ub2e4 \ud568\uc218 \ud568\uc218\uac00 \ud558\ub294 \uc77c\uc740 \uc811\uc18d\uc0ac \uc5c6\uc774 \ud55c \ubb38\uc7a5\uc73c\ub85c \uc124\uba85\uc774 \uac00\ub2a5\ud560\ub54c\uae4c\uc9c0 \ubd84\ub9ac \ud568\uc218\uc758 \uc7ac\ud65c\uc6a9\uc131\uc774 \ub192\uc73c\uba74 \ubc84\uadf8 \uc218\uc815\uc5d0 \uc6a9\uc774\ud558\ub2e4 \uc904 \uc218\uac00 \ud06c\uace0 \ud558\ub294 \uc77c\uc774 \ub9ce\uc740 \ud568\uc218\ub294 \ubd84\uc11d\ud558\ub294\ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b0\ub2e4 --> \uc0c8\ub85c\uc6b4 \uc0ac\ub78c\uc774 \uc62c\ub54c\ub9c8\ub2e4 \uc124\uba85\ud574\uc8fc\ub294 \uc2dc\uac04\uc774 \uc544\uae5d\ub2e4 \ubc18\ud658\uac12\uc73c\ub85c \uc131\uacf5/\uc2e4\ud328 \uc5ec\ubd80\ub97c \ud45c\ud604\ud558\uace0 \uacb0\uacfc\uac12\uc740 [out] parameter\ub85c \uc804\ub2ec\ud558\uc790 \ubb34\ucc45\uc784\ud558\uac8c \ub09c\uc0ac\ud55c Throw\ub294 \ucf54\ub4dc\uc758 \ud750\ub984\uc744 \uc608\uc0c1\ud558\uae30 \ud798\ub4e4\uac8c \ub9cc\ub4e4\uace0 \uc774\ub7f0 \ubd88\ud655\uc2e4\uc131\uc774 \ubc84\uadf8\ub97c \uc720\ubc1c\ud55c\ub2e4 \uc608\ub97c \ub4e4\uba74 \uc5b4\ub5a4 \ubcc0\uc218\uac00 \ud574\uc81c\ub418\uc5c8\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 SIGSEGV\uc758 \ubc1c\uc0dd \uc704\ud5d8\uc131\uc744 \ub192\uc778\ub2e4 \uc131\uacf5\ud558\uba74 0\uc744 \ubc18\ud658\ud558\uace0 \uc2e4\ud328\ud558\uba74 1\uc744 \ubc18\ud658\ud558\ub294 \ud615\ud0dc\ub294 C/C++ \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c\ub294 \uc77c\ubc18\uc801\uc778 \uad00\uc2b5\uc774\ub2e4(e.g. pthread, unix system call \ub4f1) \uc774\ub984\uc5d0 \uc904\uc784\ub9d0\uc744 \uc4f0\uc9c0 \ub9d0\uace0 \ubb38\uc7a5\ucc98\ub7fc \ud480\uc5b4\uc11c \uc4f0\uc790 \ub3d9\uc0ac\uac00 \uc5c6\uc774 \uba85\uc0ac\ub9cc \uc788\ub294 \ud568\uc218 \uc774\ub984\uc740 \uc774\ub984\ub9cc\uc73c\ub85c \uae30\ub2a5\uc744 \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4 \uc904\uc784\ub9d0\uc740 \uc6d0\ub798 \ub2e8\uc5b4\ub97c \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4. \uadf8\ub9ac\uace0 \uc790\ub3d9\uc644\uc131 \uae30\ub2a5\uc774 \uc788\ub294\ub370 \uadc0\ucc2e\ub2e4\uace0 \uc904\uc784\ub9d0\uc744 \uc4f0\ub294\uac74 \ub9d0\uc774 \uc548\ub41c\ub2e4","title":"\ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59"},{"location":"note/programming-principle/#_1","text":"\ubc18\uba74\uad50\uc0ac\ub97c \ud1b5\ud574 \ubc30\uc6b4 \ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59","title":"\ud504\ub85c\uadf8\ub798\ubc0d \uc6d0\uce59"},{"location":"note/programming-principle/#_2","text":"\ubd88\ud655\uc2e4\uc131(\uac1c\ubc1c\uc790\uac00 \uace0\ub824\ud558\uc9c0 \ubabb\ud55c \uc0c1\ud669)\uc740 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \uc2dc\uc2a4\ud15c\uc774 \uc544\ub2cc \uac1c\uc778\uc758 \ub2a5\ub825\uc5d0 \uc758\uc874\ud558\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc758 \uacbd\uc7c1\ub825\uc740 \uc624\ub798\uac00\uc9c0 \ubabb\ud55c\ub2e4","title":"\uc804\uc81c"},{"location":"note/programming-principle/#encapsulation","text":"\ud2b9\uc815 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 API\ub97c \uad6c\ud604\ud560 \ub54c\uc5d0\ub294 \uad6c\uccb4\uc801\uc778 \uc790\ub8cc\uad6c\uc870\ub294 \uc228\uaca8 \uc624\uc9c1 \ud568\uc218\ub85c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\ub3c4\ub85d \uc720\ub3c4\ud558\uc790 \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \ub0b4\ubd80 \ub370\uc774\ud130(\uad6c\uc870\uccb4 \ud544\ub4dc)\uc5d0 \uc811\uadfc\ud558\uba74 \uac1c\ubc1c\uc790\uc758 \uc758\ub3c4\uc640 \ub2e4\ub974\uac8c \uc0ac\uc6a9\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \ubc84\uadf8\uc758 \uc6d0\uc778\uc774 \ub41c\ub2e4 \ud568\uc218\ub97c \ud1b5\ud574\uc11c\ub9cc \ub0b4\ubd80 \ub370\uc774\ud130\ub97c \uc870\uc791\ud558\uba74 \ubd88\ud655\uc2e4\uc131\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \ud568\uc218(\uba54\ub274\uc5bc \ud3ec\ud568)\uc640 \uad6c\uc870\uccb4 \uc774\ub984\ub9cc \uc81c\uacf5\ud558\uc790 API \uc0ac\uc6a9\uc790\ub294 \uadf8 \uc774\uc0c1(\ud568\uc218\uc758 \uad6c\ud604)\uc740 \uc54c \ud544\uc694\ub3c4 \uc5c6\uace0 \ubd84\uc11d\ud558\ub294 \uac83\uc740 \uc2dc\uac04\ub0ad\ube44\ub2e4","title":"encapsulation"},{"location":"note/programming-principle/#_3","text":"\ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\ub97c \uacc4\uce35\ud654 \ud558\uc5ec \ubaa8\ub4e0 \uacc4\uce35\uc740 \ud55c \ub2e8\uacc4 \uc544\ub798 \uacc4\uce35\uc758 API\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \ucd94\uc0c1\ud654\ud558\uc790 \uae54\ub054\ud558\uac8c \ubaa8\ub4c8\ud654\uac00 \uac00\ub2a5\ud558\ub2e4 --> \ud14c\uc2a4\ud2b8 \uc791\uc131\uc774 \ud3b8\ud558\ub2e4 \uc790\uc8fc \uc0ac\uc6a9\ub420 \ubaa8\ub4c8(list, hashmap\uacfc \uac19\uc740 \uc790\ub8cc\uad6c\uc870)\uc744 \ud558\uc704 \uacc4\uce35\uc73c\ub85c \ubd84\ub9ac\ud558\uba74 \uc7ac\ud65c\uc6a9\uc131\uc774 \uc62c\ub77c\uac04\ub2e4 \uc2dc\uc2a4\ud15c(\ud558\ub4dc\uc6e8\uc5b4 \ub610\ub294 \uc6b4\uc601\uccb4\uc81c) \uc758\uc874\uc801\uc778 \ub9e4\ud06c\ub85c\ub294 \ud558\ub098\uc758 \uacc4\uce35\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\uc790 \ub9e4\ud06c\ub85c \ubd84\uae30\ub294 \ucf54\ub4dc \ubd84\uc11d\uc744 \uc5b4\ub835\uac8c \ub9cc\ub4e0\ub2e4 \uc2dc\uc2a4\ud15c \uc758\uc874\uc801\uc778 \ucf54\ub4dc\ub97c \ud55c \ubc88 \uac10\uc2f8\uba74 \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ud55c \ubc88 \uac10\uc2f8\uc11c \uc81c\uacf5\ud558\uc790 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uad6c\ud604\uc774 \ubc14\ub00c\uc5c8\uc744\ub54c \ucf54\ub4dc\uc758 \uc218\uc815\ub7c9\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\ub2e4","title":"\uacc4\uce35\ud654"},{"location":"note/programming-principle/#_4","text":"\ub2e8\uc704 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uc790 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uad6c\ud604\uc774 \ubcc0\uacbd\ub420 \uacbd\uc6b0 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc788\uc73c\uba74 \ud14c\uc2a4\ud2b8 \uc2e4\ud589\ub9cc\uc73c\ub85c \ubb38\uc81c\uac00 \uc5c6\uc74c\uc744 \ubcf4\uc7a5\ubc1b\uc744 \uc218 \uc788\ub2e4 \ucf54\ub4dc\ub97c \uc218\uc815\ud560\ub54c\ub9c8\ub2e4 side effect\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc740 \ubd88\uac00\ub2a5\ud558\ub2e4 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \ubcf4\uba74 \uac01 \ud568\uc218\uac00 \uc5b4\ub5a4 \uc77c\uc744 \ud558\ub294\uc9c0 \uc27d\uac8c \ud30c\uc545 \uac00\ub2a5\ud558\ub2e4","title":"\ud14c\uc2a4\ud2b8"},{"location":"note/programming-principle/#_5","text":"\ud568\uc218\uac00 \ud558\ub294 \uc77c\uc740 \uc811\uc18d\uc0ac \uc5c6\uc774 \ud55c \ubb38\uc7a5\uc73c\ub85c \uc124\uba85\uc774 \uac00\ub2a5\ud560\ub54c\uae4c\uc9c0 \ubd84\ub9ac \ud568\uc218\uc758 \uc7ac\ud65c\uc6a9\uc131\uc774 \ub192\uc73c\uba74 \ubc84\uadf8 \uc218\uc815\uc5d0 \uc6a9\uc774\ud558\ub2e4 \uc904 \uc218\uac00 \ud06c\uace0 \ud558\ub294 \uc77c\uc774 \ub9ce\uc740 \ud568\uc218\ub294 \ubd84\uc11d\ud558\ub294\ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b0\ub2e4 --> \uc0c8\ub85c\uc6b4 \uc0ac\ub78c\uc774 \uc62c\ub54c\ub9c8\ub2e4 \uc124\uba85\ud574\uc8fc\ub294 \uc2dc\uac04\uc774 \uc544\uae5d\ub2e4 \ubc18\ud658\uac12\uc73c\ub85c \uc131\uacf5/\uc2e4\ud328 \uc5ec\ubd80\ub97c \ud45c\ud604\ud558\uace0 \uacb0\uacfc\uac12\uc740 [out] parameter\ub85c \uc804\ub2ec\ud558\uc790 \ubb34\ucc45\uc784\ud558\uac8c \ub09c\uc0ac\ud55c Throw\ub294 \ucf54\ub4dc\uc758 \ud750\ub984\uc744 \uc608\uc0c1\ud558\uae30 \ud798\ub4e4\uac8c \ub9cc\ub4e4\uace0 \uc774\ub7f0 \ubd88\ud655\uc2e4\uc131\uc774 \ubc84\uadf8\ub97c \uc720\ubc1c\ud55c\ub2e4 \uc608\ub97c \ub4e4\uba74 \uc5b4\ub5a4 \ubcc0\uc218\uac00 \ud574\uc81c\ub418\uc5c8\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 SIGSEGV\uc758 \ubc1c\uc0dd \uc704\ud5d8\uc131\uc744 \ub192\uc778\ub2e4 \uc131\uacf5\ud558\uba74 0\uc744 \ubc18\ud658\ud558\uace0 \uc2e4\ud328\ud558\uba74 1\uc744 \ubc18\ud658\ud558\ub294 \ud615\ud0dc\ub294 C/C++ \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c\ub294 \uc77c\ubc18\uc801\uc778 \uad00\uc2b5\uc774\ub2e4(e.g. pthread, unix system call \ub4f1) \uc774\ub984\uc5d0 \uc904\uc784\ub9d0\uc744 \uc4f0\uc9c0 \ub9d0\uace0 \ubb38\uc7a5\ucc98\ub7fc \ud480\uc5b4\uc11c \uc4f0\uc790 \ub3d9\uc0ac\uac00 \uc5c6\uc774 \uba85\uc0ac\ub9cc \uc788\ub294 \ud568\uc218 \uc774\ub984\uc740 \uc774\ub984\ub9cc\uc73c\ub85c \uae30\ub2a5\uc744 \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4 \uc904\uc784\ub9d0\uc740 \uc6d0\ub798 \ub2e8\uc5b4\ub97c \uc720\ucd94\ud558\uae30 \ud798\ub4e4\ub2e4. \uadf8\ub9ac\uace0 \uc790\ub3d9\uc644\uc131 \uae30\ub2a5\uc774 \uc788\ub294\ub370 \uadc0\ucc2e\ub2e4\uace0 \uc904\uc784\ub9d0\uc744 \uc4f0\ub294\uac74 \ub9d0\uc774 \uc548\ub41c\ub2e4","title":"\ud568\uc218"},{"location":"postgresql/ilist-api/","text":"[PostgreSQL] ilist API PostgreSQL\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 intgrated/inline \ub9ac\uc2a4\ud2b8 API \ubd84\uc11d \uc694\uc57d \ud2b9\uc815 \uac1d\uccb4\uac00 \ub9ac\uc2a4\ud2b8\ub97c \uad6c\uc131\ud560 \uac83\uc774 \uc774\ubbf8 \uacb0\uc815\ub41c \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4 List link\ub4e4\uc740 \uac1d\uccb4\ub4e4\uc5d0 \uc9c1\uc811\uc801\uc73c\ub85c \uc0bd\uc785 \ub418\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub3c4\uc758 \uba54\ubaa8\ub9ac \uacf5\uac04 \uad00\ub9ac\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\ub2e4 \uc8fc\uc5b4\uc9c4 \uac1d\uccb4\ub4e4(List link\uac00 \uc0bd\uc785\ub41c) \uc911 \uc18c\uc218\ub9cc \ud558\ub098\uc758 \ub9ac\uc2a4\ud2b8(a list)\uc5d0 \ud3ec\ud568\ub420 \uacbd\uc6b0 \ub9ac\uc2a4\ud2b8\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\ub4e4\uc758 List link\ub294 \ub0ad\ube44\ub41c\ub2e4 \uc77c\ubc18\uc801\uc73c\ub85c, \uc774 \ubc29\ubc95\uc740 \ubcc4\ub3c4\uc758 list node\ub4e4\uc744 \ud560\ub2f9\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uba54\ubaa8\ub9ac\ub97c \uc808\uc57d\ud560 \uc218 \uc788\ub2e4 Link Linked list\uac00 \uc544\ub2c8\ub77c List link\uc774\ub2e4. \uac1d\uccb4\ub4e4\uc5d0 link\ub97c \ubd80\ucc29\ud558\ub294 \ub290\ub08c\uc774\ub2e4. List\uac00 \uc544\ub2c8\ub77c Link\uac00 \uba54\uc778\uc774\ub2e4 doubly-linked list doubly-linked list\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\ub2e4 dlist_head - dlist_node\ub4e4\uc774 \uc5f0\uacb0\ub41c \ub9ac\uc2a4\ud2b8\uc758 head\ub97c \uac00\ub9ac\ud0a8\ub2e4 dlist \uc811\ub450\uc5b4\uac00 \ubd99\uc740 \ud568\uc218\ub4e4\ub85c \uc870\uc791\ud55c\ub2e4 dclist_head - \ub9ac\uc2a4\ud2b8\uc758 head\ub97c \uac00\ub9ac\ud0a4\uace0 \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\uc758 node \uac1c\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 count \ud544\ub4dc\ub97c \uac00\uc9c4\ub2e4 dclist \uc811\ub450\uc5b4\uac00 \ubd99\uc740 \ud568\uc218\ub4e4\ub85c \uc870\uc791\ud55c\ub2e4 dlist\uc640 dclist\ub294 node\uc640 iterator type\uc744 \uacf5\uc720\ud55c\ub2e4 API\uc758 \ud2b9\uc9d5 doubly-linked list api\ub294 \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\uc9c0 \uc54a\ub294\ub2e4 \uc678\ubd80\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \uba54\ubaa8\ub9ac\ub97c \uc0ac\uc6a9\ud560 \ubfd0\uc774\ub2e4 doubly-linked count list API\ub4e4\uc740 \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\uc758 \uc6d0\uc18c \uac1c\uc218\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \uc81c\uacf5\ud55c\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uba74 singly linked list\uc640 doubly linked list\uc758 API\ub294 \ub3d9\uc77c\ud558\ub2e4 \ube48 \ub9ac\uc2a4\ud2b8 \ubaa8\ub4e0 \ub9ac\uc2a4\ud2b8(node\uac00 \uc5c6\ub294 \ub9ac\uc2a4\ud2b8 \ud3ec\ud568)\ub294 list header\ub97c \uac00\uc9c4\ub2e4 an empty singly-linked list\ub294 header\uc5d0 NULL pointer\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\ub2e4 \ub450 \uac00\uc9c0 doubly-linked list\uc5d0\uc11c \ube44\uc5b4\uc788\ub294 \ub9ac\uc2a4\ud2b8\ub97c \ud45c\ud604\ud558\ub294 \ubc29\ubc95\uc740 \ub450 \uac00\uc9c0\uc774\ub2e4 head\uc758 next \ud3ec\uc778\ud130\uac00 NULL\uc744 \uac00\ub9ac\ud0a8\ub2e4. \uc774 \ubc29\ubc95\uc740 \ud3b8\ub9ac\uc131 \ub54c\ubb38\uc5d0 list\ub97c \ucd08\uae30\ud654\ud560 \ub54c \uc8fc\ub85c \uc0ac\uc6a9\ud55c\ub2e4 head\uc758 next\uc640 prev \ud3ec\uc778\ud130\uac00 \ub2e4\uc2dc head\ub97c \uac00\ub9ac\ud0ac \uc218\ub3c4 \uc788\ub2e4. dlist\uc758 \ubaa8\ub4e0 \uc6d0\uc18c\ub4e4\uc774 \uc0ad\uc81c\ub418\uba74 \uc774\ub7f0 circular state\uac00 \ub41c\ub2e4. \uc774\ub7f0 circular dlist\ub97c \ucd94\ucc9c\ud55c\ub2e4. \ubd84\uae30\ub97c \ud0c0\uc9c0 \uc54a\uace0 \uc2e4\ud589 \ud560 \uc218 \uc788\ub2e4 operation\uc774 \uc788\uc5b4\uc11c \uc2e4\ud589\uc18d\ub3c4\uac00 \ube60\ub974\uae30 \ub54c\ubb38\uc774\ub2e4 examples \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ub41c \ud14c\uc774\ube14\ub4e4\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uace0 \uc2f6\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 list\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4 #include \"lib/ilist.h\" // list header\ub97c \ud3ec\ud568\ud558\ub294 database \uad6c\uc870\uccb4 \uc120\uc5b8. // \uc5ec\uae30\uc5d0 \ud3ec\ud568\ub41c list header\ub294 \ub9ac\uc2a4\ud2b8\uc758 \ub178\ub4dc\ub4e4\uc5d0 \uc811\uadfc\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub41c\ub2e4. typedef struct my_database { char *datname; dlist_head tables; // ... } my_database; // table\uc744 \ud45c\ud604\ud558\ub294 \uad6c\uc870\uccb4 \uc120\uc5b8. // \uac01 list_node\uc5d0\ub294 prev/next list link\uac00 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4. // \uc774 list_node\ub4e4\uc740 \ub9ac\uc2a4\ud2b8\uc758 \ucc98\uc74c\uc5d0 \uc704\uce58\ud560 \uc218 \uc5c6\ub2e4. typedef struct my_table { char *tablename; dlist_node list_node; perm_t permissions; // ... } my_table; // database \uad6c\uc870\uccb4 \uc0dd\uc131(list header) my_database *db = create_database(); // table list\uc5d0 table\uc744 \ucd94\uac00 dlist_push_head(&db->tables, &create_table(db, \"a\")->list_node); // ... dlist_push_head(&db->tables, &create_table(db, \"b\")->list_node); // \ub2e8\uc21c iterator element\uc640 looping construct. // `iter.cur`\ub294 `dlist_node`\uc778\uc2a4\ud134\uc2a4\ub97c \uac00\ub9ac\ud0a8\ub2e4. `dlist_container`\ub97c \uc0ac\uc6a9\ud558\uba74 list link\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \uac1d\uccb4\uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud558\ub2e4. dlist_iter iter; dlist_foreach(iter, &db->tables) { my_table *tbl = dlist_container(my_table, list_node, iter.cur); printf(\"we have a table: %s in database %s\\n\", tbl->tablename, db->datname); } // \uc21c\ud68c\uc640 \ub3d9\uc2dc\uc5d0 \ud574\ub2f9 \uc6d0\uc18c\ub97c \uc870\uc791\ud560\uc218 \uc788\ub294 iterator element\uc640 looping construct. // \ud2b9\uc815 \uc870\uac74\uc744 \ub9cc\uc871\ud558\ub294 \ud14c\uc774\ube14\uc744 \uc0ad\uc81c\ud558\ub294 \ubc29\ubc95\uc740 \uc544\ub798\uc640 \uac19\ub2e4. dlist_mutable_iter miter; dlist_foreach_modify(miter, &db->tables) { my_table *tbl = dlist_container(my_table, list_node, miter.cur); if (!tbl->to_be_deleted) continue; // don't touch this one // \ud2b9\uc815 table\uc744 \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc81c\uac70(unlink) dlist_delete(miter.cur); // list link API\ub294 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc5d0\ub294 \uad00\uc5ec\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 list\uc5d0\uc11c unlik\ub418\uc5b4\ub3c4 \uc5ec\uc804\ud788 \ud574\ub2f9 \uc6d0\uc18c\uc5d0\ub294 \uc811\uadfc \uac00\ub2a5\ud558\ub2e4 drop_table(db, tbl); } API src/include/lib/ilist.h slist_head \ub294 \uc65c typdef slist_head slist_node \ub85c \uad6c\ud604\ud558\uc9c0 \uc54a\uace0 \ud544\ub4dc\uac00 \ud558\ub098\uc9dc\ub9ac\uc778 \uad6c\uc870\uccb4\ub97c \uad73\uc774 \ub9cc\ub4e0\uac78\uae4c? /* * doubly linked list\ub97c \ub9cc\ub4dc\ub294 list link \uad6c\uc870\uccb4 * node \ub77c\ub294 \ud45c\ud604\ubcf4\ub2e4\ub294 link(\uace0\ub9ac)\ub77c\ub294 \ud45c\ud604\uc774 \uc801\uc808\ud55c\uac70\uac19\ub2e4 */ typedef struct dlist_node dlist_node; struct dlist_node { dlist_node *prev; dlist_node *next; }; /* * Head of a doubly linked list. * * \ube44\uc5b4\uc788\uc9c0 \uc54a\uc740 \ub9ac\uc2a4\ud2b8\ub294 \ub0b4\ubd80\uc801\uc73c\ub85c \uc21c\ud658 \uad6c\uc870(circularly linked)\uc774\ub2e4. * \uc774\ub7f0 \uad6c\uc870\uc758 \uc7a5\uc810\uc740 \uc77c\ubc18\uc801\uc778 \ub9ac\uc2a4\ud2b8 \uc870\uc791 \uacfc\uc815\uc5d0 \ubd84\uae30\uac00 \ud544\uc694 \uc5c6\ub2e4\ub294 \uac83\uc774\ub2e4. * \ube48 \ub9ac\uc2a4\ud2b8\ub294 \uac04\ub2e8\ud558\uac8c head\uc758 prev\uc640 next\ub97c NULL\ub85c \ucd08\uae30\ud654\ud560 \uc218 \uc788\ub2e4. */ typedef struct dlist_head { /* * head.next\ub294 \ub9ac\uc2a4\ud2b8\uc758 \uccab \ubc88\uc9f8 \uc6d0\uc18c\ub97c \uac00\ub9ac\ud0a4\uac70\ub098, * circular empty list\ub77c\uba74 &head\ub97c \uc800\uc7a5\ud55c\ub2e4. * emtpy and not circular list\ub77c\uba74 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4. * * head.prev\ub294 \ub9ac\uc2a4\ud2b8\uc758 \ub9c8\uc9c0\ub9c9 \uc6d0\uc18c\ub97c \uac00\ub9ac\ud0a4\uac70\ub098, * circular empty list\ub77c\uba74 &head\ub97c \uc800\uc7a5\ud55c\ub2e4. * emtpy and not circular list\ub77c\uba74 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4. */ dlist_node head; } dlist_head; /* * dlist_head\uc640 dclist_head\ub97c \uc704\ud55c iterator type. * * dlist_foreach(), dlist_reverse_foreach(), dclist \ubcc0\ud615\uc5d0\uc11c \uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b4\uae30 * \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4. * * \ubc18\ubcf5(iteration)\uc5d0\uc11c \ud604\uc7ac \uc6d0\uc18c\uc5d0 \uc811\uadfc\ud558\uace0\uc2f6\uc744 \ub54c\uc5d0\ub294 cur \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4. * * \uc774 iterator\ub97c \uc0ac\uc6a9\ud574\uc11c \ub9ac\uc2a4\ud2b8\ub97c \ubcc0\ud615\ud558\ub294 \uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. * * \ucc38\uace0: dlist_foreach(), dclist_foreach() \ub9e4\ud06c\ub85c\uc5d0\uc11c \uc778\uc790\ub4e4\uc744 \uc5ec\ub7ec \ubc88 \uacc4\uc0b0\ud558\ub294 \uac83\uc744 \ub9c9\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 end \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. */ typedef struct dlist_iter { dlist_node *cur; /* current element */ dlist_node *end; /* last node we'll iterate to */ } dlist_iter; /* * \ubc18\ubcf5 \uacfc\uc815\uc5d0\uc11c \ub9ac\uc2a4\ud2b8(dclist_head, dlist_head)\uc5d0 \ub300\ud55c \ubcc0\ud615\uc744 \ud5c8\uc6a9\ud558\ub294 doubly linked list iterator \ud0c0\uc785. * * dlist_foreach_modify(), dclist_foreach_modify()\uc5d0\uc11c \uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b8\ub2e4. * * \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \ud604\uc7ac \uc6d0\uc18c\ub97c \uc81c\uac70\ud558\ub294 \uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0\ub9cc, \uc0c8\ub85c\uc6b4 \uc6d0\uc18c\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc778\uc811 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294\uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. * * \ucc38\uace0: \ubcc0\ud615 \uac00\ub2a5\ud55c \uc21c\ud68c(iteration)\ub97c \uc704\ud574\uc11c\ub294 \ud604\uc7ac \ub178\ub4dc\uc758 \ub2e4\uc74c \ub178\ub4dc\ub97c \uc800\uc7a5\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub3c4\uc758 iterator type\uc774 \ud544\uc694\ud558\ub2e4. */ typedef struct dlist_mutable_iter { dlist_node *cur; /* current element */ dlist_node *next; /* next node we'll iterate to */ dlist_node *end; /* last node we'll iterate to */ } dlist_mutable_iter; /* * doubly linked list\uc758 \uc6d0\uc18c \uac1c\uc218\ub97c \uc800\uc7a5\ud558\ub294 head. * * \ub0b4\ubd80\uc801\uc73c\ub85c dlist\ub97c \uc0ac\uc6a9\ud558\uace0 \uc6d0\uc18c\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc0ad\uc81c\ud560 \ub54c\ub9c8\ub2e4 count\ub97c \uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4. */ typedef struct dclist_head { dlist_head dlist; uint32 count; } dclist_head; /* * singly linked list\uc758 \ub178\ub4dc(\uace0\ub9ac). * * singly linked list\ub97c \uad6c\uc131\ud560 \uac1d\uccb4\uc5d0 \uc774 \uad6c\uc870\uccb4\ub97c \uc0bd\uc785\ud574\uc11c \uc0ac\uc6a9\ud55c\ub2e4. */ typedef struct slist_node slist_node; struct slist_node { slist_node *next; }; /* * singly linked list\uc758 head. * * \uc21c\ud658\uc801\uc73c\ub85c \uc5f0\uacb0\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ub9ac\uc2a4\ud2b8\uac00 \ube44\uc5b4 \uc788\ub294 \uacbd\uc6b0 head.next\uc5d0 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4. * head.next\uc5d0 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4\uace0 \ud574\uc11c \uc77c\ubc18\uc801\uc778 \ub9ac\uc2a4\ud2b8 \uc870\uc791(manipulations)\uc5d0 \ub300\ud574 \ucd94\uac00\uc801\uc778 \ubd84\uae30\ub97c \ud544\uc694\ub85c \ud558\uc9c0 \uc54a\ub294\ub2e4. */ typedef struct slist_head { slist_node head; } slist_head; /* * Singly linked list iterator. * * slist_foreach()\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 'cur' \ud544\ub4dc\ub97c \ud1b5\ud574 \ud604\uc7ac \uc6d0\uc18c\uc5d0 \uc811\uadfc\ud55c\ub2e4. * * iterating \uc911\uc5d0 \ub9ac\uc2a4\ud2b8\ub97c \ubcc0\uacbd\ud558\ub294 \uac83\uc744 \ud5c8\uc6a9\ud55c\ub2e4. \ub2e8, \ud604\uc7ac \uc6d0\uc18c\ub97c \uc0ad\uc81c\ud558\ub294 \uac83\uc740 \uc608\uc678\uc774\ub2e4. * \ud604\uc7ac \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uba74 \uadf8 \uc774\ud6c4\uc5d0 iteration\uc744 \uacc4\uc18d \uc9c4\ud589\ud560 \uc218 \uc788\uc744\uc9c0 \ud655\uc778\ud574\uc57c \ud55c\ub2e4. * \uc778\uc811 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uac70\ub098 \ucd94\uac00\ud558\ub294 \uac83\ub3c4 \uc870\uc2ec\ud574\uc57c \ud55c\ub2e4. \uc758\ub3c4\ub300\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub2e4. * * \ucc38\uace0: \uad73\uc774 \ubcc4\ub3c4\uc758 \uad6c\uc870\uccb4\ub97c \uc815\uc758\ud560 \ud544\uc694\ub294 \uc5c6\uc5c8\uc9c0\ub9cc \uc77c\uad00\uc131\uc744 \uc704\ud574 \ubcc4\ub3c4\uc758 \uad6c\uc870\uccb4\ub97c \ub9cc\ub4e4\uc5c8\ub2e4. */ typedef struct slist_iter { slist_node *cur; } slist_iter; /* * iteration \uacfc\uc815\uc5d0\uc11c \ubcc0\uacbd\uc744 \ud5c8\uc6a9\ud558\ub294 singly linked list iterator. * * slist_foreach_modify()\uc5d0\uc11c \uc0ac\uc6a9\ud55c\ub2e4. cur \uba64\ubc84\ub97c \ud1b5\ud574 \ud604\uc7ac \uc6d0\uc18c\uc5d0 \uc811\uadfc\ud55c\ub2e4. * * itration \uc911\uc5d0 \ud5c8\uc6a9\ub418\ub294 \ubcc0\uacbd\uc740 slist_delete_current\ud568\uc218\ub97c \uc774\uc6a9\ud574\uc11c \ud604\uc7ac \uc6d0\uc18c\ub97c \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc81c\uac70\ud558\ub294 \uac83\uc774\ub2e4. * \uc778\uc811 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uac70\ub098 \ud604\uc7ac \ub178\ub4dc\uc758 \uc591 \uc606\uc5d0 \uc0c8\ub85c\uc6b4 \ub178\ub4dc\ub97c \uc0bd\uc785\ud558\ub294 \uac83\uc740 \uc548\uc804\ud558\uc9c0 \uc54a\ub2e4. */ typedef struct slist_mutable_iter { slist_node *cur; /* current element */ slist_node *next; /* next node we'll iterate to */ slist_node *prev; /* prev node, for deletions */ } slist_mutable_iter; /* list node(\uace0\ub9ac)\ub97c \ucd08\uae30\ud654\ud558\ub294 Static initializers */ #define DLIST_STATIC_INIT(name) {{&(name).head, &(name).head}} #define DCLIST_STATIC_INIT(name) {{{&(name).dlist.head, &(name).dlist.head}}, 0} #define SLIST_STATIC_INIT(name) {{NULL}} inline \ud568\uc218 inline inline \ud568\uc218\ub294 \ud568\uc218 \ud638\ucd9c\uc774 \uc815\uc758\ub85c \ub300\uccb4(substitution)\ub420 \uc218\ub3c4 \uc788\ub2e4. \ub300\uccb4 \uc5ec\ubd80\ub294 \ucef4\ud30c\uc77c\ub7ec\uac00 \uacb0\uc815\ud55c\ub2e4. \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\uc758 \ud06c\uae30\uac00 \ucee4\uc9c8 \uc218 \uc788\uc9c0\ub9cc \ud568\uc218 \ud638\ucd9c \uc624\ubc84\ud5e4\ub4dc(stack frame \uc5f0\uc0b0)\uac00 \uc5c6\uc5b4\uc9c0\uae30 \ub54c\ubb38\uc5d0 \ud568\uc218 \ud638\ucd9c \ud69f\uc218\uac00 \ub9ce\uc744\uc218\ub85d \uc131\ub2a5\uc774 \uac1c\uc120\ub41c\ub2e4. \ub300\ubd80\ubd84\uc758 \ud568\uc218\ub294 inline\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uace0 \uc77c\ubd80 \ud06c\uae30\uac00 \ud070 \ud568\uc218\ub4e4\uc740 extern\uc73c\ub85c \ud504\ub85c\ud1a0\ud0c0\uc785\ub9cc \uc120\uc5b8\ub418\uc5b4 \uc788\ub2e4 slist_delete \ud568\uc218\uc640 \ub514\ubc84\uae45 \uc804\uc6a9 \ud568\uc218\uac00 extern\uc73c\ub85c \uc120\uc5b8\ub418\uc5b4 \uc788\ub2e4 /* inline\uc774 \ub418\uae30\uc5d4 \ub108\ubb34 \ud070 \ud568\uc218\ub4e4 */ /* \uc8fc\uc758: \uc774 \ud568\uc218\uc758 \uc2dc\uac04\ubcf5\uc7a1\ub3c4\ub294 O(n)\uc774\ub2e4. \ub300\uc2e0 slist_delete_current() \uc4f0\uc790 */ extern void slist_delete(slist_head *head, const slist_node *node); #ifdef ILIST_DEBUG extern void dlist_member_check(const dlist_head *head, const dlist_node *node); extern void dlist_check(const dlist_head *head); extern void slist_check(const slist_head *head); #else /* \uc778\uc790\uac00 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \ucef4\ud30c\uc77c\ub7ec\uc758 \uacbd\uace0\ub97c \uc5c6\uc560\uae30 \uc704\ud574 void\ub85c \ubcc0\ud658\ud55c\ub2e4. */ #define dlist_member_check(head, node) ((void) (head)) #define dlist_check(head) ((void) (head)) #define slist_check(head) ((void) (head)) #endif /* ILIST_DEBUG */ references src/include/lib/ilist.h PostgreSQL github repository inline function in C","title":"ilist api"},{"location":"postgresql/ilist-api/#postgresql-ilist-api","text":"PostgreSQL\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 intgrated/inline \ub9ac\uc2a4\ud2b8 API \ubd84\uc11d","title":"[PostgreSQL] ilist API"},{"location":"postgresql/ilist-api/#_1","text":"\ud2b9\uc815 \uac1d\uccb4\uac00 \ub9ac\uc2a4\ud2b8\ub97c \uad6c\uc131\ud560 \uac83\uc774 \uc774\ubbf8 \uacb0\uc815\ub41c \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4 List link\ub4e4\uc740 \uac1d\uccb4\ub4e4\uc5d0 \uc9c1\uc811\uc801\uc73c\ub85c \uc0bd\uc785 \ub418\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub3c4\uc758 \uba54\ubaa8\ub9ac \uacf5\uac04 \uad00\ub9ac\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\ub2e4 \uc8fc\uc5b4\uc9c4 \uac1d\uccb4\ub4e4(List link\uac00 \uc0bd\uc785\ub41c) \uc911 \uc18c\uc218\ub9cc \ud558\ub098\uc758 \ub9ac\uc2a4\ud2b8(a list)\uc5d0 \ud3ec\ud568\ub420 \uacbd\uc6b0 \ub9ac\uc2a4\ud2b8\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uac1d\uccb4\ub4e4\uc758 List link\ub294 \ub0ad\ube44\ub41c\ub2e4 \uc77c\ubc18\uc801\uc73c\ub85c, \uc774 \ubc29\ubc95\uc740 \ubcc4\ub3c4\uc758 list node\ub4e4\uc744 \ud560\ub2f9\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uba54\ubaa8\ub9ac\ub97c \uc808\uc57d\ud560 \uc218 \uc788\ub2e4 Link Linked list\uac00 \uc544\ub2c8\ub77c List link\uc774\ub2e4. \uac1d\uccb4\ub4e4\uc5d0 link\ub97c \ubd80\ucc29\ud558\ub294 \ub290\ub08c\uc774\ub2e4. List\uac00 \uc544\ub2c8\ub77c Link\uac00 \uba54\uc778\uc774\ub2e4","title":"\uc694\uc57d"},{"location":"postgresql/ilist-api/#doubly-linked-list","text":"doubly-linked list\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\ub2e4 dlist_head - dlist_node\ub4e4\uc774 \uc5f0\uacb0\ub41c \ub9ac\uc2a4\ud2b8\uc758 head\ub97c \uac00\ub9ac\ud0a8\ub2e4 dlist \uc811\ub450\uc5b4\uac00 \ubd99\uc740 \ud568\uc218\ub4e4\ub85c \uc870\uc791\ud55c\ub2e4 dclist_head - \ub9ac\uc2a4\ud2b8\uc758 head\ub97c \uac00\ub9ac\ud0a4\uace0 \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\uc758 node \uac1c\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 count \ud544\ub4dc\ub97c \uac00\uc9c4\ub2e4 dclist \uc811\ub450\uc5b4\uac00 \ubd99\uc740 \ud568\uc218\ub4e4\ub85c \uc870\uc791\ud55c\ub2e4 dlist\uc640 dclist\ub294 node\uc640 iterator type\uc744 \uacf5\uc720\ud55c\ub2e4","title":"doubly-linked list"},{"location":"postgresql/ilist-api/#api","text":"doubly-linked list api\ub294 \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\uc9c0 \uc54a\ub294\ub2e4 \uc678\ubd80\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \uba54\ubaa8\ub9ac\ub97c \uc0ac\uc6a9\ud560 \ubfd0\uc774\ub2e4 doubly-linked count list API\ub4e4\uc740 \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\uc758 \uc6d0\uc18c \uac1c\uc218\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \uc81c\uacf5\ud55c\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uba74 singly linked list\uc640 doubly linked list\uc758 API\ub294 \ub3d9\uc77c\ud558\ub2e4","title":"API\uc758 \ud2b9\uc9d5"},{"location":"postgresql/ilist-api/#_2","text":"\ubaa8\ub4e0 \ub9ac\uc2a4\ud2b8(node\uac00 \uc5c6\ub294 \ub9ac\uc2a4\ud2b8 \ud3ec\ud568)\ub294 list header\ub97c \uac00\uc9c4\ub2e4 an empty singly-linked list\ub294 header\uc5d0 NULL pointer\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\ub2e4 \ub450 \uac00\uc9c0 doubly-linked list\uc5d0\uc11c \ube44\uc5b4\uc788\ub294 \ub9ac\uc2a4\ud2b8\ub97c \ud45c\ud604\ud558\ub294 \ubc29\ubc95\uc740 \ub450 \uac00\uc9c0\uc774\ub2e4 head\uc758 next \ud3ec\uc778\ud130\uac00 NULL\uc744 \uac00\ub9ac\ud0a8\ub2e4. \uc774 \ubc29\ubc95\uc740 \ud3b8\ub9ac\uc131 \ub54c\ubb38\uc5d0 list\ub97c \ucd08\uae30\ud654\ud560 \ub54c \uc8fc\ub85c \uc0ac\uc6a9\ud55c\ub2e4 head\uc758 next\uc640 prev \ud3ec\uc778\ud130\uac00 \ub2e4\uc2dc head\ub97c \uac00\ub9ac\ud0ac \uc218\ub3c4 \uc788\ub2e4. dlist\uc758 \ubaa8\ub4e0 \uc6d0\uc18c\ub4e4\uc774 \uc0ad\uc81c\ub418\uba74 \uc774\ub7f0 circular state\uac00 \ub41c\ub2e4. \uc774\ub7f0 circular dlist\ub97c \ucd94\ucc9c\ud55c\ub2e4. \ubd84\uae30\ub97c \ud0c0\uc9c0 \uc54a\uace0 \uc2e4\ud589 \ud560 \uc218 \uc788\ub2e4 operation\uc774 \uc788\uc5b4\uc11c \uc2e4\ud589\uc18d\ub3c4\uac00 \ube60\ub974\uae30 \ub54c\ubb38\uc774\ub2e4","title":"\ube48 \ub9ac\uc2a4\ud2b8"},{"location":"postgresql/ilist-api/#examples","text":"\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ub41c \ud14c\uc774\ube14\ub4e4\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uace0 \uc2f6\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 list\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4 #include \"lib/ilist.h\" // list header\ub97c \ud3ec\ud568\ud558\ub294 database \uad6c\uc870\uccb4 \uc120\uc5b8. // \uc5ec\uae30\uc5d0 \ud3ec\ud568\ub41c list header\ub294 \ub9ac\uc2a4\ud2b8\uc758 \ub178\ub4dc\ub4e4\uc5d0 \uc811\uadfc\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ub41c\ub2e4. typedef struct my_database { char *datname; dlist_head tables; // ... } my_database; // table\uc744 \ud45c\ud604\ud558\ub294 \uad6c\uc870\uccb4 \uc120\uc5b8. // \uac01 list_node\uc5d0\ub294 prev/next list link\uac00 \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4. // \uc774 list_node\ub4e4\uc740 \ub9ac\uc2a4\ud2b8\uc758 \ucc98\uc74c\uc5d0 \uc704\uce58\ud560 \uc218 \uc5c6\ub2e4. typedef struct my_table { char *tablename; dlist_node list_node; perm_t permissions; // ... } my_table; // database \uad6c\uc870\uccb4 \uc0dd\uc131(list header) my_database *db = create_database(); // table list\uc5d0 table\uc744 \ucd94\uac00 dlist_push_head(&db->tables, &create_table(db, \"a\")->list_node); // ... dlist_push_head(&db->tables, &create_table(db, \"b\")->list_node); // \ub2e8\uc21c iterator element\uc640 looping construct. // `iter.cur`\ub294 `dlist_node`\uc778\uc2a4\ud134\uc2a4\ub97c \uac00\ub9ac\ud0a8\ub2e4. `dlist_container`\ub97c \uc0ac\uc6a9\ud558\uba74 list link\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \uac1d\uccb4\uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud558\ub2e4. dlist_iter iter; dlist_foreach(iter, &db->tables) { my_table *tbl = dlist_container(my_table, list_node, iter.cur); printf(\"we have a table: %s in database %s\\n\", tbl->tablename, db->datname); } // \uc21c\ud68c\uc640 \ub3d9\uc2dc\uc5d0 \ud574\ub2f9 \uc6d0\uc18c\ub97c \uc870\uc791\ud560\uc218 \uc788\ub294 iterator element\uc640 looping construct. // \ud2b9\uc815 \uc870\uac74\uc744 \ub9cc\uc871\ud558\ub294 \ud14c\uc774\ube14\uc744 \uc0ad\uc81c\ud558\ub294 \ubc29\ubc95\uc740 \uc544\ub798\uc640 \uac19\ub2e4. dlist_mutable_iter miter; dlist_foreach_modify(miter, &db->tables) { my_table *tbl = dlist_container(my_table, list_node, miter.cur); if (!tbl->to_be_deleted) continue; // don't touch this one // \ud2b9\uc815 table\uc744 \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc81c\uac70(unlink) dlist_delete(miter.cur); // list link API\ub294 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc5d0\ub294 \uad00\uc5ec\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 list\uc5d0\uc11c unlik\ub418\uc5b4\ub3c4 \uc5ec\uc804\ud788 \ud574\ub2f9 \uc6d0\uc18c\uc5d0\ub294 \uc811\uadfc \uac00\ub2a5\ud558\ub2e4 drop_table(db, tbl); }","title":"examples"},{"location":"postgresql/ilist-api/#api_1","text":"src/include/lib/ilist.h slist_head \ub294 \uc65c typdef slist_head slist_node \ub85c \uad6c\ud604\ud558\uc9c0 \uc54a\uace0 \ud544\ub4dc\uac00 \ud558\ub098\uc9dc\ub9ac\uc778 \uad6c\uc870\uccb4\ub97c \uad73\uc774 \ub9cc\ub4e0\uac78\uae4c? /* * doubly linked list\ub97c \ub9cc\ub4dc\ub294 list link \uad6c\uc870\uccb4 * node \ub77c\ub294 \ud45c\ud604\ubcf4\ub2e4\ub294 link(\uace0\ub9ac)\ub77c\ub294 \ud45c\ud604\uc774 \uc801\uc808\ud55c\uac70\uac19\ub2e4 */ typedef struct dlist_node dlist_node; struct dlist_node { dlist_node *prev; dlist_node *next; }; /* * Head of a doubly linked list. * * \ube44\uc5b4\uc788\uc9c0 \uc54a\uc740 \ub9ac\uc2a4\ud2b8\ub294 \ub0b4\ubd80\uc801\uc73c\ub85c \uc21c\ud658 \uad6c\uc870(circularly linked)\uc774\ub2e4. * \uc774\ub7f0 \uad6c\uc870\uc758 \uc7a5\uc810\uc740 \uc77c\ubc18\uc801\uc778 \ub9ac\uc2a4\ud2b8 \uc870\uc791 \uacfc\uc815\uc5d0 \ubd84\uae30\uac00 \ud544\uc694 \uc5c6\ub2e4\ub294 \uac83\uc774\ub2e4. * \ube48 \ub9ac\uc2a4\ud2b8\ub294 \uac04\ub2e8\ud558\uac8c head\uc758 prev\uc640 next\ub97c NULL\ub85c \ucd08\uae30\ud654\ud560 \uc218 \uc788\ub2e4. */ typedef struct dlist_head { /* * head.next\ub294 \ub9ac\uc2a4\ud2b8\uc758 \uccab \ubc88\uc9f8 \uc6d0\uc18c\ub97c \uac00\ub9ac\ud0a4\uac70\ub098, * circular empty list\ub77c\uba74 &head\ub97c \uc800\uc7a5\ud55c\ub2e4. * emtpy and not circular list\ub77c\uba74 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4. * * head.prev\ub294 \ub9ac\uc2a4\ud2b8\uc758 \ub9c8\uc9c0\ub9c9 \uc6d0\uc18c\ub97c \uac00\ub9ac\ud0a4\uac70\ub098, * circular empty list\ub77c\uba74 &head\ub97c \uc800\uc7a5\ud55c\ub2e4. * emtpy and not circular list\ub77c\uba74 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4. */ dlist_node head; } dlist_head; /* * dlist_head\uc640 dclist_head\ub97c \uc704\ud55c iterator type. * * dlist_foreach(), dlist_reverse_foreach(), dclist \ubcc0\ud615\uc5d0\uc11c \uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b4\uae30 * \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4. * * \ubc18\ubcf5(iteration)\uc5d0\uc11c \ud604\uc7ac \uc6d0\uc18c\uc5d0 \uc811\uadfc\ud558\uace0\uc2f6\uc744 \ub54c\uc5d0\ub294 cur \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4. * * \uc774 iterator\ub97c \uc0ac\uc6a9\ud574\uc11c \ub9ac\uc2a4\ud2b8\ub97c \ubcc0\ud615\ud558\ub294 \uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. * * \ucc38\uace0: dlist_foreach(), dclist_foreach() \ub9e4\ud06c\ub85c\uc5d0\uc11c \uc778\uc790\ub4e4\uc744 \uc5ec\ub7ec \ubc88 \uacc4\uc0b0\ud558\ub294 \uac83\uc744 \ub9c9\uae30 \uc704\ud574 \ucd94\uac00\uc801\uc778 end \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. */ typedef struct dlist_iter { dlist_node *cur; /* current element */ dlist_node *end; /* last node we'll iterate to */ } dlist_iter; /* * \ubc18\ubcf5 \uacfc\uc815\uc5d0\uc11c \ub9ac\uc2a4\ud2b8(dclist_head, dlist_head)\uc5d0 \ub300\ud55c \ubcc0\ud615\uc744 \ud5c8\uc6a9\ud558\ub294 doubly linked list iterator \ud0c0\uc785. * * dlist_foreach_modify(), dclist_foreach_modify()\uc5d0\uc11c \uc0c1\ud0dc\ub97c \ub098\ud0c0\ub0b8\ub2e4. * * \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \ud604\uc7ac \uc6d0\uc18c\ub97c \uc81c\uac70\ud558\ub294 \uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0\ub9cc, \uc0c8\ub85c\uc6b4 \uc6d0\uc18c\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc778\uc811 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294\uac83\uc740 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4. * * \ucc38\uace0: \ubcc0\ud615 \uac00\ub2a5\ud55c \uc21c\ud68c(iteration)\ub97c \uc704\ud574\uc11c\ub294 \ud604\uc7ac \ub178\ub4dc\uc758 \ub2e4\uc74c \ub178\ub4dc\ub97c \uc800\uc7a5\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ubcc4\ub3c4\uc758 iterator type\uc774 \ud544\uc694\ud558\ub2e4. */ typedef struct dlist_mutable_iter { dlist_node *cur; /* current element */ dlist_node *next; /* next node we'll iterate to */ dlist_node *end; /* last node we'll iterate to */ } dlist_mutable_iter; /* * doubly linked list\uc758 \uc6d0\uc18c \uac1c\uc218\ub97c \uc800\uc7a5\ud558\ub294 head. * * \ub0b4\ubd80\uc801\uc73c\ub85c dlist\ub97c \uc0ac\uc6a9\ud558\uace0 \uc6d0\uc18c\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc0ad\uc81c\ud560 \ub54c\ub9c8\ub2e4 count\ub97c \uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4. */ typedef struct dclist_head { dlist_head dlist; uint32 count; } dclist_head; /* * singly linked list\uc758 \ub178\ub4dc(\uace0\ub9ac). * * singly linked list\ub97c \uad6c\uc131\ud560 \uac1d\uccb4\uc5d0 \uc774 \uad6c\uc870\uccb4\ub97c \uc0bd\uc785\ud574\uc11c \uc0ac\uc6a9\ud55c\ub2e4. */ typedef struct slist_node slist_node; struct slist_node { slist_node *next; }; /* * singly linked list\uc758 head. * * \uc21c\ud658\uc801\uc73c\ub85c \uc5f0\uacb0\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ub9ac\uc2a4\ud2b8\uac00 \ube44\uc5b4 \uc788\ub294 \uacbd\uc6b0 head.next\uc5d0 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4. * head.next\uc5d0 NULL\uc744 \uc800\uc7a5\ud55c\ub2e4\uace0 \ud574\uc11c \uc77c\ubc18\uc801\uc778 \ub9ac\uc2a4\ud2b8 \uc870\uc791(manipulations)\uc5d0 \ub300\ud574 \ucd94\uac00\uc801\uc778 \ubd84\uae30\ub97c \ud544\uc694\ub85c \ud558\uc9c0 \uc54a\ub294\ub2e4. */ typedef struct slist_head { slist_node head; } slist_head; /* * Singly linked list iterator. * * slist_foreach()\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 'cur' \ud544\ub4dc\ub97c \ud1b5\ud574 \ud604\uc7ac \uc6d0\uc18c\uc5d0 \uc811\uadfc\ud55c\ub2e4. * * iterating \uc911\uc5d0 \ub9ac\uc2a4\ud2b8\ub97c \ubcc0\uacbd\ud558\ub294 \uac83\uc744 \ud5c8\uc6a9\ud55c\ub2e4. \ub2e8, \ud604\uc7ac \uc6d0\uc18c\ub97c \uc0ad\uc81c\ud558\ub294 \uac83\uc740 \uc608\uc678\uc774\ub2e4. * \ud604\uc7ac \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uba74 \uadf8 \uc774\ud6c4\uc5d0 iteration\uc744 \uacc4\uc18d \uc9c4\ud589\ud560 \uc218 \uc788\uc744\uc9c0 \ud655\uc778\ud574\uc57c \ud55c\ub2e4. * \uc778\uc811 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uac70\ub098 \ucd94\uac00\ud558\ub294 \uac83\ub3c4 \uc870\uc2ec\ud574\uc57c \ud55c\ub2e4. \uc758\ub3c4\ub300\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub2e4. * * \ucc38\uace0: \uad73\uc774 \ubcc4\ub3c4\uc758 \uad6c\uc870\uccb4\ub97c \uc815\uc758\ud560 \ud544\uc694\ub294 \uc5c6\uc5c8\uc9c0\ub9cc \uc77c\uad00\uc131\uc744 \uc704\ud574 \ubcc4\ub3c4\uc758 \uad6c\uc870\uccb4\ub97c \ub9cc\ub4e4\uc5c8\ub2e4. */ typedef struct slist_iter { slist_node *cur; } slist_iter; /* * iteration \uacfc\uc815\uc5d0\uc11c \ubcc0\uacbd\uc744 \ud5c8\uc6a9\ud558\ub294 singly linked list iterator. * * slist_foreach_modify()\uc5d0\uc11c \uc0ac\uc6a9\ud55c\ub2e4. cur \uba64\ubc84\ub97c \ud1b5\ud574 \ud604\uc7ac \uc6d0\uc18c\uc5d0 \uc811\uadfc\ud55c\ub2e4. * * itration \uc911\uc5d0 \ud5c8\uc6a9\ub418\ub294 \ubcc0\uacbd\uc740 slist_delete_current\ud568\uc218\ub97c \uc774\uc6a9\ud574\uc11c \ud604\uc7ac \uc6d0\uc18c\ub97c \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc81c\uac70\ud558\ub294 \uac83\uc774\ub2e4. * \uc778\uc811 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uac70\ub098 \ud604\uc7ac \ub178\ub4dc\uc758 \uc591 \uc606\uc5d0 \uc0c8\ub85c\uc6b4 \ub178\ub4dc\ub97c \uc0bd\uc785\ud558\ub294 \uac83\uc740 \uc548\uc804\ud558\uc9c0 \uc54a\ub2e4. */ typedef struct slist_mutable_iter { slist_node *cur; /* current element */ slist_node *next; /* next node we'll iterate to */ slist_node *prev; /* prev node, for deletions */ } slist_mutable_iter; /* list node(\uace0\ub9ac)\ub97c \ucd08\uae30\ud654\ud558\ub294 Static initializers */ #define DLIST_STATIC_INIT(name) {{&(name).head, &(name).head}} #define DCLIST_STATIC_INIT(name) {{{&(name).dlist.head, &(name).dlist.head}}, 0} #define SLIST_STATIC_INIT(name) {{NULL}}","title":"API"},{"location":"postgresql/ilist-api/#inline","text":"inline inline \ud568\uc218\ub294 \ud568\uc218 \ud638\ucd9c\uc774 \uc815\uc758\ub85c \ub300\uccb4(substitution)\ub420 \uc218\ub3c4 \uc788\ub2e4. \ub300\uccb4 \uc5ec\ubd80\ub294 \ucef4\ud30c\uc77c\ub7ec\uac00 \uacb0\uc815\ud55c\ub2e4. \ud504\ub85c\uadf8\ub7a8 \uc804\uccb4\uc758 \ud06c\uae30\uac00 \ucee4\uc9c8 \uc218 \uc788\uc9c0\ub9cc \ud568\uc218 \ud638\ucd9c \uc624\ubc84\ud5e4\ub4dc(stack frame \uc5f0\uc0b0)\uac00 \uc5c6\uc5b4\uc9c0\uae30 \ub54c\ubb38\uc5d0 \ud568\uc218 \ud638\ucd9c \ud69f\uc218\uac00 \ub9ce\uc744\uc218\ub85d \uc131\ub2a5\uc774 \uac1c\uc120\ub41c\ub2e4. \ub300\ubd80\ubd84\uc758 \ud568\uc218\ub294 inline\uc73c\ub85c \uc815\uc758\ub418\uc5b4 \uc788\uace0 \uc77c\ubd80 \ud06c\uae30\uac00 \ud070 \ud568\uc218\ub4e4\uc740 extern\uc73c\ub85c \ud504\ub85c\ud1a0\ud0c0\uc785\ub9cc \uc120\uc5b8\ub418\uc5b4 \uc788\ub2e4 slist_delete \ud568\uc218\uc640 \ub514\ubc84\uae45 \uc804\uc6a9 \ud568\uc218\uac00 extern\uc73c\ub85c \uc120\uc5b8\ub418\uc5b4 \uc788\ub2e4 /* inline\uc774 \ub418\uae30\uc5d4 \ub108\ubb34 \ud070 \ud568\uc218\ub4e4 */ /* \uc8fc\uc758: \uc774 \ud568\uc218\uc758 \uc2dc\uac04\ubcf5\uc7a1\ub3c4\ub294 O(n)\uc774\ub2e4. \ub300\uc2e0 slist_delete_current() \uc4f0\uc790 */ extern void slist_delete(slist_head *head, const slist_node *node); #ifdef ILIST_DEBUG extern void dlist_member_check(const dlist_head *head, const dlist_node *node); extern void dlist_check(const dlist_head *head); extern void slist_check(const slist_head *head); #else /* \uc778\uc790\uac00 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \ucef4\ud30c\uc77c\ub7ec\uc758 \uacbd\uace0\ub97c \uc5c6\uc560\uae30 \uc704\ud574 void\ub85c \ubcc0\ud658\ud55c\ub2e4. */ #define dlist_member_check(head, node) ((void) (head)) #define dlist_check(head) ((void) (head)) #define slist_check(head) ((void) (head)) #endif /* ILIST_DEBUG */","title":"inline \ud568\uc218"},{"location":"postgresql/ilist-api/#references","text":"src/include/lib/ilist.h PostgreSQL github repository inline function in C","title":"references"},{"location":"postgresql/main-function/","text":"[PostgreSQL] main \ud568\uc218 PostgreSQL\uc758 main \ud568\uc218 \ubd84\uc11d ( src/backend/main/main.c ) main \ud568\uc218\uc5d0\uc11c \ud638\ucd9c\ud558\ub294 \ud568\uc218 get_progname(argv[0]) \ub514\ub809\ud1a0\ub9ac \uacbd\ub85c, \ud655\uc7a5\uc790\ub97c \uc81c\uc678\ud55c \ud504\ub85c\uadf8\ub7a8 \uc774\ub984\uc744 \ubc18\ud658\ud55c\ub2e4 startup_hacks(progname) \uc5b4\ub5a4 \uc885\ub958\uc758 \uc11c\ubc84 \ud504\ub85c\uc138\uc2a4\uc758 \uc0dd\uc131\ubcf4\ub2e4 \uc804\uc5d0 \ud574\uc57c \ud560 \uc791\uc5c5\uc744 \uc9c4\ud589\ud55c\ub2e4 \uc2e4\uc9c8\uc801\uc73c\ub85c\ub294 Windows\ud658\uacbd\uc5d0\uc11c\uc758 C runtime\uc5d0 \ub300\ud55c \uc124\uc815\uc744 \uc9c4\ud589\ud55c\ub2e4 save_ps_display_args(argc, argv) argv\uac00 \uac00\ub9ac\ud0a4\ub294 \uacf5\uac04\uc5d0 \uc800\uc7a5\ub41c \uc81c\uc774\ud130\uac00 \uc774\ud6c4\uc5d0 ps_display \uc758 \ub3d9\uc791\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc368\uc9c8 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uadf8 \ub370\uc774\ud130\ub4e4\uc744 \uc548\uc804\ud55c \uacf3\uc73c\ub85c \ubcf5\uc0ac\ud55c\ub2e4 MemoryContextInit() \uc5d0\ub7ec, \uba54\ubaa8\ub9ac \uad00\ub9ac \uc2dc\uc2a4\ud15c \ucd08\uae30\ud654(fireup) \uc774 \ud568\uc218\uac00 \ubc18\ud658\ud55c \uc774\ud6c4\uc5d0\ub294 elog/ereport\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4 \ub2e8, GUC\uac00 \ub85c\ub4dc\ub418\uae30 \uc804\uae4c\uc9c0\ub294 \uba54\uc138\uc9c0\ub4e4\uc774 stderr\uc5d0\ub9cc \ucd9c\ub825\ub41c\ub2e4 set_pglocale_pgservice(argv[0], PG_TEXTDOMAIN(\"postgres\")) locale \uc815\ubcf4 \ucd08\uae30\ud654 init_locale \uc778\uc790\ub97c \ubc14\uafd4\uac00\uba70 4\ubc88 \uc5f0\uc18d\uc73c\ub85c \ud638\ucd9c\ud55c\ub2e4 LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME \uc77c\ubd80 C \ud568\uc218\ub4e4\uc740 locale \uc815\ubcf4\uc5d0 \uc758\ud574 \ucd9c\ub825\ud558\uac70\ub098 \ub370\uc774\ud130 \ucc98\ub9ac \ubc29\uc2dd\uc774 \ub2ec\ub77c\uc9c4\ub2e4 unsetenv(\"LC_ALL\") \uc704\uc5d0\uc11c locale \uc815\ubcf4\ub97c \ucda9\ubd84\ud788 \uc124\uc815\ud588\uae30 \ub54c\ubb38\uc5d0 \uae30\uc874\uc758 locale \uc124\uc815\uc744 \uc9c0\uc6b4\ub2e4 \ud658\uacbd\ubcc0\uc218\ub97c \uc0ad\uc81c\ud55c\ub2e4 check_root(progname) PostgreSQL\uc774 \ub8e8\ud2b8 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ub41c \uacbd\uc6b0 \uc758\ub3c4\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc885\ub8cc\ud55c\ub2e4 \ub8e8\ud2b8 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589 \uac00\ub2a5\ud55c \uacbd\uc6b0\ub294 \uc544\ub798\uc758 \uacbd\uc6b0\uc774\ub2e4. \uc774 \ub450 \uacbd\uc6b0\ub294 read-only \uc791\uc5c5\ub9cc\uc744 \uc218\ud589\ud558\uae30 \ub54c\ubb38\uc5d0 \ub8e8\ud2b8 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ub418\uc5b4\ub3c4 \uc548\uc804\ud558\ub2e4 argv[1] : --describe-config argv[1] : -C \uccab \ubc88\uc9f8 cli argument\uc5d0 \ub530\ub77c \ub2e4\uc591\ud55c subprogram\uc73c\ub85c \ubd84\uae30\ud55c\ub2e4 --check : BootstrapModeMain(argc, argv, true) --boot : BootstrapmasterMain(artc, argv) --forkchild : SubPostmasterMain(argc, argv) --describe-config : GucInfoMain --single : PostgresSingleUserMain(argc, argv, strdup(get_user_name_or_exit(program))) else : PostmasterMain \uc704\uc758 \ud568\uc218\ub4e4\uc740 \ubc18\ud658\ud558\uc9c0 \uc54a\ub294\ub2e4 abort() postmaster \ud504\ub85c\uc138\uc2a4 postmaster\ub294 \uc5ec\ub7ec \uba85\uc774 \uc811\uc18d \uac00\ub2a5\ud55c PostgreSQL DB server\uc774\ub2e4 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc811\uc18d\ud558\ub824\uba74 \ubc18\ub4dc\uc2dc \ud544\uc694\ud558\ub2e4 postmain \ud504\ub85c\uc138\uc2a4\ub294 postgres \ud504\ub85c\uc138\uc2a4\ub974 \uc2e4\ud589\uc2dc\ud0a8\ub2e4 postgres \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uc5f0\uacb0(connection)\uc744 \ucc98\ub9ac\ud55c\ub2e4 postmain \ud504\ub85c\uc138\uc2a4\ub294 \uc11c\ubc84 \ud504\ub85c\uc138\uc2a4\ub4e4 \uc0ac\uc774\uc758 \ud1b5\uc2e0\uc744 \uad00\ub9ac\ud55c\ub2e4 foreground \ud504\ub85c\uc138\uc2a4\ub85c \uc2e4\ud589\ub418\ub294\uac8c \uae30\ubcf8\uc774\uc9c0\ub9cc \ubc31\uadf8\ub77c\uc6b4\ub4dc \ud504\ub85c\uc138\uc2a4\ub85c \uc2e4\ud589\ub3c4 \uac00\ub2a5\ud558\ub2e4 references PostgreSQL \uc18c\uc2a4\ucf54\ub4dc PostgreSQL 8.1.23 Documentation - postmaster","title":"main \ud568\uc218"},{"location":"postgresql/main-function/#postgresql-main","text":"PostgreSQL\uc758 main \ud568\uc218 \ubd84\uc11d ( src/backend/main/main.c )","title":"[PostgreSQL] main \ud568\uc218"},{"location":"postgresql/main-function/#main","text":"get_progname(argv[0]) \ub514\ub809\ud1a0\ub9ac \uacbd\ub85c, \ud655\uc7a5\uc790\ub97c \uc81c\uc678\ud55c \ud504\ub85c\uadf8\ub7a8 \uc774\ub984\uc744 \ubc18\ud658\ud55c\ub2e4 startup_hacks(progname) \uc5b4\ub5a4 \uc885\ub958\uc758 \uc11c\ubc84 \ud504\ub85c\uc138\uc2a4\uc758 \uc0dd\uc131\ubcf4\ub2e4 \uc804\uc5d0 \ud574\uc57c \ud560 \uc791\uc5c5\uc744 \uc9c4\ud589\ud55c\ub2e4 \uc2e4\uc9c8\uc801\uc73c\ub85c\ub294 Windows\ud658\uacbd\uc5d0\uc11c\uc758 C runtime\uc5d0 \ub300\ud55c \uc124\uc815\uc744 \uc9c4\ud589\ud55c\ub2e4 save_ps_display_args(argc, argv) argv\uac00 \uac00\ub9ac\ud0a4\ub294 \uacf5\uac04\uc5d0 \uc800\uc7a5\ub41c \uc81c\uc774\ud130\uac00 \uc774\ud6c4\uc5d0 ps_display \uc758 \ub3d9\uc791\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc368\uc9c8 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uadf8 \ub370\uc774\ud130\ub4e4\uc744 \uc548\uc804\ud55c \uacf3\uc73c\ub85c \ubcf5\uc0ac\ud55c\ub2e4 MemoryContextInit() \uc5d0\ub7ec, \uba54\ubaa8\ub9ac \uad00\ub9ac \uc2dc\uc2a4\ud15c \ucd08\uae30\ud654(fireup) \uc774 \ud568\uc218\uac00 \ubc18\ud658\ud55c \uc774\ud6c4\uc5d0\ub294 elog/ereport\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4 \ub2e8, GUC\uac00 \ub85c\ub4dc\ub418\uae30 \uc804\uae4c\uc9c0\ub294 \uba54\uc138\uc9c0\ub4e4\uc774 stderr\uc5d0\ub9cc \ucd9c\ub825\ub41c\ub2e4 set_pglocale_pgservice(argv[0], PG_TEXTDOMAIN(\"postgres\")) locale \uc815\ubcf4 \ucd08\uae30\ud654 init_locale \uc778\uc790\ub97c \ubc14\uafd4\uac00\uba70 4\ubc88 \uc5f0\uc18d\uc73c\ub85c \ud638\ucd9c\ud55c\ub2e4 LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME \uc77c\ubd80 C \ud568\uc218\ub4e4\uc740 locale \uc815\ubcf4\uc5d0 \uc758\ud574 \ucd9c\ub825\ud558\uac70\ub098 \ub370\uc774\ud130 \ucc98\ub9ac \ubc29\uc2dd\uc774 \ub2ec\ub77c\uc9c4\ub2e4 unsetenv(\"LC_ALL\") \uc704\uc5d0\uc11c locale \uc815\ubcf4\ub97c \ucda9\ubd84\ud788 \uc124\uc815\ud588\uae30 \ub54c\ubb38\uc5d0 \uae30\uc874\uc758 locale \uc124\uc815\uc744 \uc9c0\uc6b4\ub2e4 \ud658\uacbd\ubcc0\uc218\ub97c \uc0ad\uc81c\ud55c\ub2e4 check_root(progname) PostgreSQL\uc774 \ub8e8\ud2b8 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ub41c \uacbd\uc6b0 \uc758\ub3c4\ub418\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc885\ub8cc\ud55c\ub2e4 \ub8e8\ud2b8 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589 \uac00\ub2a5\ud55c \uacbd\uc6b0\ub294 \uc544\ub798\uc758 \uacbd\uc6b0\uc774\ub2e4. \uc774 \ub450 \uacbd\uc6b0\ub294 read-only \uc791\uc5c5\ub9cc\uc744 \uc218\ud589\ud558\uae30 \ub54c\ubb38\uc5d0 \ub8e8\ud2b8 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ub418\uc5b4\ub3c4 \uc548\uc804\ud558\ub2e4 argv[1] : --describe-config argv[1] : -C \uccab \ubc88\uc9f8 cli argument\uc5d0 \ub530\ub77c \ub2e4\uc591\ud55c subprogram\uc73c\ub85c \ubd84\uae30\ud55c\ub2e4 --check : BootstrapModeMain(argc, argv, true) --boot : BootstrapmasterMain(artc, argv) --forkchild : SubPostmasterMain(argc, argv) --describe-config : GucInfoMain --single : PostgresSingleUserMain(argc, argv, strdup(get_user_name_or_exit(program))) else : PostmasterMain \uc704\uc758 \ud568\uc218\ub4e4\uc740 \ubc18\ud658\ud558\uc9c0 \uc54a\ub294\ub2e4 abort()","title":"main \ud568\uc218\uc5d0\uc11c \ud638\ucd9c\ud558\ub294 \ud568\uc218"},{"location":"postgresql/main-function/#postmaster","text":"postmaster\ub294 \uc5ec\ub7ec \uba85\uc774 \uc811\uc18d \uac00\ub2a5\ud55c PostgreSQL DB server\uc774\ub2e4 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc811\uc18d\ud558\ub824\uba74 \ubc18\ub4dc\uc2dc \ud544\uc694\ud558\ub2e4 postmain \ud504\ub85c\uc138\uc2a4\ub294 postgres \ud504\ub85c\uc138\uc2a4\ub974 \uc2e4\ud589\uc2dc\ud0a8\ub2e4 postgres \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uc5f0\uacb0(connection)\uc744 \ucc98\ub9ac\ud55c\ub2e4 postmain \ud504\ub85c\uc138\uc2a4\ub294 \uc11c\ubc84 \ud504\ub85c\uc138\uc2a4\ub4e4 \uc0ac\uc774\uc758 \ud1b5\uc2e0\uc744 \uad00\ub9ac\ud55c\ub2e4 foreground \ud504\ub85c\uc138\uc2a4\ub85c \uc2e4\ud589\ub418\ub294\uac8c \uae30\ubcf8\uc774\uc9c0\ub9cc \ubc31\uadf8\ub77c\uc6b4\ub4dc \ud504\ub85c\uc138\uc2a4\ub85c \uc2e4\ud589\ub3c4 \uac00\ub2a5\ud558\ub2e4","title":"postmaster \ud504\ub85c\uc138\uc2a4"},{"location":"postgresql/main-function/#references","text":"PostgreSQL \uc18c\uc2a4\ucf54\ub4dc PostgreSQL 8.1.23 Documentation - postmaster","title":"references"},{"location":"postgresql/mmgr/","text":"[PostgreSQL] mmgr src/backend/utils/mmgr/README \ubc88\uc5ed \ubc0f \uc694\uc57d Background postgresql\uc5d0\uc11c \ub300\ubd80\ubd84\uc758 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc740 \"memory context\"\ub4e4\uc5d0\uc11c \uc9c4\ud589\ub41c\ub2e4 memory context\ub780 \ubcf4\ud1b5 src/backend/utils/mmgr/aset.c \uc5d0 \uad6c\ud604\ub41c AllocSet\ub4e4\uc744 \uc758\ubbf8\ud55c\ub2e4 \uc624\ubc84\ud5e4\ub4dc\ub97c \ucd5c\uc18c\ud654\ud558\uba74\uc11c \uba54\ubaa8\ub9ac\ub97c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc740 \uba54\ubaa8\ub9ac\uc758 \uc218\uba85\uc5d0 \ub9de\ub294 \uc801\uc808\ud55c context\ub4e4\uc758 \uc9d1\ud569(set)\uc744 \uc815\uc758\ud558\ub294 \uac83\uc774\ub2e4 memory context\uc758 \uae30\ucd08\uc801\uc778 \uc5f0\uc0b0\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4 context \uc0dd\uc131 context \ub0b4\uc5d0\uc11c \uba54\ubaa8\ub9ac chunk\ub97c \ud560\ub2f9 context \uc0ad\uc81c(\ud574\ub2f9 context\uc5d0 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uba54\ubaa8\ub9ac\uac00 \ud574\uc81c\ub41c\ub2e4) \ud2b9\uc815 context\uc5d0 \ud560\ub2f9\ub41c \uba54\ubaa8\ub9ac\uc758 \ucd1d\ub7c9 \uc870\ud68c (context\uac00 \uac00\uc9c0\uace0 \uc788\ub294 chunk\uc758 \ucd1d\ub7c9\uc774 \uc544\ub2cc raw memory\uc758 \ucd1d\ub7c9) raw \uba54\ubaa8\ub9ac\ub97c \uc791\uac8c \ub098\ub204\uba74 chunk\uac00 \ub41c\ub2e4 CurrentMemoryContext \ub77c\ub294 \uc804\uc5ed \ubcc0\uc218\ub294 \ud56d\uc0c1 \"\ud604\uc7ac\" context\ub97c \uc758\ubbf8\ud55c\ub2e4 palloc \uc740 \ub0b4\ubd80\uc801\uc73c\ub85c \"\ud604\uc7ac\" context\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud55c\ub2e4 MemoryContextSwitchTo \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 context\ub97c \ud604\uc7ac context\ub85c \uc124\uc815\ud558\uace0 \uc774\uc804\uc758 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ubc18\ud658\ud55c\ub2e4. \uadf8\ub798\uc11c \uc774 \ud568\uc218\ub97c \ud638\ucd9c\ud55c \ud638\ucd9c\uc790\ub294 \uc774\uc804 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ubcf5\uc6d0 \ud560 \uc218 \uc788\ub2e4 malloc , free \ud568\uc218\ub97c \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\ub294 \uac83 \ubcf4\ub2e4 \uba54\ubaa8\ub9ac \ucee8\ud0dd\uc2a4\ud2b8\ub97c \ud1b5\ud574 \ud638\ucd9c\ud560 \ub54c\uc758 \uc774\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4 \ud558\ub098\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \ud3ec\ud568\ub41c \uc5ec\ub7ec chunk\ub97c \ud55c \ubc88\uc5d0 \ud574\uc81c\ud560 \uc218 \uc788\ub2e4. \uc774\uac83\uc740 chunk \uac01\uac01\uc5d0 \ub300\ud574 \ud574\uc81c \uc694\uccad\uc744 \ud558\ub294 \uac83\ubcf4\ub2e4 \ube60\ub974\uace0 \uc548\uc804\ud558\ub2e4 postgresql\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158\uc758 \ub05d\uc5d0 \uba54\ubaa8\ub9ac\ub97c \uc815\ub9ac(clean up)\ud560 \ub54c \uc774 \uc810\uc744 \uc774\uc6a9\ud55c\ub2e4. \ud2b8\ub79c\uc7ad\uc158 \ub610\ub294 \ub354 \uc9e7\uc740 \uc218\uba85\uc744 \uac00\uc9c4 \ubaa8\ub4e0 \ud65c\uc131 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub9ac\uc14b \ud568\uc73c\ub85c\uc368, \ubaa8\ub4e0 \uc77c\uc2dc\uc801\uc778(transient) \uba54\ubaa8\ub9ac\ub97c \ud68c\uc218\ud560 \uc218 \uc788\ub2e4 palloc API palloc\uc740 malloc\uacfc \uc720\uc0ac\ud558\uc9c0\ub9cc \ub2e4\ub978\uc810\ub3c4 \uc788\ub2e4 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud55c \uacbd\uc6b0(Out Of Memory) palloc\uacfc repalloc\uc740 elog(ERROR) \ub97c \ud1b5\ud574 \uc885\ub8cc\ud55c\ub2e4. NULL\uc744 \ubc18\ud658\ud558\uc9c0 \uc54a\ub294\ub2e4. palloc_extended \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774\ub7f0 \ud589\ub3d9\uc744 override\ud560 \uc218 \uc788\ub2e4 palloc(0) \ub294 \uc720\ud6a8\ud55c \uc5f0\uc0b0(operation)\uc774\ub2e4. NULL\uc744 \ubc18\ud658\ud558\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc14\uc774\ud2b8\uac00 \uc5c6\ub294 chunk\ub97c \ubc18\ud658\ud55c\ub2e4. \uc774 chunk\ub294 \uc774\ud6c4\uc5d0 repalloc\uc744 \ud1b5\ud574 \ucee4\uc9c8 \uc218 \uc788\ub2e4. \ubc18\ub300\ub85c repalloc \uc740 \ud06c\uae30\ub97c 0\uc73c\ub85c \uc7ac\ud560\ub2f9 \ud558\ub294 \uac83\uc744 \ud5c8\uc6a9\ud55c\ub2e4 pfree \uc640 repalloc \uc740 NULL\ud3ec\uc778\ud130\ub97c \ubc1b\uc9c0 \uc54a\ub294\ub2e4. repalloc \uc740 \ud604\uc7ac \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \uc885\uc18d\ub418\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \ud604\uc7ac \uc5b4\ub5a4 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\ub294\uc9c0\ub294 \uc54c\uc544\uc57c \ud55c\ub2e4 The Current Memory Context \ud568\uc218\ub97c \ud638\ucd9c\ud560 \ub54c\ub9c8\ub2e4 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc740 notational overhead\uac00 \ub418\uae30 \ub54c\ubb38\uc5d0 \ud56d\uc0c1 \ud604\uc7ac\uc758 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c CurrentMemoryContext\ub97c \ud1b5\ud574 \ucc38\uc870\ud560 \uc218 \uc788\ub2e4. \uc774\ub7ec\ud55c \uac1c\ub150\uc774 \uc5c6\ub2e4\uba74 copyObject \ud568\uc218\ub4e4(routines) \uc744 \ud638\ucd9c\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud56d\uc0c1 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc804\ub2ec\ud574\uc57c \ud558\uace0 \ud3ec\uc778\ud130\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub4e4\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc774\ub2e4. \ud568\uc218 \ub0b4\ubd80\uc5d0\uc11c \uc77c\uc2dc\uc801\uc73c\ub85c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uc5d0\uac8c \uadf8 \ud3ec\uc778\ud130\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\ub294 \ud568\uc218\uc5d0\uac8c\uae4c\uc9c0 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc804\ub2ec\ud560 \ud544\uc694\uac00 \uc788\uc744\uae4c? \uc6b0\ub9ac\ub294 \uc774\ub807\uac8c \ucf54\ub4dc\uac00 \ubcf5\uc7a1\ud574\uc9c0\ub294 \uac83\uc744 \uc6d0\ud558\uc9c0 \uc54a\uc558\ub2e4. CurrentMemoryContext\ub294 \uac00\ub2a5\ud55c \uc218\uba85\uc774 \uc9e7\uc740 context\ub97c \uac00\ub9ac\ud0a4\ub294 \uac83\uc774 \uc88b\ub2e4. \ucffc\ub9ac\uac00 \uc2e4\ud589\ub418\ub294 \ub3d9\uc548 CurrentMemoryContext\uac00 \uac00\ub9ac\ud0a4\ub294 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9e4 tuple\uc744 \ucc98\ub9ac\ud560 \ub54c\ub9c8\ub2e4 \ucd08\uae30\ud654\ub41c\ub2e4. \uadf9\ud788 \uc77c\ubd80 \ucf54\ub4dc\uc5d0\uc11c\ub9cc \ud2b8\ub79c\uc7ad\uc158\ubcf4\ub2e4 \uc218\uba85\uc774 \uae34 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uac00\ub9ac\ucf1c\uc57c \ud55c\ub2e4. \uc218\uba85\uc774 \uae34 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub294 \uba54\ubaa8\ub9ac \ub204\uc218\uc758 \uc704\ud5d8\uc131\uc744 \ub192\uc778\ub2e4. pfree/repalloc pfree \uc640 repalloc \ud574\uc81c\ud558\ub824\ub294 chunk\uac00 \ud604\uc7ac \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8(CurrentMemoryContext)\uc5d0 \ud3ec\ud568\ub418\ub4e0 \ub9d0\ub4e0 \ud638\ucd9c \uac00\ub2a5\ud558\ub2e4. chunk\uac00 \ud3ec\ud568\ub41c \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc790\ub3d9\uc73c\ub85c \ud638\ucd9c(invoke)\ub41c\ub2e4. Parent and Child Contexts \ubaa8\ub4e0 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc11c\ub85c\uc5d0 \ub300\ud574 \ub3c5\ub9bd\uc801\uc774\ub77c\uba74 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc744 \ucd94\uc801\ud558\uae30 \ud798\ub4e4\ub2e4. \uadf8\ub798\uc11c parent\uc640 child \ucee8\ud14d\uc2a4\ud2b8\ub85c \uc774\ub8e8\uc5b4\uc9c4 tree\ub97c \ub9cc\ub4e4\uc5c8\ub2e4. \ud558\ub098\uc758 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub9cc\ub4e4 \ub54c \uc0c8\ub85c\uc6b4 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc5b4\ub5a4 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uc758 child\uac00 \ub420\uc9c0 \uba85\uc2dc\ud560 \uc218 \uc788\ub2e4. \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9ce\uc740 child\ub97c \uac00\uc9c8 \uc218 \uc788\uc9c0\ub9cc parent\ub294 \ud558\ub098\ub9cc \uac00\uc9c8 \uc218 \uc788\ub2e4. \uc774\ub860\uc801\uc73c\ub85c\ub294 \uc774\ub7f0 tree\uac00 \uc5ec\ub7ec \uac1c\uac00 \ub418\uc5b4 \uc232\uc744 \uc774\ub8f0 \uc218 \uc788\uc9c0\ub9cc, \uc9c0\uae08\uc740 \ud558\ub098\uc758 \ucd5c\uc0c1\uc704 \ucee8\ud14d\uc2a4\ud2b8( TopMemoryContext )\ub9cc \uc0ac\uc6a9\ud558\uace0 \uc788\ub2e4. \ud558\ub098\uc758 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud558\uba74 \uadf8 \ud558\uc704\uc758 \ubaa8\ub4e0 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc774 \uc5f0\uc1c4\uc801\uc73c\ub85c \uc0ad\uc81c\ub41c\ub2e4. \uc774\ub7ec\ud55c \ud2b9\uc131\ub4e4 \ub54c\ubb38\uc5d0 \uc0c1\uc704 \ucee8\ud14d\uc2a4\ud2b8 \ud558\ub098\ub9cc \ucd94\uc801\ud558\uba74 \uba54\ubaa8\ub9ac \ub204\uc218\uc5d0 \ub300\ud574 \uac71\uc815\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4. \ud2b8\ub79c\uc7ad\uc158\uc774 \ub05d\ub0a0 \ub54c \uc0ad\uc81c\ud560 \ucee8\ud14d\uc2a4\ud2b8 \ud558\ub098\ub9cc\uc744 \ucd94\uc801\ud558\uace0 \ud2b8\ub79c\uc7ad\uc158\ubcf4\ub2e4 lifetime\uc774 \uc9e7\uc740 \ub098\uba38\uc9c0 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \ucd94\uc801\ud558\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc758 descendant\ub85c \uc0dd\uc131\ud558\uba74 \ub418\uae30 \ub54c\ubb38\uc774\ub2e4. Memory Context Reset/Delete Callbacks Postgres 9.5\ubd80\ud130 \ub3c4\uc785\ub41c \uc774 \uae30\ub2a5\uc740 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub2e8\uc21c\ud788 palloc\uc73c\ub85c \ud560\ub2f9\ud55c \uba54\ubaa8\ub9ac\ub97c \uad00\ub9ac\ud558\ub294 \uac83\uc744 \ub118\uc5b4 \ub2e4\uc591\ud55c \uc790\uc6d0\uc744 \uad00\ub9ac\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc900\ub2e4. \uc774\uac83\uc740 \"reset callback function\"\uc744 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ud568\uc73c\ub85c\uc368 \uac00\ub2a5\ud574\uc9c4\ub2e4. \uc774\ub807\uac8c \ub4f1\ub85d\ub41c \ud568\uc218\ub294 \ucee8\ud14d\uc2a4\ud2b8\uac00 \ub9ac\uc14b\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uae30 \uc9c1\uc804\uc5d0 \ud638\ucd9c\ub41c\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud2b9\uc815 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \ud560\ub2f9\ud55c \uac1d\uccb4\uc640 \uc5f0\uad00\ub41c \uc790\uc6d0\uc744 \ud574\uc81c(give up)\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc0c1\ud669\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud558\ub098\uc758 tuplesort object\uc640 \uad00\ub828 \uc788\ub294 \ud30c\uc77c\ub4e4\uc744 \ub2eb\ub294\ub2e4 \ud574\uc81c\ub418\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc0dd\uc131\ub41c \uc7a5\uae30 \uce90\uc2dc \uac1d\uccb4\ub4e4\uc5d0 \ub300\ud55c reference count\ub97c \ud574\uc81c palloc\uc73c\ub85c \uc0dd\uc131\ud55c object\uc5d0 \uc5f0\uad00\ub41c malloc \uba54\ubaa8\ub9ac \ud574\uc81c \ub9c8\uc9c0\ub9c9 \uc608\uc2dc\ub294 \uc21c\uc218\ud55c Postgres \ucf54\ub4dc\uc5d0 \ub300\ud574\uc11c\ub294 \ubc14\ub78c\uc9c1\ud558\uc9c0 \ubabb\ud55c \ud504\ub85c\uadf8\ub798\ubc0d \uad00\ud589\uc774\ub2e4. \ubaa8\ub4e0 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc740 \ud2b9\uc815 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c palloc\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. \ud558\uc9c0\ub9cc Postgres\uac00 \uc544\ub2cc \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud574\uc11c\ub294 \uc720\uc6a9\ud558\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 API\ub294 callback\uc758 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \ud638\ucd9c\uc790\uc5d0\uac8c MemoryCotnextCallback\uc774\ub77c\ub294 memory chunk\ub97c \uc694\uad6c\ud55c\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\ubaa8\ub9ac\ub294 callback\uc774 \ub4f1\ub85d\ub420(attached) \ucee8\ud14d\uc2a4\ud2b8\uc640 \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uadf8\ub798\uc57c \uc0ac\uc6a9\ub41c \ud6c4 \uc790\ub3d9\uc73c\ub85c \ud574\uc81c\ub418\uae30 \ub54c\ubb38\uc774\ub2e4. (callback\uc740 \ucee8\ud14d\uc2a4\ud2b8\uc758 \ub9ac\uc14b \ub610\ub294 \uc0ad\uc81c \uc9c1\uc804\uc5d0 \ud638\ucd9c\ub428) Globally Known Contexts \uc804\uc5ed\ubcc0\uc218\ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc788\ub2e4. \uc2dc\uc2a4\ud15c\uc5d0\ub294 \ucd94\uac00\uc801\uc778 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc774 \uc5ec\ub7ec \uac1c \uc874\uc7ac\ud560 \uc218 \uc788\uc9c0\ub9cc, \ubaa8\ub4e0 \ucd94\uac00\uc801\uc778 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \uc544\ub798\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc790\uc190\uc774\uc5b4\uc57c \ud55c\ub2e4. \uadf8\ub798\uc57c error\uac00 \ubc1c\uc0dd\ud558\ub354\ub77c\ub3c4 \uba54\ubaa8\ub9ac \ub204\uc218\ub97c \ub9c9\uc744 \uc218 \uc788\ub2e4. TopMemoryContext \ucee8\ud14d\uc2a4\ud2b8 tree\uc758 \ucd5c\uc0c1\ub2e8 level\uc758 \ucee8\ud14d\uc2a4\ud2b8 \uc911 \ud558\ub098\uc774\ub2e4. \ub2e4\ub978 \ubaa8\ub4e0 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc9c1/\uac04\uc811\uc801\uc778 child\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\ub294 \uac83\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c malloc \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud558\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \uc808\ub300 reset\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 DB \uc778\uc2a4\ud134\uc2a4\uc640 \uc218\uba85\uc744 \uac19\uc774 \ud558\uac70\ub098 \uc81c\uc5b4 \ubaa8\ub4c8\uc774 \uc801\uc808\ud55c \uc2dc\uc810\uc5d0 \uc0ad\uc81c\ud560 \uac83\ub4e4\uc744 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4. \uc608\ub85c\ub294 fd.c \uc758 open file table\uc774 \uc788\ub2e4. \uc815\ub9d0 \ud544\uc694\ud55c \uac83\uc774 \uc544\ub2cc\ub370 \uc774\uacf3\uc5d0 \ud560\ub2f9\ud558\ub294 \uac83\uacfc CurrentMemoryContext\uac00 \uc774\uacf3\uc744 \uac00\ub9ac\ud0a4\ub294 \uac83\uc740 \ud53c\ud574\uc57c \ud55c\ub2e4. PostmasterContext postmaster\uac00 \uc77c\ubc18\uc801\uc73c\ub85c \uc2e4\ud589\ub418\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc774\ub2e4. \ubc31\uc5d4\ub4dc\uac00 \uc0dd\uc131\ub41c \ud6c4 \ubc31\uc5d4\ub4dc\uc5d0\uc11c\ub294 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud560 \uc218 \uc788\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\ub294 postmaster\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud588\uc9c0\ub9cc \ubc31\uc5d4\ub4dc\uc5d0\uc11c\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uba54\ubaa8\ub9ac \ubcf5\uc0ac\ubcf8\uc774 \uc800\uc7a5\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. \ub2e8, non-EXEC_BACKEND \ube4c\ub4dc\uc5d0\uc11c\ub294 postmaster\uac00 \uac00\uc9c0\uace0 \uc788\ub294 pg_hba.conf\uc640 pg_indent.conf \ub370\uc774\ud130 \uc0ac\ubcf8\uc774 \ubc31\uc5d4\ub4dc \ud504\ub85c\uc138\uc2a4\uc758 \uc778\uc99d \uacfc\uc815\uc5d0\uc11c \uc9c1\uc811\uc801\uc73c\ub85c \uc0ac\uc6a9\ub41c\ub2e4. \ub530\ub77c\uc11c \uc774 \uc778\uc99d \uc791\uc5c5\uc774 \ub05d\ub098\uae30 \uc804\uc5d0\ub294 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub2e4. (Postmaster\ub294 TopMemoryContext\uc640 ErrorContext\ub9cc\uc744 \uac00\uc9c4\ub2e4. \ub098\uba38\uc9c0 \ucd5c\uc0c1\uc704 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \ubc31\uc5d4\ub4dc\uac00 \uc2dc\uc791(startup)\ub420 \ub54c \uc124\uc815\ub41c\ub2e4) CacheMemoryContext relcache, catcache \uadf8\ub9ac\uace0 \uad00\ub828 \ubaa8\ub4c8\ub4e4\uc774 \uc800\uc7a5\ub418\ub294 \uc601\uad6c\uc801\uc778 \uc800\uc7a5\uc18c\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9ac\uc14b\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uc9c0 \uc54a\ub294\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 TopMemoryContext\uc640 \uad6c\ubcc4\ud558\ub294 \uac83\uc774 \ud544\uc218\uc801\uc774\uc9c0\ub294 \uc54a\ub2e4. \ud558\uc9c0\ub9cc \ub514\ubc84\uae45\uc744 \uc704\ud574 \uad6c\ubcc4\ud560 \uac00\uce58\uac00 \uc788\ub2e4. CacheMemoryContext\ub294 \uc790\uc2e0\ubcf4\ub2e4 \uc218\uba85\uc774 \uc9e7\uc740 child\ub97c \uac00\uc9c4\ub2e4. relcache entry\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uc774\ub7f0 child\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ub807\uac8c \ud558\uba74 rule parsetree\ub97c \uc27d\uac8c \ud574\uc81c\ud560 \uc218 \uc788\ub2e4. MessageContext \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud504\ub860\ud2b8\uc5d4\ub4dc\uac00 \uc804\ub2ec\ud55c \ud604\uc7ac command message \ubfd0\ub9cc \uc544\ub2c8\ub77c \ud604\uc7ac \uba54\uc138\uc9c0\uc640 \uc218\uba85\uc744 \uac19\uc774\ud558\ub294 \uba54\ubaa8\ub9ac \uacf5\uac04(storage)\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uace0 \uc788\ub2e4. Simple-Query \ubaa8\ub4dc\uc5d0\uc11c parse tree\uc640 plan tree\uac00 \uc5ec\uae30\uc5d0 \uc800\uc7a5\ub420 \uc218 \uc788\ub2e4. PostgresMain\uc758 \ubc14\uae65 loop\uc758 \uac01 \uc0ac\uc774\ud074\ub9c8\ub2e4 \uc774 \ucee8\ud14d\uc2a4\ub294 \ub9ac\uc14b\ub418\uace0 \ubaa8\ub4e0 child\ub294 \uc0ad\uc81c\ub41c\ub2e4. \uc774\uac83\uc740 \ud2b8\ub79c\uc7ad\uc158 \ub2e8\uc704\uc640 portal \ub2e8\uc704\uc758 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uacfc \ubd84\ub9ac\ub418\uc5b4 \uc788\ub2e4. \ud558\ub098\uc758 \ucffc\ub9ac \ubb38\uc790\uc5f4\uc758 \uc218\uba85\uc740 \ud558\ub098\uc758 \ud2b8\ub79c\uc7ad\uc158\uc774\ub098 portal\ubcf4\ub2e4 \uae38\uac70\ub098 \uc9e7\uc744 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. TopTransactionContext \ucd5c\uc0c1\uc704 \uacc4\uce35(Top-level) \ud2b8\ub79c\uc7ad\uc158\uc774 \uc885\ub8cc\ub420\ub54c\uae4c\uc9c0 \uc0b4\uc544\uc788\ub294 \ubaa8\ub4e0 \uac83\ub4e4\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc774\ub2e4. \uc774 \ucd5c\uc0c1\uc704 \uacc4\uce35 \ud2b8\ub79c\uc7ad\uc158 \ud55c \uc0ac\uc774\ud074\uc774 \uc885\ub8cc\ub418\uba74 \ubaa8\ub4e0 child\ub4e4\uc740 \uc0ad\uc81c\ub418\uace0 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9ac\uc14b\ub41c\ub2e4. \ub300\ubd80\ubd84\uc758 \uc0c1\ud669\uc5d0\uc11c \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \uc9c1\uc811 \uacf5\uac04\uc744 \ud560\ub2f9\ud558\uc9c0\ub294 \uc54a\uace0 CurTransactionContext\uc5d0\uc11c \ud560\ub2f9\ud55c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \ud560\ub2f9\ub418\ub294 \uacf5\uac04\uc5d0\ub294 \uc5ec\ub7ec \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158(subtransaction)\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud574(\uadf8 \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc218\uba85\uc744 \ucd08\uc6d4\ud574\uc11c \uc874\uc7ac\ud558\ub294) \ud544\uc694\ud55c \uc815\ubcf4\ub4e4\uc774 \uc800\uc7a5\ub41c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud588\ub2e4\uace0 \ud574\uc11c \uc989\uc2dc \uccad\uc18c(clear) \ub418\uc9c0\ub294 \uc54a\ub294\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \ube14\ub85d\uc774 COMMIT \ub610\ub294 ROLLBACK\uc5d0 \uc758\ud574 \uc885\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uace0 \uc788\ub2e4. CurTransactionContext \ud604\uc7ac \ud2b8\ub79c\uc7ad\uc158\uc774 \uc885\ub8cc\ub420\ub54c\uae4c\uc9c0 \uc720\uc9c0\ub418\uc5b4\uc57c \ud558\ub294 \uc815\ubcf4\ub4e4\uc744 \uc800\uc7a5\ud55c\ub2e4. \ud2b9\ud788 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158 \ucee4\ubc0b \uc2dc\uc5d0 \ud544\uc694\ud55c \uc815\ubcf4\ub97c \uc800\uc7a5\ud55c\ub2e4. \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ud2b8\ub79c\uc7ad\uc158\uc774 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc774\uba74 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 TopTransactionContext\uc640 \ub3d9\uc77c\ud558\ub2e4. \ubc18\ub300\ub85c \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc778 \uacbd\uc6b0 child context\ub97c \uac00\ub9ac\ud0a8\ub2e4. \ud558\ub098\uc758 \ud2b8\ub79c\uc7ad\uc158\uc774 \uc885\ub8cc(abort)\ub418\uba74 \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158\uc758 CurTransactionContext\ub294 \uc885\ub8cc \ucc98\ub9ac\ub97c \ub05d\ub0b8 \ub4a4 \uc81c\uac70(thrown away)\ub41c\ub2e4. \ud558\uc9c0\ub9cc \ucee4\ubc0b\ub41c \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 CurTransactionContext\ub294 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc774 \ucee4\ubc0b\ub420 \ub54c\uae4c\uc9c0 \uc720\uc9c0\ub41c\ub2e4. \uc774\ub7f0 \ub9e4\ucee4\ub2c8\uc998\uc740 \uc2e4\ud328\ud55c \ud2b8\ub79c\uc7ad\uc158\uc758 \ub370\uc774\ud130\ub97c \ud544\uc694 \uc774\uc0c1\uc73c\ub85c \uc624\ub798 \uc720\uc9c0\ud558\ub294 \uac83\uc744 \ub9c9\ub294\ub2e4. \uc774\ub7f0 \ud2b9\uc131 \ub54c\ubb38\uc5d0, \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158 \uc911\ub2e8(abort) \uacfc\uc815\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \uc801\uc808\ud788 \ud574\uc81c\ud574\uc8fc\ub294\ub370 \uc2e0\uacbd \uc368\uc57c \ud55c\ub2e4. \uc911\ub2e8\ub41c \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc0c1\ud0dc(\ub370\uc774\ud130)\ub294 \uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc5b4\ub5a4 \ud3ec\uc778\ud130\ub4e4\ub3c4 \uac00\ub9ac\ud0a4\uba74 \uc548\ub41c\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 dangling(\uc774\ubbf8 \ud574\uc81c\ub41c \uacf5\uac04\uc744 \uac00\ub9ac\ud0a4\ub294) \ud3ec\uc778\ud130\ub97c \uac00\uc9c0\uac8c \ub418\uace0 \uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \ucee4\ubc0b\uc5d0\uc11c \uc0ac\uace0\ub97c \uc720\ubc1c\ud55c\ub2e4. CurTransactionContext\uc5d0 \uc800\uc7a5\ub418\ub294 \ub370\uc774\ud130\uc758 \uc608\uc2dc\uc5d0\ub294 \ub300\uae30\uc911(pending)\uc778 NOTIFY \uba54\uc138\uc9c0\uac00 \uc788\ub2e4. \uc774 \uba54\uc138\uc9c0\ub4e4\uc740 \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc911\ub2e8 \uc5c6\uc774 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \ucee4\ubc0b\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc804\uc1a1\ub41c\ub2e4. \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc5d0\uc11c \uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc73c\ub85c \uc804\uc1a1\ud55c\ub2e4. PortalContext \uc774\uac83\uc740 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc874\uc7ac\ud558\ub294 \ud2b8\ub79c\uc7ad\uc158\uc740 \uc544\ub2c8\ub2e4. \ud604\uc7ac \ud65c\uc131\ud654\ub41c execution portal\uc758 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uac00\ub9ac\ud0a4\ub294 \uc804\uc5ed \ubcc0\uc218\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud604\uc7ac portal\uc774 \uc694\uad6c\ud558\ub294 \ub9cc\ud07c \uc9c0\uc18d\ub418\uc5b4\uc57c \ud558\ub294 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub294\ub370 \ud544\uc694\ud55c \uacf5\uac04\uc744 \ud560\ub2f9\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. ErrorContext \uc601\uad6c\uc801\uc778 \ucee8\ud14d\uc2a4\ud2b8\uc774\ub2e4. \uc5d0\ub7ec \ubcf5\uad6c(recovery) \uacfc\uc815\uc5d0\uc11c \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub85c \uc804\ud658\ub418\uace0 recovery\uac00 \uc644\ub8cc\ub418\uba74 \ub9ac\uc14b\ub41c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud56d\uc0c1 \uba87 KB\uc758 \uacf5\uac04\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubc31\uc5d4\ub4dc\uc758 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud558\ub354\ub77c\ub3c4 \uc5d0\ub7ec \ubcf5\uad6c\ub97c \uc704\ud55c \uba54\ubaa8\ub9ac\ub294 \ubcf4\uc7a5\ub41c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8 \ub355\ubd84\uc5d0 out-of-memory \uc0c1\ud669\ub3c4 FATAL error\uac00 \uc544\ub2cc normal error\ub85c \ub300\uc751\ud560 \uc218 \uc788\ub2e4. references PostgreSQL \uc18c\uc2a4\ucf54\ub4dc mmgr/README","title":"mmgr"},{"location":"postgresql/mmgr/#postgresql-mmgr","text":"src/backend/utils/mmgr/README \ubc88\uc5ed \ubc0f \uc694\uc57d","title":"[PostgreSQL] mmgr"},{"location":"postgresql/mmgr/#background","text":"postgresql\uc5d0\uc11c \ub300\ubd80\ubd84\uc758 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc740 \"memory context\"\ub4e4\uc5d0\uc11c \uc9c4\ud589\ub41c\ub2e4 memory context\ub780 \ubcf4\ud1b5 src/backend/utils/mmgr/aset.c \uc5d0 \uad6c\ud604\ub41c AllocSet\ub4e4\uc744 \uc758\ubbf8\ud55c\ub2e4 \uc624\ubc84\ud5e4\ub4dc\ub97c \ucd5c\uc18c\ud654\ud558\uba74\uc11c \uba54\ubaa8\ub9ac\ub97c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc740 \uba54\ubaa8\ub9ac\uc758 \uc218\uba85\uc5d0 \ub9de\ub294 \uc801\uc808\ud55c context\ub4e4\uc758 \uc9d1\ud569(set)\uc744 \uc815\uc758\ud558\ub294 \uac83\uc774\ub2e4 memory context\uc758 \uae30\ucd08\uc801\uc778 \uc5f0\uc0b0\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4 context \uc0dd\uc131 context \ub0b4\uc5d0\uc11c \uba54\ubaa8\ub9ac chunk\ub97c \ud560\ub2f9 context \uc0ad\uc81c(\ud574\ub2f9 context\uc5d0 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uba54\ubaa8\ub9ac\uac00 \ud574\uc81c\ub41c\ub2e4) \ud2b9\uc815 context\uc5d0 \ud560\ub2f9\ub41c \uba54\ubaa8\ub9ac\uc758 \ucd1d\ub7c9 \uc870\ud68c (context\uac00 \uac00\uc9c0\uace0 \uc788\ub294 chunk\uc758 \ucd1d\ub7c9\uc774 \uc544\ub2cc raw memory\uc758 \ucd1d\ub7c9) raw \uba54\ubaa8\ub9ac\ub97c \uc791\uac8c \ub098\ub204\uba74 chunk\uac00 \ub41c\ub2e4 CurrentMemoryContext \ub77c\ub294 \uc804\uc5ed \ubcc0\uc218\ub294 \ud56d\uc0c1 \"\ud604\uc7ac\" context\ub97c \uc758\ubbf8\ud55c\ub2e4 palloc \uc740 \ub0b4\ubd80\uc801\uc73c\ub85c \"\ud604\uc7ac\" context\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud55c\ub2e4 MemoryContextSwitchTo \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 context\ub97c \ud604\uc7ac context\ub85c \uc124\uc815\ud558\uace0 \uc774\uc804\uc758 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ubc18\ud658\ud55c\ub2e4. \uadf8\ub798\uc11c \uc774 \ud568\uc218\ub97c \ud638\ucd9c\ud55c \ud638\ucd9c\uc790\ub294 \uc774\uc804 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ubcf5\uc6d0 \ud560 \uc218 \uc788\ub2e4 malloc , free \ud568\uc218\ub97c \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\ub294 \uac83 \ubcf4\ub2e4 \uba54\ubaa8\ub9ac \ucee8\ud0dd\uc2a4\ud2b8\ub97c \ud1b5\ud574 \ud638\ucd9c\ud560 \ub54c\uc758 \uc774\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4 \ud558\ub098\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \ud3ec\ud568\ub41c \uc5ec\ub7ec chunk\ub97c \ud55c \ubc88\uc5d0 \ud574\uc81c\ud560 \uc218 \uc788\ub2e4. \uc774\uac83\uc740 chunk \uac01\uac01\uc5d0 \ub300\ud574 \ud574\uc81c \uc694\uccad\uc744 \ud558\ub294 \uac83\ubcf4\ub2e4 \ube60\ub974\uace0 \uc548\uc804\ud558\ub2e4 postgresql\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158\uc758 \ub05d\uc5d0 \uba54\ubaa8\ub9ac\ub97c \uc815\ub9ac(clean up)\ud560 \ub54c \uc774 \uc810\uc744 \uc774\uc6a9\ud55c\ub2e4. \ud2b8\ub79c\uc7ad\uc158 \ub610\ub294 \ub354 \uc9e7\uc740 \uc218\uba85\uc744 \uac00\uc9c4 \ubaa8\ub4e0 \ud65c\uc131 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub9ac\uc14b \ud568\uc73c\ub85c\uc368, \ubaa8\ub4e0 \uc77c\uc2dc\uc801\uc778(transient) \uba54\ubaa8\ub9ac\ub97c \ud68c\uc218\ud560 \uc218 \uc788\ub2e4","title":"Background"},{"location":"postgresql/mmgr/#palloc-api","text":"palloc\uc740 malloc\uacfc \uc720\uc0ac\ud558\uc9c0\ub9cc \ub2e4\ub978\uc810\ub3c4 \uc788\ub2e4 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud55c \uacbd\uc6b0(Out Of Memory) palloc\uacfc repalloc\uc740 elog(ERROR) \ub97c \ud1b5\ud574 \uc885\ub8cc\ud55c\ub2e4. NULL\uc744 \ubc18\ud658\ud558\uc9c0 \uc54a\ub294\ub2e4. palloc_extended \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774\ub7f0 \ud589\ub3d9\uc744 override\ud560 \uc218 \uc788\ub2e4 palloc(0) \ub294 \uc720\ud6a8\ud55c \uc5f0\uc0b0(operation)\uc774\ub2e4. NULL\uc744 \ubc18\ud658\ud558\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc14\uc774\ud2b8\uac00 \uc5c6\ub294 chunk\ub97c \ubc18\ud658\ud55c\ub2e4. \uc774 chunk\ub294 \uc774\ud6c4\uc5d0 repalloc\uc744 \ud1b5\ud574 \ucee4\uc9c8 \uc218 \uc788\ub2e4. \ubc18\ub300\ub85c repalloc \uc740 \ud06c\uae30\ub97c 0\uc73c\ub85c \uc7ac\ud560\ub2f9 \ud558\ub294 \uac83\uc744 \ud5c8\uc6a9\ud55c\ub2e4 pfree \uc640 repalloc \uc740 NULL\ud3ec\uc778\ud130\ub97c \ubc1b\uc9c0 \uc54a\ub294\ub2e4. repalloc \uc740 \ud604\uc7ac \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \uc885\uc18d\ub418\uc9c0 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \ud604\uc7ac \uc5b4\ub5a4 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\ub294\uc9c0\ub294 \uc54c\uc544\uc57c \ud55c\ub2e4","title":"palloc API"},{"location":"postgresql/mmgr/#the-current-memory-context","text":"\ud568\uc218\ub97c \ud638\ucd9c\ud560 \ub54c\ub9c8\ub2e4 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc804\ub2ec\ud558\ub294 \uac83\uc740 notational overhead\uac00 \ub418\uae30 \ub54c\ubb38\uc5d0 \ud56d\uc0c1 \ud604\uc7ac\uc758 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c CurrentMemoryContext\ub97c \ud1b5\ud574 \ucc38\uc870\ud560 \uc218 \uc788\ub2e4. \uc774\ub7ec\ud55c \uac1c\ub150\uc774 \uc5c6\ub2e4\uba74 copyObject \ud568\uc218\ub4e4(routines) \uc744 \ud638\ucd9c\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud56d\uc0c1 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc804\ub2ec\ud574\uc57c \ud558\uace0 \ud3ec\uc778\ud130\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub4e4\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc774\ub2e4. \ud568\uc218 \ub0b4\ubd80\uc5d0\uc11c \uc77c\uc2dc\uc801\uc73c\ub85c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790\uc5d0\uac8c \uadf8 \ud3ec\uc778\ud130\ub97c \ubc18\ud658\ud558\uc9c0 \uc54a\ub294 \ud568\uc218\uc5d0\uac8c\uae4c\uc9c0 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc804\ub2ec\ud560 \ud544\uc694\uac00 \uc788\uc744\uae4c? \uc6b0\ub9ac\ub294 \uc774\ub807\uac8c \ucf54\ub4dc\uac00 \ubcf5\uc7a1\ud574\uc9c0\ub294 \uac83\uc744 \uc6d0\ud558\uc9c0 \uc54a\uc558\ub2e4. CurrentMemoryContext\ub294 \uac00\ub2a5\ud55c \uc218\uba85\uc774 \uc9e7\uc740 context\ub97c \uac00\ub9ac\ud0a4\ub294 \uac83\uc774 \uc88b\ub2e4. \ucffc\ub9ac\uac00 \uc2e4\ud589\ub418\ub294 \ub3d9\uc548 CurrentMemoryContext\uac00 \uac00\ub9ac\ud0a4\ub294 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9e4 tuple\uc744 \ucc98\ub9ac\ud560 \ub54c\ub9c8\ub2e4 \ucd08\uae30\ud654\ub41c\ub2e4. \uadf9\ud788 \uc77c\ubd80 \ucf54\ub4dc\uc5d0\uc11c\ub9cc \ud2b8\ub79c\uc7ad\uc158\ubcf4\ub2e4 \uc218\uba85\uc774 \uae34 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uac00\ub9ac\ucf1c\uc57c \ud55c\ub2e4. \uc218\uba85\uc774 \uae34 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub294 \uba54\ubaa8\ub9ac \ub204\uc218\uc758 \uc704\ud5d8\uc131\uc744 \ub192\uc778\ub2e4.","title":"The Current Memory Context"},{"location":"postgresql/mmgr/#pfreerepalloc","text":"pfree \uc640 repalloc \ud574\uc81c\ud558\ub824\ub294 chunk\uac00 \ud604\uc7ac \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8(CurrentMemoryContext)\uc5d0 \ud3ec\ud568\ub418\ub4e0 \ub9d0\ub4e0 \ud638\ucd9c \uac00\ub2a5\ud558\ub2e4. chunk\uac00 \ud3ec\ud568\ub41c \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc790\ub3d9\uc73c\ub85c \ud638\ucd9c(invoke)\ub41c\ub2e4.","title":"pfree/repalloc"},{"location":"postgresql/mmgr/#parent-and-child-contexts","text":"\ubaa8\ub4e0 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc11c\ub85c\uc5d0 \ub300\ud574 \ub3c5\ub9bd\uc801\uc774\ub77c\uba74 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc744 \ucd94\uc801\ud558\uae30 \ud798\ub4e4\ub2e4. \uadf8\ub798\uc11c parent\uc640 child \ucee8\ud14d\uc2a4\ud2b8\ub85c \uc774\ub8e8\uc5b4\uc9c4 tree\ub97c \ub9cc\ub4e4\uc5c8\ub2e4. \ud558\ub098\uc758 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub9cc\ub4e4 \ub54c \uc0c8\ub85c\uc6b4 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc5b4\ub5a4 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uc758 child\uac00 \ub420\uc9c0 \uba85\uc2dc\ud560 \uc218 \uc788\ub2e4. \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9ce\uc740 child\ub97c \uac00\uc9c8 \uc218 \uc788\uc9c0\ub9cc parent\ub294 \ud558\ub098\ub9cc \uac00\uc9c8 \uc218 \uc788\ub2e4. \uc774\ub860\uc801\uc73c\ub85c\ub294 \uc774\ub7f0 tree\uac00 \uc5ec\ub7ec \uac1c\uac00 \ub418\uc5b4 \uc232\uc744 \uc774\ub8f0 \uc218 \uc788\uc9c0\ub9cc, \uc9c0\uae08\uc740 \ud558\ub098\uc758 \ucd5c\uc0c1\uc704 \ucee8\ud14d\uc2a4\ud2b8( TopMemoryContext )\ub9cc \uc0ac\uc6a9\ud558\uace0 \uc788\ub2e4. \ud558\ub098\uc758 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud558\uba74 \uadf8 \ud558\uc704\uc758 \ubaa8\ub4e0 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc774 \uc5f0\uc1c4\uc801\uc73c\ub85c \uc0ad\uc81c\ub41c\ub2e4. \uc774\ub7ec\ud55c \ud2b9\uc131\ub4e4 \ub54c\ubb38\uc5d0 \uc0c1\uc704 \ucee8\ud14d\uc2a4\ud2b8 \ud558\ub098\ub9cc \ucd94\uc801\ud558\uba74 \uba54\ubaa8\ub9ac \ub204\uc218\uc5d0 \ub300\ud574 \uac71\uc815\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4. \ud2b8\ub79c\uc7ad\uc158\uc774 \ub05d\ub0a0 \ub54c \uc0ad\uc81c\ud560 \ucee8\ud14d\uc2a4\ud2b8 \ud558\ub098\ub9cc\uc744 \ucd94\uc801\ud558\uace0 \ud2b8\ub79c\uc7ad\uc158\ubcf4\ub2e4 lifetime\uc774 \uc9e7\uc740 \ub098\uba38\uc9c0 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \ucd94\uc801\ud558\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc758 descendant\ub85c \uc0dd\uc131\ud558\uba74 \ub418\uae30 \ub54c\ubb38\uc774\ub2e4.","title":"Parent and Child Contexts"},{"location":"postgresql/mmgr/#memory-context-resetdelete-callbacks","text":"Postgres 9.5\ubd80\ud130 \ub3c4\uc785\ub41c \uc774 \uae30\ub2a5\uc740 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \ub2e8\uc21c\ud788 palloc\uc73c\ub85c \ud560\ub2f9\ud55c \uba54\ubaa8\ub9ac\ub97c \uad00\ub9ac\ud558\ub294 \uac83\uc744 \ub118\uc5b4 \ub2e4\uc591\ud55c \uc790\uc6d0\uc744 \uad00\ub9ac\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc900\ub2e4. \uc774\uac83\uc740 \"reset callback function\"\uc744 \uba54\ubaa8\ub9ac \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \ub4f1\ub85d\ud568\uc73c\ub85c\uc368 \uac00\ub2a5\ud574\uc9c4\ub2e4. \uc774\ub807\uac8c \ub4f1\ub85d\ub41c \ud568\uc218\ub294 \ucee8\ud14d\uc2a4\ud2b8\uac00 \ub9ac\uc14b\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uae30 \uc9c1\uc804\uc5d0 \ud638\ucd9c\ub41c\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud2b9\uc815 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \ud560\ub2f9\ud55c \uac1d\uccb4\uc640 \uc5f0\uad00\ub41c \uc790\uc6d0\uc744 \ud574\uc81c(give up)\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc0c1\ud669\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud558\ub098\uc758 tuplesort object\uc640 \uad00\ub828 \uc788\ub294 \ud30c\uc77c\ub4e4\uc744 \ub2eb\ub294\ub2e4 \ud574\uc81c\ub418\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc0dd\uc131\ub41c \uc7a5\uae30 \uce90\uc2dc \uac1d\uccb4\ub4e4\uc5d0 \ub300\ud55c reference count\ub97c \ud574\uc81c palloc\uc73c\ub85c \uc0dd\uc131\ud55c object\uc5d0 \uc5f0\uad00\ub41c malloc \uba54\ubaa8\ub9ac \ud574\uc81c \ub9c8\uc9c0\ub9c9 \uc608\uc2dc\ub294 \uc21c\uc218\ud55c Postgres \ucf54\ub4dc\uc5d0 \ub300\ud574\uc11c\ub294 \ubc14\ub78c\uc9c1\ud558\uc9c0 \ubabb\ud55c \ud504\ub85c\uadf8\ub798\ubc0d \uad00\ud589\uc774\ub2e4. \ubaa8\ub4e0 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc740 \ud2b9\uc815 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c palloc\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4. \ud558\uc9c0\ub9cc Postgres\uac00 \uc544\ub2cc \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ub300\ud574\uc11c\ub294 \uc720\uc6a9\ud558\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 API\ub294 callback\uc758 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \ud638\ucd9c\uc790\uc5d0\uac8c MemoryCotnextCallback\uc774\ub77c\ub294 memory chunk\ub97c \uc694\uad6c\ud55c\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc774 \uba54\ubaa8\ub9ac\ub294 callback\uc774 \ub4f1\ub85d\ub420(attached) \ucee8\ud14d\uc2a4\ud2b8\uc640 \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4. \uadf8\ub798\uc57c \uc0ac\uc6a9\ub41c \ud6c4 \uc790\ub3d9\uc73c\ub85c \ud574\uc81c\ub418\uae30 \ub54c\ubb38\uc774\ub2e4. (callback\uc740 \ucee8\ud14d\uc2a4\ud2b8\uc758 \ub9ac\uc14b \ub610\ub294 \uc0ad\uc81c \uc9c1\uc804\uc5d0 \ud638\ucd9c\ub428)","title":"Memory Context Reset/Delete Callbacks"},{"location":"postgresql/mmgr/#globally-known-contexts","text":"\uc804\uc5ed\ubcc0\uc218\ub97c \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc788\ub2e4. \uc2dc\uc2a4\ud15c\uc5d0\ub294 \ucd94\uac00\uc801\uc778 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc774 \uc5ec\ub7ec \uac1c \uc874\uc7ac\ud560 \uc218 \uc788\uc9c0\ub9cc, \ubaa8\ub4e0 \ucd94\uac00\uc801\uc778 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \uc544\ub798\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc790\uc190\uc774\uc5b4\uc57c \ud55c\ub2e4. \uadf8\ub798\uc57c error\uac00 \ubc1c\uc0dd\ud558\ub354\ub77c\ub3c4 \uba54\ubaa8\ub9ac \ub204\uc218\ub97c \ub9c9\uc744 \uc218 \uc788\ub2e4.","title":"Globally Known Contexts"},{"location":"postgresql/mmgr/#topmemorycontext","text":"\ucee8\ud14d\uc2a4\ud2b8 tree\uc758 \ucd5c\uc0c1\ub2e8 level\uc758 \ucee8\ud14d\uc2a4\ud2b8 \uc911 \ud558\ub098\uc774\ub2e4. \ub2e4\ub978 \ubaa8\ub4e0 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc758 \uc9c1/\uac04\uc811\uc801\uc778 child\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud558\ub294 \uac83\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c malloc \uc744 \ud638\ucd9c\ud558\ub294 \uac83\uacfc \ub3d9\uc77c\ud558\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \uc808\ub300 reset\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 DB \uc778\uc2a4\ud134\uc2a4\uc640 \uc218\uba85\uc744 \uac19\uc774 \ud558\uac70\ub098 \uc81c\uc5b4 \ubaa8\ub4c8\uc774 \uc801\uc808\ud55c \uc2dc\uc810\uc5d0 \uc0ad\uc81c\ud560 \uac83\ub4e4\uc744 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4. \uc608\ub85c\ub294 fd.c \uc758 open file table\uc774 \uc788\ub2e4. \uc815\ub9d0 \ud544\uc694\ud55c \uac83\uc774 \uc544\ub2cc\ub370 \uc774\uacf3\uc5d0 \ud560\ub2f9\ud558\ub294 \uac83\uacfc CurrentMemoryContext\uac00 \uc774\uacf3\uc744 \uac00\ub9ac\ud0a4\ub294 \uac83\uc740 \ud53c\ud574\uc57c \ud55c\ub2e4.","title":"TopMemoryContext"},{"location":"postgresql/mmgr/#postmastercontext","text":"postmaster\uac00 \uc77c\ubc18\uc801\uc73c\ub85c \uc2e4\ud589\ub418\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc774\ub2e4. \ubc31\uc5d4\ub4dc\uac00 \uc0dd\uc131\ub41c \ud6c4 \ubc31\uc5d4\ub4dc\uc5d0\uc11c\ub294 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud560 \uc218 \uc788\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\ub294 postmaster\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud588\uc9c0\ub9cc \ubc31\uc5d4\ub4dc\uc5d0\uc11c\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uba54\ubaa8\ub9ac \ubcf5\uc0ac\ubcf8\uc774 \uc800\uc7a5\ub418\uc5b4 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. \ub2e8, non-EXEC_BACKEND \ube4c\ub4dc\uc5d0\uc11c\ub294 postmaster\uac00 \uac00\uc9c0\uace0 \uc788\ub294 pg_hba.conf\uc640 pg_indent.conf \ub370\uc774\ud130 \uc0ac\ubcf8\uc774 \ubc31\uc5d4\ub4dc \ud504\ub85c\uc138\uc2a4\uc758 \uc778\uc99d \uacfc\uc815\uc5d0\uc11c \uc9c1\uc811\uc801\uc73c\ub85c \uc0ac\uc6a9\ub41c\ub2e4. \ub530\ub77c\uc11c \uc774 \uc778\uc99d \uc791\uc5c5\uc774 \ub05d\ub098\uae30 \uc804\uc5d0\ub294 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub2e4. (Postmaster\ub294 TopMemoryContext\uc640 ErrorContext\ub9cc\uc744 \uac00\uc9c4\ub2e4. \ub098\uba38\uc9c0 \ucd5c\uc0c1\uc704 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uc740 \ubc31\uc5d4\ub4dc\uac00 \uc2dc\uc791(startup)\ub420 \ub54c \uc124\uc815\ub41c\ub2e4)","title":"PostmasterContext"},{"location":"postgresql/mmgr/#cachememorycontext","text":"relcache, catcache \uadf8\ub9ac\uace0 \uad00\ub828 \ubaa8\ub4c8\ub4e4\uc774 \uc800\uc7a5\ub418\ub294 \uc601\uad6c\uc801\uc778 \uc800\uc7a5\uc18c\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9ac\uc14b\ub418\uac70\ub098 \uc0ad\uc81c\ub418\uc9c0 \uc54a\ub294\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 TopMemoryContext\uc640 \uad6c\ubcc4\ud558\ub294 \uac83\uc774 \ud544\uc218\uc801\uc774\uc9c0\ub294 \uc54a\ub2e4. \ud558\uc9c0\ub9cc \ub514\ubc84\uae45\uc744 \uc704\ud574 \uad6c\ubcc4\ud560 \uac00\uce58\uac00 \uc788\ub2e4. CacheMemoryContext\ub294 \uc790\uc2e0\ubcf4\ub2e4 \uc218\uba85\uc774 \uc9e7\uc740 child\ub97c \uac00\uc9c4\ub2e4. relcache entry\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uc774\ub7f0 child\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc774\ub807\uac8c \ud558\uba74 rule parsetree\ub97c \uc27d\uac8c \ud574\uc81c\ud560 \uc218 \uc788\ub2e4.","title":"CacheMemoryContext"},{"location":"postgresql/mmgr/#messagecontext","text":"\uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud504\ub860\ud2b8\uc5d4\ub4dc\uac00 \uc804\ub2ec\ud55c \ud604\uc7ac command message \ubfd0\ub9cc \uc544\ub2c8\ub77c \ud604\uc7ac \uba54\uc138\uc9c0\uc640 \uc218\uba85\uc744 \uac19\uc774\ud558\ub294 \uba54\ubaa8\ub9ac \uacf5\uac04(storage)\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uace0 \uc788\ub2e4. Simple-Query \ubaa8\ub4dc\uc5d0\uc11c parse tree\uc640 plan tree\uac00 \uc5ec\uae30\uc5d0 \uc800\uc7a5\ub420 \uc218 \uc788\ub2e4. PostgresMain\uc758 \ubc14\uae65 loop\uc758 \uac01 \uc0ac\uc774\ud074\ub9c8\ub2e4 \uc774 \ucee8\ud14d\uc2a4\ub294 \ub9ac\uc14b\ub418\uace0 \ubaa8\ub4e0 child\ub294 \uc0ad\uc81c\ub41c\ub2e4. \uc774\uac83\uc740 \ud2b8\ub79c\uc7ad\uc158 \ub2e8\uc704\uc640 portal \ub2e8\uc704\uc758 \ucee8\ud14d\uc2a4\ud2b8\ub4e4\uacfc \ubd84\ub9ac\ub418\uc5b4 \uc788\ub2e4. \ud558\ub098\uc758 \ucffc\ub9ac \ubb38\uc790\uc5f4\uc758 \uc218\uba85\uc740 \ud558\ub098\uc758 \ud2b8\ub79c\uc7ad\uc158\uc774\ub098 portal\ubcf4\ub2e4 \uae38\uac70\ub098 \uc9e7\uc744 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4.","title":"MessageContext"},{"location":"postgresql/mmgr/#toptransactioncontext","text":"\ucd5c\uc0c1\uc704 \uacc4\uce35(Top-level) \ud2b8\ub79c\uc7ad\uc158\uc774 \uc885\ub8cc\ub420\ub54c\uae4c\uc9c0 \uc0b4\uc544\uc788\ub294 \ubaa8\ub4e0 \uac83\ub4e4\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \ucee8\ud14d\uc2a4\ud2b8\uc774\ub2e4. \uc774 \ucd5c\uc0c1\uc704 \uacc4\uce35 \ud2b8\ub79c\uc7ad\uc158 \ud55c \uc0ac\uc774\ud074\uc774 \uc885\ub8cc\ub418\uba74 \ubaa8\ub4e0 child\ub4e4\uc740 \uc0ad\uc81c\ub418\uace0 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ub9ac\uc14b\ub41c\ub2e4. \ub300\ubd80\ubd84\uc758 \uc0c1\ud669\uc5d0\uc11c \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0 \uc9c1\uc811 \uacf5\uac04\uc744 \ud560\ub2f9\ud558\uc9c0\ub294 \uc54a\uace0 CurTransactionContext\uc5d0\uc11c \ud560\ub2f9\ud55c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \ud560\ub2f9\ub418\ub294 \uacf5\uac04\uc5d0\ub294 \uc5ec\ub7ec \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158(subtransaction)\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud574(\uadf8 \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc218\uba85\uc744 \ucd08\uc6d4\ud574\uc11c \uc874\uc7ac\ud558\ub294) \ud544\uc694\ud55c \uc815\ubcf4\ub4e4\uc774 \uc800\uc7a5\ub41c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud588\ub2e4\uace0 \ud574\uc11c \uc989\uc2dc \uccad\uc18c(clear) \ub418\uc9c0\ub294 \uc54a\ub294\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \ube14\ub85d\uc774 COMMIT \ub610\ub294 ROLLBACK\uc5d0 \uc758\ud574 \uc885\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uace0 \uc788\ub2e4.","title":"TopTransactionContext"},{"location":"postgresql/mmgr/#curtransactioncontext","text":"\ud604\uc7ac \ud2b8\ub79c\uc7ad\uc158\uc774 \uc885\ub8cc\ub420\ub54c\uae4c\uc9c0 \uc720\uc9c0\ub418\uc5b4\uc57c \ud558\ub294 \uc815\ubcf4\ub4e4\uc744 \uc800\uc7a5\ud55c\ub2e4. \ud2b9\ud788 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158 \ucee4\ubc0b \uc2dc\uc5d0 \ud544\uc694\ud55c \uc815\ubcf4\ub97c \uc800\uc7a5\ud55c\ub2e4. \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ud2b8\ub79c\uc7ad\uc158\uc774 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc774\uba74 \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 TopTransactionContext\uc640 \ub3d9\uc77c\ud558\ub2e4. \ubc18\ub300\ub85c \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc778 \uacbd\uc6b0 child context\ub97c \uac00\ub9ac\ud0a8\ub2e4. \ud558\ub098\uc758 \ud2b8\ub79c\uc7ad\uc158\uc774 \uc885\ub8cc(abort)\ub418\uba74 \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158\uc758 CurTransactionContext\ub294 \uc885\ub8cc \ucc98\ub9ac\ub97c \ub05d\ub0b8 \ub4a4 \uc81c\uac70(thrown away)\ub41c\ub2e4. \ud558\uc9c0\ub9cc \ucee4\ubc0b\ub41c \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 CurTransactionContext\ub294 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc774 \ucee4\ubc0b\ub420 \ub54c\uae4c\uc9c0 \uc720\uc9c0\ub41c\ub2e4. \uc774\ub7f0 \ub9e4\ucee4\ub2c8\uc998\uc740 \uc2e4\ud328\ud55c \ud2b8\ub79c\uc7ad\uc158\uc758 \ub370\uc774\ud130\ub97c \ud544\uc694 \uc774\uc0c1\uc73c\ub85c \uc624\ub798 \uc720\uc9c0\ud558\ub294 \uac83\uc744 \ub9c9\ub294\ub2e4. \uc774\ub7f0 \ud2b9\uc131 \ub54c\ubb38\uc5d0, \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158 \uc911\ub2e8(abort) \uacfc\uc815\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \uc801\uc808\ud788 \ud574\uc81c\ud574\uc8fc\ub294\ub370 \uc2e0\uacbd \uc368\uc57c \ud55c\ub2e4. \uc911\ub2e8\ub41c \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc0c1\ud0dc(\ub370\uc774\ud130)\ub294 \uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc5b4\ub5a4 \ud3ec\uc778\ud130\ub4e4\ub3c4 \uac00\ub9ac\ud0a4\uba74 \uc548\ub41c\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 dangling(\uc774\ubbf8 \ud574\uc81c\ub41c \uacf5\uac04\uc744 \uac00\ub9ac\ud0a4\ub294) \ud3ec\uc778\ud130\ub97c \uac00\uc9c0\uac8c \ub418\uace0 \uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \ucee4\ubc0b\uc5d0\uc11c \uc0ac\uace0\ub97c \uc720\ubc1c\ud55c\ub2e4. CurTransactionContext\uc5d0 \uc800\uc7a5\ub418\ub294 \ub370\uc774\ud130\uc758 \uc608\uc2dc\uc5d0\ub294 \ub300\uae30\uc911(pending)\uc778 NOTIFY \uba54\uc138\uc9c0\uac00 \uc788\ub2e4. \uc774 \uba54\uc138\uc9c0\ub4e4\uc740 \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \uc911\ub2e8 \uc5c6\uc774 \ucd5c\uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc758 \ucee4\ubc0b\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc804\uc1a1\ub41c\ub2e4. \ud558\uc704 \ud2b8\ub79c\uc7ad\uc158\uc5d0\uc11c \uc0c1\uc704 \ud2b8\ub79c\uc7ad\uc158\uc73c\ub85c \uc804\uc1a1\ud55c\ub2e4.","title":"CurTransactionContext"},{"location":"postgresql/mmgr/#portalcontext","text":"\uc774\uac83\uc740 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc874\uc7ac\ud558\ub294 \ud2b8\ub79c\uc7ad\uc158\uc740 \uc544\ub2c8\ub2e4. \ud604\uc7ac \ud65c\uc131\ud654\ub41c execution portal\uc758 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uac00\ub9ac\ud0a4\ub294 \uc804\uc5ed \ubcc0\uc218\uc774\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud604\uc7ac portal\uc774 \uc694\uad6c\ud558\ub294 \ub9cc\ud07c \uc9c0\uc18d\ub418\uc5b4\uc57c \ud558\ub294 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub294\ub370 \ud544\uc694\ud55c \uacf5\uac04\uc744 \ud560\ub2f9\ud558\ub294\ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.","title":"PortalContext"},{"location":"postgresql/mmgr/#errorcontext","text":"\uc601\uad6c\uc801\uc778 \ucee8\ud14d\uc2a4\ud2b8\uc774\ub2e4. \uc5d0\ub7ec \ubcf5\uad6c(recovery) \uacfc\uc815\uc5d0\uc11c \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub85c \uc804\ud658\ub418\uace0 recovery\uac00 \uc644\ub8cc\ub418\uba74 \ub9ac\uc14b\ub41c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8\ub294 \ud56d\uc0c1 \uba87 KB\uc758 \uacf5\uac04\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ubc31\uc5d4\ub4dc\uc758 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud558\ub354\ub77c\ub3c4 \uc5d0\ub7ec \ubcf5\uad6c\ub97c \uc704\ud55c \uba54\ubaa8\ub9ac\ub294 \ubcf4\uc7a5\ub41c\ub2e4. \uc774 \ucee8\ud14d\uc2a4\ud2b8 \ub355\ubd84\uc5d0 out-of-memory \uc0c1\ud669\ub3c4 FATAL error\uac00 \uc544\ub2cc normal error\ub85c \ub300\uc751\ud560 \uc218 \uc788\ub2e4.","title":"ErrorContext"},{"location":"postgresql/mmgr/#references","text":"PostgreSQL \uc18c\uc2a4\ucf54\ub4dc mmgr/README","title":"references"},{"location":"unix/process-relationships/","text":"[UNIX] session POSIX 1.1\uc5d0\uc11c \ub3c4\uc785\ud55c \uc138\uc158(session)\uc774\ub77c\ub294 \uac1c\ub150\uc5d0 \ub300\ud55c \uc18c\uac1c \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\ub294 pid\ub97c \uac00\uc9c0\uba70 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0 \uc18d\ud55c\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \ud55c \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \uad6c\uc131\ub41c \uc9d1\ud569\uc774\uace0 pgid\ub97c \uac00\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc8fc\ub85c \uac19\uc740 \uc791\uc5c5 \uc744 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub4e4\uc758 \uc9d1\ud569\uc774\uace0 \uac19\uc740 \ud130\ubbf8\ub110\ub85c\ubd80\ud130 \uc2e0\ud638 \ub97c \ubc1b\ub294\ub2e4 shell pipeline( | )\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4 proc1 | proc2 & proc3 | proc4 | proc5 proc1, proc2\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud558\uace0 proc3, proc4, proc5\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud55c\ub2e4 & \uae30\ud638\ub294 proc1, proc2\ub97c background process group\uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4 #include <unistd.h> /** * pid\uac00 0\uc774\uba74 \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uc758 pgid\ub97c \ubc18\ud658\ud55c\ub2e4 * \uc2e4\ud328\ud560 \uacbd\uc6b0 -1\uc744 \ubc18\ud658\ud55c\ub2e4 */ pid_t getpgid(pid_t pid) \uadf8\ub8f9 \ub9ac\ub354 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0\ub294 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc874\uc7ac\ud558\ub294\ub370 pid\uac12\uc774 pgid\uc640 \ub3d9\uc77c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uc774\ub2e4 \uadf8\ub8f9 \ub9ac\ub354\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud55c \ud504\ub85c\uc138\uc2a4\uc774\uace0 \uadf8\ub8f9 \uc548\uc5d0 \ud504\ub85c\uc138\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc885\ub8cc\ub418\uc5b4\ub3c4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc5ec\uc804\ud788 \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uac00 \uc885\ub8cc\ub418\uc5b4\uc57c \uadf8\ub8f9\uc774 \uc0ac\ub77c\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4\ub294 \uc790\uc2e0\uc758 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4 \uc138\uc158 \uc138\uc158\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \uc9d1\ud569\uc774\ub2e4 #include <unistd.h> /** * \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ud504\ub85c\uc138\uc2a4 \ub9ac\ub354\uc774\uba74 \uc2e4\ud328(-1 \ubc18\ud658) * \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c8 \uc138\uc158\uc744 \uc0dd\uc131\ud558\uace0 pgid \ubc18\ud658 */ pid_t setsid(void); \uc704\uc758 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc744 \uc0dd\uc131\ud55c\ub2e4 setsid \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \ud504\ub85c\uc138\uc2a4\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc758 \ub9ac\ub354\uc778 \ub3d9\uc2dc\uc5d0 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \ub9ac\ub354\uac00 \ub41c\ub2e4 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc774 \ud55c \uac1c \uc788\uace0 \uadf8 \uadf8\ub8f9\uc5d0 \ud504\ub85c\uc138\uc2a4\ub294 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4 \ud55c\uac1c\uc774\ub2e4 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4\uac00 \ud568\uc218 \ud638\ucd9c \uc804\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uadf8 \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc\uc758 \uc5f0\uacb0 \uad00\uacc4 \uac00 \ub04a\uc5b4\uc9c4\ub2e4 open\ud55c\uac8c \uc790\ub3d9\uc73c\ub85c \ub2eb\ud78c\ub2e4\ub294 \ub73b\uc778\uac00? \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc544\ub2d8\uc744 \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 fork\ub97c \ud638\ucd9c\ud55c \ub4a4 \ubd80\ubaa8\ub294 \uc885\ub8cc\ud558\uace0 \uc790\uc2dd\uc740 \uacc4\uc18d \uc2e4\ud589\ud558\ub294 \uac83\uc774\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110 \uc138\uc158\uc5d0\ub294 \ud558\ub098\uc758 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4(\uc5c6\uc744 \uc218\ub3c4 \uc788\ub2e4) \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc \uc5f0\uacb0 \uc744 \ud655\ub9bd\ud55c \uc138\uc158 \ub9ac\ub354\ub97c \uc81c\uc5b4 \ud504\ub85c\uc138\uc2a4\ub77c\uace0 \ud55c\ub2e4 \uc138\uc158\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 background group, foreground group\uc73c\ub85c \ubd84\ub958\ud560 \uc218 \uc788\ub2e4 foreground \uadf8\ub8f9\uc740 \ud55c \uac1c, background group\uc740 \ud558\ub098 \uc774\uc0c1 \uc788\uc744 \uc218 \uc788\ub2e4 \uc138\uc158\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc788\uc73c\uba74 \uadf8 \uc138\uc158\uc5d0\ub294 \ubc18\ub4dc\uc2dc \ud558\ub098\uc758 foreground process \uadf8\ub8f9\uc774 \uc788\ub2e4 \ud130\ubbf8\ub110\uc5d0\uc11c interrupt key(e.g. ctrl-c)\ub97c \uc785\ub825\ud558\uba74 foreground group\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uc5d0\uac8c signal\uc774 \uc804\ub2ec\ub41c\ub2e4 /dev/tty \ud45c\uc900 \uc785\ucd9c\ub825 \ub9ac\ub2e4\uc774\ub809\uc158 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc785\ucd9c\ub825 \ub300\uc0c1\uc774 \ud130\ubbf8\ub110\uc774 \ub418\ub3c4\ub85d \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 /dev/tty device file\uc744 open\ud558\ub294 \uac83\uc774\ub2e4 \ucee4\ub110\uc740 \uc774 \ud30c\uc77c\uc744 \uc81c\uc5b4 \ud130\ubbf8\ub110\ub85c \uc778\uc2dd\ud55c\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5c6\ub294 \ud504\ub85c\uc138\uc2a4\uac00 /dev/tty \ub97c open\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba74 \uc2e4\ud328\ud55c\ub2e4 \uc2e4\uc2b5 procinfo.c cli \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \ud504\ub85c\uc138\uc2a4\uc758 \uadf8\ub8f9 \uc544\uc774\ub514\uc640 \uc138\uc158 \uc544\uc774\ub514\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 #include <stdio.h> #include <unistd.h> #include <stdlib.h> int main(int argc, const char *argv[]) { if (argc == 1) return 1; pid_t tpid = atoi(argv[1]); printf(\"[%s] pid: %d pgid: %d sid: %d\\n\", argv[0], tpid, getpgid(tpid), getsid(tpid)); return 0; } amplify.c \ud45c\uc900\uc785\ub825\uc5d0\uc11c \uc77d\uc740 \ubb38\uc790\uc5f4\uc744 \ud45c\uc900 \ucd9c\ub825\uacfc \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5ec\ub7ec \ubc88 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 amplify < input.txt > output.txt \uc640 \uac19\uc774 \uc2e4\ud589(stdin, stdout \ub9ac\ub2e4\uc774\ub809\uc158)\ud558\ub354\ub77c\ub3c4 \ud130\ubbf8\ub110\uc5d0 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \ubcf4\uc7a5\ub41c\ub2e4 #include <unistd.h> #include <fcntl.h> #include <string.h> #include <stdio.h> #include <stdlib.h> void printn2stdout(const unsigned char str[], int n) { for (int i = 0; i < n; i++) printf(\"%s\\n\", str); } void print2control_terminal(const unsigned char str[]) { int tfd; tfd = open(\"/dev/tty\", O_WRONLY); if (tfd < 0) return; unsigned char buffer[7*128]; memset(buffer, '\\0', 7*128); snprintf(buffer, sizeof(buffer), \"\\033[31m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[32m%s\\033[0m\\n\" \"\\033[34m%s\\033[0m\\n\" \"\\033[36m%s\\033[0m\\n\" \"\\033[35m%s\\033[0m\\n\", str, str, str, str, str, str, str); write(tfd, buffer, 7*128); close(tfd); } int main(int argc, const char *argv[]) { int n = 7; if (argc == 2) n = atoi(argv[1]); unsigned char str[128]; memset(str, '\\0', 128); fgets(str, sizeof(str), stdin); if (str[strlen(str) - 1] == '\\n') str[strlen(str) - 1] = '\\0'; print2control_terminal(str); printn2stdout(str, n); return 0; } \ucd9c\ucc98 APUE3e","title":"\uc138\uc158"},{"location":"unix/process-relationships/#unix-session","text":"POSIX 1.1\uc5d0\uc11c \ub3c4\uc785\ud55c \uc138\uc158(session)\uc774\ub77c\ub294 \uac1c\ub150\uc5d0 \ub300\ud55c \uc18c\uac1c","title":"[UNIX] session"},{"location":"unix/process-relationships/#_1","text":"\ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\ub294 pid\ub97c \uac00\uc9c0\uba70 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0 \uc18d\ud55c\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \ud55c \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \uad6c\uc131\ub41c \uc9d1\ud569\uc774\uace0 pgid\ub97c \uac00\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc8fc\ub85c \uac19\uc740 \uc791\uc5c5 \uc744 \ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub4e4\uc758 \uc9d1\ud569\uc774\uace0 \uac19\uc740 \ud130\ubbf8\ub110\ub85c\ubd80\ud130 \uc2e0\ud638 \ub97c \ubc1b\ub294\ub2e4 shell pipeline( | )\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4 proc1 | proc2 & proc3 | proc4 | proc5 proc1, proc2\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud558\uace0 proc3, proc4, proc5\uac00 \ud558\ub098\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \ud615\uc131\ud55c\ub2e4 & \uae30\ud638\ub294 proc1, proc2\ub97c background process group\uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4 #include <unistd.h> /** * pid\uac00 0\uc774\uba74 \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uc758 pgid\ub97c \ubc18\ud658\ud55c\ub2e4 * \uc2e4\ud328\ud560 \uacbd\uc6b0 -1\uc744 \ubc18\ud658\ud55c\ub2e4 */ pid_t getpgid(pid_t pid)","title":"\ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9"},{"location":"unix/process-relationships/#_2","text":"\ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc5d0\ub294 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc874\uc7ac\ud558\ub294\ub370 pid\uac12\uc774 pgid\uc640 \ub3d9\uc77c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uc774\ub2e4 \uadf8\ub8f9 \ub9ac\ub354\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud55c \ud504\ub85c\uc138\uc2a4\uc774\uace0 \uadf8\ub8f9 \uc548\uc5d0 \ud504\ub85c\uc138\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc885\ub8cc\ub418\uc5b4\ub3c4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 \uc5ec\uc804\ud788 \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 \ub0b4\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uac00 \uc885\ub8cc\ub418\uc5b4\uc57c \uadf8\ub8f9\uc774 \uc0ac\ub77c\uc9c4\ub2e4 \ud504\ub85c\uc138\uc2a4\ub294 \uc790\uc2e0\uc758 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4","title":"\uadf8\ub8f9 \ub9ac\ub354"},{"location":"unix/process-relationships/#_3","text":"\uc138\uc158\uc740 \ud558\ub098 \uc774\uc0c1\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \uc9d1\ud569\uc774\ub2e4 #include <unistd.h> /** * \ud638\ucd9c\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ud504\ub85c\uc138\uc2a4 \ub9ac\ub354\uc774\uba74 \uc2e4\ud328(-1 \ubc18\ud658) * \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c8 \uc138\uc158\uc744 \uc0dd\uc131\ud558\uace0 pgid \ubc18\ud658 */ pid_t setsid(void); \uc704\uc758 \ud568\uc218\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc744 \uc0dd\uc131\ud55c\ub2e4 setsid \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \ud504\ub85c\uc138\uc2a4\ub294 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc758 \ub9ac\ub354\uc778 \ub3d9\uc2dc\uc5d0 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc758 \ub9ac\ub354\uac00 \ub41c\ub2e4 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc131\uacf5\ud55c \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 \uc138\uc158\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc774 \ud55c \uac1c \uc788\uace0 \uadf8 \uadf8\ub8f9\uc5d0 \ud504\ub85c\uc138\uc2a4\ub294 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4 \ud55c\uac1c\uc774\ub2e4 \ud638\ucd9c \ud504\ub85c\uc138\uc2a4\uac00 \ud568\uc218 \ud638\ucd9c \uc804\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uadf8 \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc\uc758 \uc5f0\uacb0 \uad00\uacc4 \uac00 \ub04a\uc5b4\uc9c4\ub2e4 open\ud55c\uac8c \uc790\ub3d9\uc73c\ub85c \ub2eb\ud78c\ub2e4\ub294 \ub73b\uc778\uac00? \ud504\ub85c\uc138\uc2a4\uac00 \uadf8\ub8f9 \ub9ac\ub354\uac00 \uc544\ub2d8\uc744 \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 fork\ub97c \ud638\ucd9c\ud55c \ub4a4 \ubd80\ubaa8\ub294 \uc885\ub8cc\ud558\uace0 \uc790\uc2dd\uc740 \uacc4\uc18d \uc2e4\ud589\ud558\ub294 \uac83\uc774\ub2e4","title":"\uc138\uc158"},{"location":"unix/process-relationships/#_4","text":"\uc138\uc158\uc5d0\ub294 \ud558\ub098\uc758 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4(\uc5c6\uc744 \uc218\ub3c4 \uc788\ub2e4) \uc81c\uc5b4 \ud130\ubbf8\ub110\uacfc \uc5f0\uacb0 \uc744 \ud655\ub9bd\ud55c \uc138\uc158 \ub9ac\ub354\ub97c \uc81c\uc5b4 \ud504\ub85c\uc138\uc2a4\ub77c\uace0 \ud55c\ub2e4 \uc138\uc158\uc758 \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9\uc740 background group, foreground group\uc73c\ub85c \ubd84\ub958\ud560 \uc218 \uc788\ub2e4 foreground \uadf8\ub8f9\uc740 \ud55c \uac1c, background group\uc740 \ud558\ub098 \uc774\uc0c1 \uc788\uc744 \uc218 \uc788\ub2e4 \uc138\uc158\uc5d0 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc788\uc73c\uba74 \uadf8 \uc138\uc158\uc5d0\ub294 \ubc18\ub4dc\uc2dc \ud558\ub098\uc758 foreground process \uadf8\ub8f9\uc774 \uc788\ub2e4 \ud130\ubbf8\ub110\uc5d0\uc11c interrupt key(e.g. ctrl-c)\ub97c \uc785\ub825\ud558\uba74 foreground group\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc138\uc2a4\uc5d0\uac8c signal\uc774 \uc804\ub2ec\ub41c\ub2e4","title":"\uc81c\uc5b4 \ud130\ubbf8\ub110"},{"location":"unix/process-relationships/#devtty","text":"\ud45c\uc900 \uc785\ucd9c\ub825 \ub9ac\ub2e4\uc774\ub809\uc158 \uc5ec\ubd80\uc5d0 \uad00\uacc4\uc5c6\uc774 \uc785\ucd9c\ub825 \ub300\uc0c1\uc774 \ud130\ubbf8\ub110\uc774 \ub418\ub3c4\ub85d \ubcf4\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 /dev/tty device file\uc744 open\ud558\ub294 \uac83\uc774\ub2e4 \ucee4\ub110\uc740 \uc774 \ud30c\uc77c\uc744 \uc81c\uc5b4 \ud130\ubbf8\ub110\ub85c \uc778\uc2dd\ud55c\ub2e4 \uc81c\uc5b4 \ud130\ubbf8\ub110\uc774 \uc5c6\ub294 \ud504\ub85c\uc138\uc2a4\uac00 /dev/tty \ub97c open\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba74 \uc2e4\ud328\ud55c\ub2e4","title":"/dev/tty"},{"location":"unix/process-relationships/#_5","text":"","title":"\uc2e4\uc2b5"},{"location":"unix/process-relationships/#procinfoc","text":"cli \uc778\uc790\ub85c \uc804\ub2ec\ubc1b\uc740 \ud504\ub85c\uc138\uc2a4\uc758 \uadf8\ub8f9 \uc544\uc774\ub514\uc640 \uc138\uc158 \uc544\uc774\ub514\ub97c \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 #include <stdio.h> #include <unistd.h> #include <stdlib.h> int main(int argc, const char *argv[]) { if (argc == 1) return 1; pid_t tpid = atoi(argv[1]); printf(\"[%s] pid: %d pgid: %d sid: %d\\n\", argv[0], tpid, getpgid(tpid), getsid(tpid)); return 0; }","title":"procinfo.c"},{"location":"unix/process-relationships/#amplifyc","text":"\ud45c\uc900\uc785\ub825\uc5d0\uc11c \uc77d\uc740 \ubb38\uc790\uc5f4\uc744 \ud45c\uc900 \ucd9c\ub825\uacfc \uc81c\uc5b4 \ud130\ubbf8\ub110\uc5d0 \uc5ec\ub7ec \ubc88 \ucd9c\ub825\ud558\ub294 \ud504\ub85c\uadf8\ub7a8 amplify < input.txt > output.txt \uc640 \uac19\uc774 \uc2e4\ud589(stdin, stdout \ub9ac\ub2e4\uc774\ub809\uc158)\ud558\ub354\ub77c\ub3c4 \ud130\ubbf8\ub110\uc5d0 \ubb38\uc790\uc5f4\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \ubcf4\uc7a5\ub41c\ub2e4 #include <unistd.h> #include <fcntl.h> #include <string.h> #include <stdio.h> #include <stdlib.h> void printn2stdout(const unsigned char str[], int n) { for (int i = 0; i < n; i++) printf(\"%s\\n\", str); } void print2control_terminal(const unsigned char str[]) { int tfd; tfd = open(\"/dev/tty\", O_WRONLY); if (tfd < 0) return; unsigned char buffer[7*128]; memset(buffer, '\\0', 7*128); snprintf(buffer, sizeof(buffer), \"\\033[31m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[33m%s\\033[0m\\n\" \"\\033[32m%s\\033[0m\\n\" \"\\033[34m%s\\033[0m\\n\" \"\\033[36m%s\\033[0m\\n\" \"\\033[35m%s\\033[0m\\n\", str, str, str, str, str, str, str); write(tfd, buffer, 7*128); close(tfd); } int main(int argc, const char *argv[]) { int n = 7; if (argc == 2) n = atoi(argv[1]); unsigned char str[128]; memset(str, '\\0', 128); fgets(str, sizeof(str), stdin); if (str[strlen(str) - 1] == '\\n') str[strlen(str) - 1] = '\\0'; print2control_terminal(str); printn2stdout(str, n); return 0; }","title":"amplify.c"},{"location":"unix/process-relationships/#_6","text":"APUE3e","title":"\ucd9c\ucc98"}]}